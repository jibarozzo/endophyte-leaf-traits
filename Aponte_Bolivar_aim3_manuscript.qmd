---
title: "Evaluating the Role of Endophyte-Rich Leaves in Protecting Tropical Trees Against a Generalist Herbivore and a Pathogen"
date: today
bibliography: references.yaml
#csl: functional-ecology.csl
csl: apa.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolon@tulane.edu
    corresponding: true
    equal-contributor: false
    affiliations:
      - ref: tu
    # affiliation: 
    #   - id: tu
    #     name: Tulane University
    #     department: Ecology and Evolutionary Biology
    #     city: New Orleans
    #     state: LA
    #     country: US
    #     url: www.tulane.edu
  - name: A. Elizabeth Arnold
    orcid: 0000-0002-7013-4026
    email: arnold@ag.arizona.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: ua
      #- ref: ua2
      
    # affiliation: 
    #   - id: ua
    #     name: University of Arizona
    #     department: School of Plant Sciences
    #     city: Tucson
    #     state: AZ
    #     country: US
    #     url: www.arizona.edu
    #   - id: ua2
    #     name: University of Arizona
    #     department: Department of Ecology and Evolutionary Biology
    #     city: Tucson
    #     state: AZ
    #     country: US
    #     url: www.arizona.edu
  - name: Mareli Sánchez Juliá
    email: msanchezjulia@tulane.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: tu
    # affiliation: 
    #   - id: tu
    #     name: Tulane University
    #     department: Ecology and Evolutionary Biology
    #     city: New Orleans
    #     state: LA
    #     country: US
    #     url: www.tulane.edu  
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: tu
    affiliation: 
      - ref: tu
      
affiliations:
  - id: tu
    name: Department of Ecology and Evolutionary Biology, Tulane University, 6823 St. Charles Avenue, New Orleans, LA 70118
  - id: ua
    name: School of Plant Sciences, Department of Ecology and Evolutionary Biology, Robert L. Gilbertson Mycological Herbarium. Ecosystem Genomics Graduate Interdisciplinary Program, and the Bio5 Institute, University of Arizona, Tucson, AZ 85721
  - id: ua2
    name: Department of Ecology and Evolutionary Biology and the Bio5 Institute, University of Arizona, Tucson, AZ 85721

filters:
  - authors-block

format:
  # pdf:
  #   documentclass: scrartcl
  #   include-in-header:
  #       text: '\usepackage{lineno}\linenumbers'
  #   linestretch: 2.0
  #   margin-left: 1in
  #   margin-right: 1in
  #   margin-top: 1in
  #   margin-bottom: 1in
  #   mainfont: TeX Gyre Termes #Alternative to Times New Roman
  #   sansfont: TeX Gyre Termes #Another option is Liberation Serif
  #   number-sections: true
  #   citation-package: biblatex
  #   #keep_tex: true
  #   keep_md: true
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    tbl-colwidths: true
    #linestretch: 2.0
    citation-package: biblatex
crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Fig. S
      space-before-numbering: false
      latex-list-of-description: Supplementary Figure
    
editor: source
execute:
  echo: false
warning: false
---

```{r}
#| echo: false
#| eval: true
knitr::opts_chunk$set(ft.tabcolsep=0)
```

```{r, Packages}
#| echo: false
#| eval: true
#| warning: false
# Data manipulation and visualizations ####
library("tidyverse")
library("conflicted")
library("devtools")
library("ggfortify")
library("ggiraph")
library("ggiraphExtra")
library("ggpubr")
library("gridExtra")
library("ggthemes")
library("showtext") # For special characters in ggplot2
library("ggtext")
library("ggpmisc")
library("plotrix")
library("MetBrewer")
library("lattice")


# Tables and housekeeping
library("janitor")
library("flextable")
library("huxtable")
library("gt")
library("gtsummary")
library("officer")
library("broom")
library("broom.mixed")
library("broom.helpers")
library("formatR")
library("data.table")
library("kableExtra")

# Stats ####

library("vegan")
library("nlme")
library("MASS")
library("MuMIn")
library("car") #For type 3 Anova with Anova() function.
library("PerformanceAnalytics")
library("corrr")
library("permute")

library("pls")
library("buildmer")
library("lme4")
library("sjPlot")
library("indicspecies")
library("rstatix")

# Phylogenetic analyses #source("https://raw.githubusercontent.com/joey711/phyloseq/master/inst/scripts/installer.R",local = TRUE)
library("mgcv")
library("phyloseq")
library("ape")
library("metagMisc")
#remotes::install_github("vmikk/metagMisc")
#library("speedyseq")
#source("http://bioconductor.org/biocLite.R")


# Preference of conflicted functions among packages ####
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer_all("phyloseq")
```


# Abstract

Plants use chemical compounds and physical barriers to defend themselves against natural enemies. For instance, tough leaves are better defended than soft leaves and we can measure this spectrum of defenses via leaf functional traits (LFTs). Leaf traits such as leaf chemistry, lifespan, toughness, and leaf mass per area often are a plant’s first line of defense. Plants with longer lifespans that invest more in leaf tissue and higher leaf mass per area (LMA) typically feature robust constitutive defenses (e.g., leaf toughness, thickness, and dense cell walls) as well. In contrast, plants that invest more in leaf nutrients and have low LMA often invest more in induced defenses. Whether constitutive or induced, leaf traits represent an environmental filter for foliar endophytic fungi (FEF), which may play an additional role in plant defense. Our overarching assumption is that FEF alter leaf fate by interacting directly or indirectly with leaf traits, thus reshaping successive FEF colonization, development of leaf traits and response to plant enemies. To evaluate this hypothesis, we inoculated seedlings of seven tropical tree species that varied in leaf traits with natural and diverse endophyte communities. We confirmed the success of our inoculations of low FEF load (*E-low*) and high FEF load (*E-high*) treatment groups via culturing and culture-free amplicon sequencing. We then measured leaf removal by leaf-cutter ants and leaf necrosis due to a generalist fungal pathogen. Across the experiment, we observed greater herbivory in the *E-low* treatment compared to the *E-high* treatment, but no difference in pathogen damage. However, within *E-low* and *E-high* treatment groups, leaves exposed to pathogen had greater leaf damage than non-exposed leaves . Dimensionality reduction of LFTs (i.e., LMA, toughness, thickness, and anthocyanin levels) revealed relationships among traits and distinct host species characteristics. All LFTs had significant correlations with FEF community composition. In turn, indicator species analyses revealed functional traits and taxonomic identities of FEF associated with high- and low leaf damage by natural enemies, suggesting new insights into cryptic roles of foliar symbionts in extending and modifying plant defenses in tropical forests.

# Keywords:

*Atta colombica*, *Calonectria*, foliar fungal endophytes, herbivory, pathogen, symbioses, tropical trees

# Introduction

<!-- Vascular plants encountered many challenges in their expansion inland: new climates, rising CO~2~ [@leakey2012],  unique substrates, and stressors like water limitation that required innovations in both allocation and transfer (CITE).  -->
Angiosperms have been successful throughout their evolutionary history by developing strategies against biotic [@feild2005] and abiotic [@leakey2012] selective pressures. Strategies against stressors that damage leaf tissue range from  production of secondary metabolites like alkaloid and jasmonic acid [@guerriero2018; @teoh2016] to structures that prevent potential attacks by pests (e.g., thorns/modified leaves)[@hanley2007]. Leaf functional traits (LFTs) within the leaf economic spectrum (LES) such as shape, leaf thickness, leaf strength, leaf mass per area (LMA), along with additional traits like anthocyanin levels, confer plants with strategies to ward off foliar herbivores and pathogens - key selective pressures in evolution [@niklas2023; @anderson2010; @wright2004].

Leaf defenses can be placed conceptually along the LES, which on one end has short-lived leaves with high nitrogen (N) content, low leaf mass per area (LMA), thin  leaf blades, and thin cell walls, and on the other end, long-lived leaves with low N content, high LMA, thick leaf blades and thick cell walls [@mason2015; @wright2004]. Investment in baseline constitutive defenses is associated with longer lifespans [@kitajima2012; @kitajima2013], whereas plants that invest little in leaf N content and LMA are potentially able to invest more in induced defense [@kitajima2013; @poorter2006; @wright2004]. 
Such LFTs are expressed differentially across species and are influenced by their life history and the environment they occupy [@kitajima2013; @wright2005; @wright2004]. Because they define the chemical, structural, and longevity characteristics of leaves, LFTs also influence associated leaf microbial communities [@saunders2010; @tellezTraits2022]. Many leaf-associated microbes establish in leaves via horizontal transmission and are thought to alter the physical and chemical traits of leaves [reviewed in @christian2017; @chagas2018; @vanbael2017a]. If leaf traits confer selectivity, then plants can gain or lose potential allies in the fight against herbivores and pathogens, ultimately contributing to their ecological and evolutionary success [@friesen2011].

Leaf microbial communities, such as foliar endophytic fungi (FEF), are found inside the leaf tissue of all lineages of vascular land plants [@currie2014; @rodriguez2009]. In tropical forests, FEF transmit horizontally through ambient spore fall [@arnold2000], and newly flushed leaves of such trees are free of FEF. Although FEF generally grow asymptomatically within leaves [@porras-alfaro2011], they can modulate LFTs, especially with regard to the expression of secondary metabolites, sensitivity to drought, defense against natural enemies, photosynthetic rates and efficiency [@arnold2003; @arnold2007; @friesen2011; @bittleston2011; @estrada2013; @mejia2014]. Such effects have not been examined systematically and quantitatively but are critical to understanding how species interactions in tropical forests relate to plant survival, performance, productivity, and downstream ecosystem services [@mcgill2006].

FEF communities occurring in healthy leaves of naturally established tropical trees vary with specific LFTs. Tellez et al. [-@tellezTraits2022] emphasized tested the hypothesis the abundance, diversity and FEF composition can be explained by leaf traits in the LES and found that FEF were less abundant and diverse in thick, tough long-lived leaves compared to thin, softer leaves from the same forest. The FEF community composition and capacity to produce defensive compounds varied in response to leaf traits in opposing ends of the LES [@tellezTraits2022]. These results extend the LES framework by including diverse and ecologically important fungi. The potential of FEF to alter where plants fall in the LES offers a useful lens to ask: what is the role of FEF in plant defenses against herbivores and pathogens and what trade-offs may be relevant in plant-enemy interactions.

Here we investigated how FEF abundance, diversity and community composition may modulate LFTs and plant's response to herbivory and pathogen damage. This work builds upon experiments that used single plant species and plant enemies [@estrada2013; @mejia2008; @mejia2014] by incorporating seven phylogenetically distinct tropical tree species and two functional classes of plant enemies. We hypothesized that FEF improve leaf defenses against generalist herbivores and pathogens, especially in plants that invest less in constitutive defenses (e.g., thin and short-lived leaves). Alternatively, plants that invest more in constitutive defenses (e.g., thick leaves and long-lived) rely less on FEF improved defenses against plant enemies. 

To test our hypothesis we designed an experiment that allowed tropical tree seedlings to be naturally inoculated with FEF. We then measured leaf damage (herbivory and pathogen infection) and a subset of LFTs: leaf mass per area (LMA), leaf thickness (LT), leaf toughness-measured as leaf punch strength (LPS)-, and anthocyanins (ACI), in response to inoculated (high FEF load, *E-high*) and non-inoculated (low FEF load, *E-low*) treatments. The plant enemies we considered were leaf-cutter ants, *Atta colombica* (Formicidae), a generalist herbivore that, while not consuming the leaves, harvests considerable quantities of leaf tissue to feed underground fungal gardens, and *Calonectria* sp. (Nectriaceae), a generalist foliar pathogen. 

We predicted the following: 1) Leaf-cutter ants and *Calonectria* sp. would cause less leaf damage (herbivory through leaf tissue removal and leaf necrosis through pathogen infection, respectively) on leaves with higher FEF abundance, richness and diversity; 2) Tree species with LFTs on the low end of the economic spectrum (e.g., lower leaf mass per area) would have less herbivory and pathogen damage when treated with high FEF loads (*E-high*) compared to their low FEF counterparts (*E-low*); 3) Conversely, tree species with LFTs of the high side of the economic spectrum (e.g., greater leaf mass per area) treated with high FEF loads (*E-high*) would have no differences in herbivory and pathogen damage compared to their low FEF counterparts (*E-low*). Lastly, 4) we anticipated that leaves with LFTs on the high end of the economic spectrum would be experience less herbivory by leaf-cutter ants, but low FEF loads (*E-low*) in them could increase allurement.

<!-- To test our predictions, we addressed the following questions: -->

<!-- 1.  How do FEF high and low treatment differs in terms of abundance, richness, diversity, and community composition? -->

<!-- 2.  How do leaf functional traits differ between FEF high and low treatments? -->

<!-- 3.  What is the relationship between FEF abundance, richness, diversity and species composition and herbivory and pathogen damage? -->

<!-- 4.  What is the relationship between leaf functional traits and herbivory or pathogen damage in high and low FEF treatment groups? -->

# Materials and Methods

### Study site and seedling rearing

*Theobroma cacao* (Malvaceae), *Dipteryx* sp. (Fabaceae), *Lacmellea panamensis* (Apocynaceae), *Apeiba membranacea* (Malvaceae), *Heisteria concinna* (Olacaceae), *Chrysophyllum cainito* (Sapotaceae), and *Cordia alliodora* (Cordiaceae) were chosen due to their variation in LFTs (J.Wright *unpublished data*). All occur naturally at Barro Colorado Island (BCI) in central Panama (9°050N, 79°450W), where we collected seeds from the forest floor from multiple maternal sources in January - April 2019. Average annual precipitation at BCI is 2,600 mm and the pronounced wet season ranges from May to December [@leigh1996]. In preparation for the experiment, seeds were surface sterilized by soaking in water and rinsing in sodium hypochlorite (NaClO) and ethanol (EtOH). Seeds from each species had a species-specific sterilization protocol due to the variation in sizes and seed coats (see Supplementary Materials). Seed germination and the subsequent experiment were carried out at the Santa Cruz Field Facility of the Smithsonian Tropical Research Institute in Gamboa, Panama (9°070N, 79°420W). We germinated and reared seedlings in a clean and shaded greenhouse where we enclosed four tables with a PVC pipe frame and covered them with a 3 mil clear plastic sheet, for a total of two plastic enclosures with two tables each. The enclosures allowed us to grow plants at ambient temperature and natural light while providing protection from rain and most fungal spores, thus yielding zero to low FEF densities in plants that were not actively inoculated through our manipulations (see below) [@bittleston2011]. We cleaned table surfaces and walls of the enclosures on a weekly basis with 70% EtOH and 0.5 % NaClO. We germinated seedlings in sterilized trays containing a 3:1 mix of soil and river sand that was autoclaved for two one-hour cycles at 121°C prior to planting. Individual seedlings were transferred from germination trays to a 24-cell tray (each cell \~380 mL) containing the same autoclaved soil and sand mixture. We took precautions to extract complete root systems from the seedlings. See Supplementary Materials for further details on plastic tray and pot sterilizations protocols.

Seedlings reached a minimum of 5-6 true leaves before endophyte inoculation. We placed seedlings on separate tables designated for spore fall inoculation and non-inoculated treatment groups within the enclosures. Seedlings of the same species but different treatment groups were in the same enclosure. We watered seedlings at the soil level to minimize endophyte spore germination in the enclosures [@arnold2003].

### Fungal endophyte inoculation

To inoculate seedlings with FEF, we took 10 individual seedlings of each species and exposed them over 10 nights to natural spore fall in the forest understory to achieve a high FEF load (*E-high*) and 10 plants were kept inside the greenhouse enclosure to maintain a low FEF load (*E-low*). Plants exposed to spore fall were placed on a table near (\~10 m) the forest edge at dusk (\~18:00 hours) and returned to the greenhouse at dawn (\~07:00 hours) [@bittleston2011]. We sprayed the *E-high* seedlings with water to simulate rain and to promote endophyte spore germination and infection of leaves. Low FEF plants (*E-low*) were watered only at the soil level and shuffled and moved inside the greenhouse to simulate similar treatment as *E-high* seedlings, but without spore fall exposure.

### Determining differences in LFTs between *E-high* and *E-low* treatments

#### Leaf trait measurements

Three mature leaves were haphazardly collected 7 - 10 days after fungal inoculation from individuals in each treatment (*E-high*, *E-low*) with 5 - 6 true leaves. Anthocyanin (ACI) content and leaf thickness (LT) were measured while the leaf was still attached to the plant. We measured anthocyanin content with an ACM-200plus anthocyanin content meter (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on three haphazardly selected locations (working from the petiole out to the leaf tip) on the leaf surface of three haphazardly selected leaves for a total of nine measurements per plant [@tellezTraits2022]. The ACM-200 takes into account leaf thickness when calculating an anthocyanin content index (ACI) value by computing the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@tellezRedCol2016]. On compound leaves (i.e., *Dipteryx* sp.) we measured at three different leaflets. Leaf thickness (μm) was measured with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) at six different points on the leaf lamina; at the base, mid-leaf and tip on both sides of the mid-vein, taking care to avoid major and secondary veins. After ACI and leaf LT measurements were completed, we removed the leaves from their stems, placed them inside a zip-top plastic bag in an ice chest and moved them to the lab for further measurements. Leaf punch strength (LPS) was measured with an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). Leaf punch measurements were taken at six locations on each leaf by puncturing the lamina at the base, mid-leaf and tip on both sides of the mid-vein, and avoiding minor leaf veins when possible [@tellezTraits2022]. Once LPS was measured, we used a 7 mm diameter hole punch to obtain three leaf disks per leaf for leaf mass per area (LMA) (see Supplementary material for details). Disk punches dried at 60 °C for 48-72 hours before being weighed for dry mass immediately. 

### Determining FEF abundance, richness, diversity and community composition

#### Leaf tissue preparation for molecular work

The same three leaves were pooled and used to profile FEF abundance, richness, and community composition via amplicon sequencing (Illumina MiSeq). The leaf tissue remaining after the leaf trait measurements had the main vein and margins excised so that only the laminae remained. The laminae were haphazardly cut into 2 x 2 mm segments, enough to obtain a total of 16, and surface sterilized by sequential rinsing in 95% ethanol (10 s), 0.5 NaOCl (2 mins) and 70% ethanol (2 mins) [@arnold2003; @higgins2014; @tellezTraits2022]. Leaves were then surface-dried briefly under sterile conditions. Sixteen leaf segments per leaf (i.e., forty-eight leaf segments per plant) were plated on the surface of 2% malt extract agar (MEA) in Petri dishes (60 mm), sealed with Parafilm M (Bemis Company Inc., U.S.A.) and incubated at room temperature. The cultured leaf segments were used to estimate FEF colonization of *E-low* and *E-high* leaves. The presence or absence of endophytic fungi in culture was assessed 7 days after plating. The remaining sterilized laminae were preserved in sterile 15 mL tubes with \~ 10 mL CTAB (1 M Tris--HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). Leaf tissue in CTAB was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a biosafety cabinet with all surfaces sterilized by exposure to UV light for 30 minutes and cleaned sequentially in between samples with 95% ethanol, 0.5% NaOCl and 70% ethanol to prevent cross contamination. Leaf tissue in CTAB was stored for 2 months at room temperature prior to storage at -80 °C for 3 months preceding DNA extraction

#### Amplicon sequencing

In preparation for DNA extraction, we decontaminated all instruments, materials, and surfaces with DNAway (Molecular BioProducts Inc., San Diego, CA, United States), 95% ethanol, 0.5% NaOCl, and 70 % ethanol, and subsequently treated with UV light for 30 minutes in biosafety cabinet.  We used sterile equipment and pipettes with aerosol-resistant tips with filters in all steps before amplification. From each sample in CTAB in we transferred 0.2 -- 0.3 g of leaf tissue into duplicate sterile 2mL tubes, resulting in 2 subsamples. Total genomic DNA from each subsample was extracted as described in U'Ren & Arnold [-@uren2017]. In brief, we added two sterile 3.2 mm stainless steel beads to each tube and proceeded to lyophilize samples for 72 hours to fully remove CTAB from tissue. Then we submerged the sample tubes in liquid nitrogen for 30s and homogenized samples to a fine powder for 45 s in FastPrep-24 Tissue and Cell Homogenizer (MP Biomedicals, Solon, OH, USA). We then repeated the decontamination procedure described before and used the QIAGEN DNeasy 96 PowerPlant Pro-HTP Kit [@uren2017] (QIAGEN, Valencia, CA, USA) to extract total genomic DNA. We pooled the subsamples for each individual sample before amplification. We followed a two-step amplification approach previously described by Sarmiento et al. [-@sarmiento2017] and U´Ren & Arnold [-@uren2017]. We used a separate set of sterile pipettes, tips, and equipment to reduce contamination. We used a designated PCR area to restrict contact with pre-PCR materials [@oita2021]. Used primers for the fungal ITSrDNA region, ITS1f (5'-CTTGGTCATTTAGAGGAAGTAA-3') and ITS4 (5'-TCCTCCGCTTATTGATATGC-3') with modified universal consensus sequences CS1 and CS2 and 0--5 bp for phase-shifting. Every sample was amplified in two parallel reactions containing 1-2 µL of DNA template [@uren2017; see also @tellezTraits2022]. We visualized PCR (PCR1) reactions with SYBR Green 1 (Thermo Fisher Scientific, Waltham, MA, USA.) on a 2% agarose gel [@oita2021]. Based on band intensity, we combined parallel PCR1 reactions and diluted 5 µL of amplicon product with molecular grade water to standardize to a concentration of 1:15 [@tellezTraits2022; @sarmiento2017]. We included DNA extraction blanks and PCR1 negatives in this step. We used 1 µL of PCR1 product from samples and negative control for a second PCR (PCR2) with barcode adapters (IBEST Genomics Resource Core, Moscow, ID, USA). Each PCR2 reaction (total 15 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix, 0.075 µM of barcoded primers (forward and reverse pooled at a concentration of 2 µM) and 0.24mg/mL of BSA following Sarmiento [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. Before final pooling for sequencing, we purified the amplicons using Agencourt AMPure XP Beads (Beckman Coulter Inc, Brea, CA USA) to a ratio of 1:1 following the manufacturer's instructions. The products were evaluated with Bio Analyzer 2100 (Agilent Technologies, Santa Clara, CA, USA) [@tellezTraits2022]. We quantified the samples through the University of Arizona Genetics Core, and subsequently diluted them to the same concentration to prevent over representation of samples with higher concentration [@sarmiento2017]. Amplicons were normalized to 1 ng/µL, then pooled 2 µL of each for sequencing. No contamination was detected visually or by fluorometric analysis. To provide robust controls we combined 5 µL of each PCR1 negative and the DNA extraction blanks and sequenced them as samples. Ultimately, we combined samples into a single tube with 20 ng/µL of amplified DNA with barcoded adapters for sequencing on the Illumina MiSeq platform with Reagent Kit v3 (2 × 300 bp) following protocols from the IBEST Genomics Resource Core at the University of Idaho, USA. Again, we included the DNA extraction blanks and two PCR1 negatives and sequenced with samples. 
<!-- Sequencing yielded 3,778,081 total ITS1 reads. -->

#### Mock Communities

We processed and sequenced a mock community following the methods described above. We had two aims: to understand the relationship between read abundance and biological abundance, and to determine whether primer bias might exclude fungal lineages of interest from our sequence data. We used two mock communities that consisted of PCR product from DNA extractions of 32 phylogenetically distinct fungi, representing lineages that are typically observed as endophytes: Ascomycota, Basidiomycota, fungi traditionally classified as Zygomycota, and Chytridiomycota [@oita2021; see @daru2019 for details]. In brief, we sequenced six replicates of the mock community with equimolar concentrations of DNA from all 32 fungal taxa, and another six replicates of the mock communities with tiered concentrations of DNA from the same fungal taxa [see @daru2019]. Read abundance from tiered communities was positively associated with the expected read number (*R^2^~adj~* = 0.87, *p* \< .0001, see Fig. S9), and all major fungal lineages present in the mock community were detected (data not shown).  Henceforth, we used read abundance as a relevant proxy for biological OTU abundance [@uren2019].

#### Bioinformatic analyses

We used VSEARCH (v2.14.1) for *de novo* chimera detection, dereplication, and assignment of sequences to operational taxonomic units (OTU). VSEARCH is an open-source alternative to USEARCH that uses an optimal global aligner (full dynamic programming Needleman-Wunsch), resulting in more accurate alignments and sensitivity [@rognes2016]. For mock communities and experimental samples, we used forward reads (ITS1) for downstream bioinformatics analyses due to their high quality, rather than reverse reads (ITS4). Following Sarmiento et al. [-@sarmiento2017], we concatenated all reads in a single file and used FastQC reports to assess Phred scores above 30 and determine the adequate length of truncation. We processed 892,713 sequence reads from mock communities and 3,778,081 from experimental samples. We truncated mock community and experimental sample reads to a length of 250 bp with command `fast_trunclen` and filtered them at a maximum expected error of 1.0 with command `fast_maxee`. We then clustered unique sequence zero radius OTUs (that is, zOTUs; analogous to amplicon sequence variants [@callahan2016]), by using commands `derep_fulllength` and `minseqlength` set at 2. Sequentially we denoised and removed chimeras from read sequences with commands `cluster_unoise`, and `uchime3_denovo`, respectively. Finally, we clustered zOTUs at a 95% sequence similarity with command `usearch_global` and option `id` set at 0.95. At that point, 3,035,960 sequence reads from experimental samples remained. Taxonomy was assigned with the Tree-Based Alignment Selector Toolkit [v2.2; @carbone2019] by placing unknowns within the Pezizomycotina v2 reference tree [@carbone2017], and blasting against the UNITE database via the ribosomal database project (RDP) classifier. A total of 2147 OTUs were obtained, with the combined taxonomic data sets revealing 68.6% Ascomycota, 26.8% Basidiomycota, and other fungal lineages either rare (e.g., <0.05% Chytridiomycota, Mortierellomycota) or unidentified (4.2 %). Only OTUs representing Ascomycota were used for downstream statistical analyses since foliar endophyte communities in tropical trees are dominated by Ascomycota [@arnold2007]. For each OTU identified, we removed laboratory contaminants from experimental samples by subtracting the average read count found in control samples from the DNA extraction and PCR steps. Our analysis of mock communities allowed use to identify and remove false OTUs from experimental samples, those with fewer than 10 reads, leading us to 0.1% of the read relative abundance across all samples [@oita2021]. Three experimental samples from *Theobroma cacao* (*n*=2) and *Apeiba membranacea* (*n*=1) were removed from all analyses due to incomplete entries. After pruning OTU with zero reads from experimental samples, we identified 260 OTUs found exclusively in control (*E-low*) plants (*n*=78) and deemed them as artifacts resulting from greenhouse conditions. They were eliminated from treatment (*E-high*) plants across all species. We converted reads for each fungal OTU to proportions of total sequence abundance per sample to reduce differences in sampling effort, following previous studies (@weiss2017). We then removed singletons and obtained an average of 2,464,558 sequence reads in 529 Ascomycota OTUs across 156 experimental samples of 7 tree species. All analyses after taxonomic assignment were performed in R [v. 4.3.3; @rcoreteam2024] using the `phyloseq` package [v.1.48.0, @mcmurdie2013] and custom scripts (see Supplementary Material).

### Determining herbivore and pathogen damage to *E-high* and *E-low* treatments

#### Herbivore assays

To assess leaf-cutter ant damage, we collected one extra leaf per plant per treatment, at the same time we collected samples for leaf trait measurements, and introduced it to an actively foraging leaf-cutter ant colony for a two-hour assay. We presented leaf-cutter ant colonies with a choice of an *E-high* or an *E-low* leaf on one disposable plastic plate next to an active nest trail. Carefully, we collected and placed debris from the trail leading up to the plate to encourage foraging in the plate. We initiated the ant assay as soon as one ant entered the plate and explored the leaf contents for at least 10-20 seconds. Every five minutes we took a digital photo of the choice arena until about 75% of the leaf content of one of the leaves was consumed or the two-hour mark was reached. We used the digital photo at time zero and at the end of trial to quantify the leaf area removed using ImageJ [v1.52r; @schneider2012]. Ant recruitment was estimated by counting individuals in the choice arena throughout trial event.

#### Pathogen assays

For the pathogen assays, we inoculated seedlings with *Calonectria* sp. pathogen. *Calonectria* is a widespread pathogen in tropical and temperate ecosystems [@crous2006; @li2022]. Its distribution reflects trends in agriculture, forestry, and the ornamental plant trade [@li2022]. In the tropics its effects are known as *Calonectria* leaf blight (CLB) which has become a primary fungal disease in commercial tree plantations [@sanchez-gonzalez2022]. In our assays, we introduced an agar plug inoculated with hyphae of *Calonectria* sp. (*P+* treatment), and an agar plug without the pathogen (*P-* control) to similarly aged/sized leaves that were still on plants (i.e., were not harvested) within 10-14 days after endophyte inoculations [@gilbert2007]. Leaves with the *P+* or *P-* treatment were misted with sterile water two times a day (morning and afternoon) to maintain moisture. After four days, we removed the plugs and took digital photos to analyze leaf area damage using ImageJ [v1.52r; @schneider2012].

### Replication Statement

```{r, replication_statement}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Replication statement of the statistical analyses."


#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 2)

rep_statement <- hux(
  "Scale of inference" = c("Leaf functional traits LFTs)",
                           "Genomic data",
                           "Herbivore assays",
                           "Pathogen assays"),
  
  "Scale at which the factor of interest is applied" = c("Host Species",
                                                        "Species (OTUs)",
                                                        "Species/individual",
                                                        "Species/individual"),
  "Number of replicates at the appropriate scale" = c("Treatment = 2 (E-low, E-high), Tropical tree species = 7, Replicates per species = 5. Replicate leaves per plant = 3",
                                                      "Treatment = 2 (E-low, E-high), Tropical tree species = 7, Replicates per species = 5",
                                                      "Treatment = 2 (E-low, E-high), Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1",
                                                      "Treatment = 2 (E-low, E-high), sub-treatment = 2 (control and pathogen) for pathogen trials, Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1"))


rep_statement <- rep_statement |>
  set_all_padding(4) |> 
      set_outer_padding(0) |> 
      set_bold(row = 1, col = everywhere) |> 
      set_bottom_border(row = 1, col = everywhere) |> 
      set_width(1.1) |>
  theme_article() |>
  huxtable::as_flextable(column_to_header=TRUE) |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick) |>
  flextable::align(j = 1:3, align = "center", part = "all") |>
 # flextable::width(j = 1, width = 1.5, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

rep_statement
#quick_docx(rep_statement, file = "./tables/replication_statement.docx")
```

### Statistical Analyses

We explored how LFTs and FEF correlated to herbivory and pathogen damage on leaves.  We present the analyses for each tree species at the leaf and at the plant level. LFTs are presented at the leaf level, while FEF data are presented at the host species level (plant), consistent with our whole-plant inoculation approach. In analyses where LFTs and FEF are combined we used averages of LFTs.

#### Comparison of LFTs and FEF between *E-high* and *E-low* treatments

First, we compared the means of herbivory (%) damage, and LFTs for each species and treatment groups using paired two-sided Student's t-Test and analysis of variance (ANOVA) with the `compare_means` and `stat_compare_means` functions from the `ggpubr` package in *R* [v.0.6.0, @kassambara2023], which wrap and extend the `anova` and `t.test` functions from the `stats` package [@rcoreteam2024] and facilitate plotting. Additionally, to facilitate comparison between group levels we used the `pairwise_t_test` function from the `rstatix` package [v.0.7.2, @kassambara2023a] when we compared pathogen (%) damage means. This function also wraps and extends base *R* functions. We adjusted *p* values to account for false discovery rates in multiple comparisons by using "BH" method [@benjamini1995].

#### FEF abundance, richness, diversity and community composition

Secondly, we calculated the FEF richness and Shannon's diversity index with the `estimate_richeness` function from the `phyloseq`, we then used in our generalized linear mixed models (see section @sec-correlations below) [@mcmurdie2013]. Subsequently, we calculated a Bray-Curtis dissimilarity matrix with our OTU relative abundance data and computed a distance-based redundancy analysis (dbRDA) by applying the `dbRDA` function in the `vegan` package to our dissimilarity matrix [@oksanen2022]. We computed forward model selection for dbRDA analysis with the `ordistep` function which selects terms based on *p* values [@blanchet2008; @oksanen2022]. We started with our initial model containing only the intercept (dissimilarity_matrix \~ 1) and setting the functions arguments to the following: `scope` = formula(*m*), where *m* is the formula with a defined range including LFTs, tree species and treatment groups; `Pin` = 0.5, `Pout` = 0.05, `trace` = T, `permutations` = how(nperm = 999), `steps` = 50. The dbRDA is considered analogous to a permutational analysis of variance (PERMANOVA) with non-Euclidean distance [@anderson2017; @mcardle2001]. Its corresponding visualizations appropriately illustrate underlying patterns of compositional differences [@anderson2017; @legendre1999; @mcardle2001]. We used the `anova.cca` function with 999 permutation to assess the marginal significance of constraining variables [@oksanen2022; @legendre2012; @legendre2011], applied here to reveal associations between LFTs and FEF communities in host tree species and treatment groups. To corroborate homogeneous dispersion of variances of host species and treatment groups we used a permutational analysis of multivariate dispersion (PERMDISP) using the `betadisper` with parameter `type = "median"`, and `permutest` functions from `vegan` with with 999 permutations [@oksanen2022]. We compared differences in the dispersion of the FEF communities among species and treatments with post-hoc Tukey's tests. We computed Shannon's Diversity index to assess FEF diversity in each tree species and treatment group.

#### Correlations between FEF and herbivory and pathogen damage {#sec-correlations}

Thirdly, we arbitrarily designated percent leaf damage in herbivore assays as high (\>70%), medium (31-69%) and low (\<30%) and in pathogen assays as high (\>30%) and low (\<30%). These categories allowed us to explore correlations between host tree species and specific FEF OTUs. To achieve this, we used the `multipatt` function from the `indicspecies` package in *R* [@decaceres2009]. We calculated the point biserial correlation coefficient for each OTU at all tree species and treatment group combinations by applying the `multipatt` function with arguments `func`= "r.g" and `control` = how(nperm=999) to our OTU abundance matrix [@decaceres2009]. Like with other statistical tests performed, we adjusted *p* values to account for false discovery rates in multiple comparisons by using "BH" method [@benjamini1995] in the `p.adjust` function from the `stats` package [@rcoreteam2024]. We then filtered the adjusted *p* value with a cutoff of \< .05.

We used Principal Component Analysis (PCA) to reduce dimensions among covariates and reveal underlying interactions between covariates that could influence herbivory and pathogen damage. The PCA was computed using the `prcomp` function in R statistical software [@rcoreteam2024]. A complete PCA was computed with variables ACI, LT, LPS, and LMA. We then proceeded to compute a PCA with the data from leaves of plants used in the herbivory (*n* = 210) and pathogen assays (*n* = 192). We then took from the herbivory and pathogen PCA the principal components that explained the most variance (PC1 and PC2) and regressed them to herbivory (%) and pathogen damage (%). We also regressed ACI, LT, LPS, LMA and Shannon diversity index to logit transformed herbivory (%) and pathogen damage (%). We used the `logit` function from the `car` package for logit transformation of variables and the `lm` function from the `stat` package for simple linear regressions [@fox2019; @rcoreteam2024].

Lastly, to test how LFTs and FEF communities interact to influence herbivory and pathogen damage in tropical tree species, we used a generalized linear mixed model (GLMM) with herbivory and pathogen damage percentage (logit transformed) as the response variable. To determine which fixed effects to include in the GLMMs we used the `vif` function from the `car` package in *R* to calculate the variance inflation factor for all explanatory variables (ACI, LT, LPS, LMA, and Shannon diversity index) [@fox2019; @rcoreteam2024]. Complementary to this, we calculated Pearson's coefficient for each pair of LFTs with by creating a correlation matrix and applying the `cor` function from the `stats` package to assess correlations among traits [@rcoreteam2024]. We opted to maintain explanatory variables LT and LMA, and exclude ACI and LPS from subsequent general linear models (GLMMs) due to high collinearity between the two variables with LMA, *r*(1112) = 0.68, *p* \< .0001 and *r*(1113) = 0.65, *p* \< .0001, respectively. We modeled only main effects with explanatory variables, we did not model interactions effects to avoid overfitting models. We used a restricted maximum likelihood estimates for model fit with the `lme` function from the `nlme` package [@pinheiro2023; @pinheiro2000]. For our logit herbivory GLMMs we used tree species as a random effect and modeled tree species variance structure with the `varIdent` argument [@pinheiro2023; @pinheiro2000]. For our logit pathogen damage GLMMs we use tree species as a random effect and modeled a nested variance structure for pathogen treatment within treatment groups per species with the `varIdent` argument [@pinheiro2023; @pinheiro2000]. We manually compared and selected models based on Akaike Information Criterion (AIC) with a penalty of 2 degrees of freedom (ΔAIC) with the `model.sel` function from the `MuMIn` package [@barton2023]. We selected the best-fit model based on the lowest value obtained.

# Results

Inoculation of seedlings was successful. Seedlings exposed to forest spore fall (i.e., *E-high*) had a significantly higher proportion of leaf segments colonized by FEF across all species (data from cultures, Fig. S1). Similarly, the  molecular data set showed that seedlings with *E-high* treatment had a significantly higher FEF relative abundance (paired, two-sided *t*-tests, *p* \< .05) for all tree species when compared to the *E-low* treatment (Fig. 1a). Despite these significant differences, there was a high degree of variability in FEF relative abundance within each treatment type (Fig. 1).

We observed general differences in LFTs among species (@tbl-table1). Anthocyanins (ACI) and leaf punch strength (LPS) did not differ between treatments (*E-low* and *E-high*) when we combined all host species (Fig. S2a and Fig. S4a respectively). For LT and LMA we saw significant differences between *E-low* and *E-high* treatment groups when we combined all host species (Fig S3a and Fig. S5a, respectively). As predicted, we did observe lower herbivory in the *E-high* treatment compared to the *E-low* treatment when we combined all host species, *t*(31) = 2.23, *p* = .033 (Fig. 2a). We did not observe differences in pathogen damage between *E-low* and *E-high* treatments when we combined all host species (Fig. 2b). However, within the *E-low* treatment group, leaves exposed to *Calonectria* sp. suffered greater damage (*M* = 17.37, *SD* = 12.57) compared to non-exposed leaves (*M* = 3.49, *SD* = 5.42), *t*(31) = -7.19, *p* \< .0001 (Fig. 2b). The same pattern arose for the *E-high* treatment group: exposed leaves (*M* = 20.04, *SD* = 15.72), non-exposed leaves (*M* = 7.17, *SD* = 17.48), *t*(31) = -3.26, *p* \< .01 (Fig. 2b). At the species level, herbivory and pathogen damage did not differ between treatment groups (Fig. S6a-S6b).

All LFTs are significantly correlated with FEF community composition (Fig.3). We used dbRDA to understand FEF community composition across host species and treatment groups. The analyses revealed that 6.34% of the overall variance in FEF communities was constrained by the LFTs. The first axis (dbRDA1) explained 49% and the second axis (dbRDA2) explained 21.3% of the constrained variance (Fig. 3). We observed a high degree of overlap between FEF communities (Fig. 3), indicating that the communities are similar in composition across host species and treatment groups, at least at the degree of resolution provided by ITS data (Fig. 3). Nonetheless, we also observed tight clustering of FEF communities in *C. cainito* and *L. panamensis*, emphasizing a distinct composition of FEF OTUs within the FEF identified. Other host species showed greater variation in FEF composition. Our PERMDISP analyses showed no significant differences in host species group dispersion (*F*~6,~ ~149~ = 0.717, *p* \< .63), observed differences were due to location. Unsurprisingly, the dispersion for *E-low* and *E-high* treatment groups was significantly different (*F*~1,~ ~154~ = 5.09, *p* \= .03). The Tukey tests revealed dispersion of host species were not significantly different at the α \< .05 level, while treatment group dispersions were.

We determined there was a core set of OTUs that significantly associated with host tree species or particular treatments by calculating the point biserial correlation coefficient. In summary, 72 out of 569 Ascomycota OTUs were significantly associated with all host tree species (Table S5). Seedlings used in herbivory assays had 13 OTUs significantly associated with high herbivory damage (\>70%) and 3 and 1 OTUs significantly associated with medium (31-69%) and low (\<30%) herbivory damage, respectively, in *E-low* and *E-high* treatment groups (Table S6). We detected 11 OTUs significantly associated with seedlings that experienced high (\>30%) pathogen damage in *E-low* and *E-high* treatment groups (Table S7). We could not tease apart which OTUs were associated with leaves exposed to *Calonectria* sp. agar plugs and non-exposed leaves because the genomic data scale for these trials was at the individual plant level, not leaf level. We found 30 OTUs significantly associated with *E-high* treated (inoculated with forest spore fall) individuals used in our pathogen assays (Table S8).

Host species leaf traits encompassed variation along the leaf economic spectrum (LES). The PCA revealed how ACI, LT, LPS and LMA were related. We plotted leaf trait data according to tree species groups on the PCA axes to show how the variance in the complete data set is explained by PC1 (60%) and PC2 (27%) (Fig. 4a). We observed that ACI, LPS and LMA loadings tracked along PC1 towards more negative values, showing correlation among these traits (Fig. 4a). Traits LT and LPS were orthogonal to each other (Fig. 4a), indicative of low correlation. We note distinct grouping of host species along PC1 towards negative values. We observed compact clustering of host species on opposite ends of PC2 (Fig. 4a). We note similar relationships between the leaf traits with respect to PC1 and PC2 in the subset of individual seedlings used for herbivory versus pathogen damage trials (Fig. 4b-c). The PCA of leaf traits from seedlings used in herbivory trials had a PC1 explaining 57.5% of the variance and a PC2 explaining 28% of the variance in the subset data (Fig. 4b). We saw an inversion of the LT loading in direction of positive values, as well as the same tree species clustered (i.e., *Dypteryx* sp. and *A. membranacea*) along PC2 (Fig. 4b) with respect to Fig. 4a. The PCA of leaf traits from seedling used in pathogen damage trials had a PC1 explaining 64% of the variance and a PC2 explaining 25% of the variance in the subset data (Fig. 4c). We detected similar relationships among leaf traits and PC axes in the pathogen damage subset data (Fig. 4c) when compared to the complete data set (Fig. 4a).


Leaf functional traits influence plants' response to herbivory and pathogen damage differentially. We examined the relationship between LFTs, herbivory and pathogen damage to understand how host species on opposite ends of the LES modulate herbivory and pathogen damage. We used simple linear regressions plotting herbivory and pathogen damage with PC1 and PC2 from the PCA. Simple linear regressions of herbivory (%) against PC1 revealed no correlation (Fig. 5a; *R^2^~adj~* = -0.0024, *F*~1,~ ~208~ = 0.508, *df* = 208, *p* = .447), where positive values represent greater values of ACI, LPS and LMA. Even though we note large spread in the data (Fig. 5a and 5b), we saw that herbivory was strongly associated with PC2 (Fig. 5b; *R^2^~adj~* = 0.079, *F*~1, 208~ = 18.9, *p* \< .0001), where positive values represent greater LT. Regressions of pathogen damage (%) plotted against PC1 revealed a significant correlation (Fig. 5c; *R^2^~adj~* = 0.064, *F*~1,~ ~380~ = 26.93 *p* \< .0001), in which positive values represent greater values of ACI, LPS and LMA. We did not see a significant relationship between pathogen damage and PC2 (Fig. 5d; *R^2^~adj~* = 0.002, *F*~1,~ ~380~ = 1.60, *p* = .207). 

We observed similar patterns when we performed simple linear regressions on the raw LFTs and logit transformed herbivory and pathogen damage data (Fig. S7 and S8, respectively). We observed a significant positive relationship between herbivory and LT (Figure S7a; *R^2^~adj~* = 0.081, *F*~1,~ ~208~ = 19.45, *p* \< .0001) when considering the complete data set . We did not observe a significant relationship between herbivory (%) and LPS, ACI, LMA, and Shannon diversity index for FEF (Figure S7b - S7e) for the complete data set. However, we did observe a general decline in herbivory as FEF diversity increased which aligns with our first prediction. Furthermore, we saw a significant negative relationship between herbivory and Shannon diversity for the *E-low* treatment group (Figure S7e; *R^2^~adj~* = 0.138, *F*~1,~ ~103~ = 17.7, *p* \< .0001). We also saw an increase in herbivory for the *E-high* treatment group as Shannon diversity index for FEF increased, but this was not statistically significant (Figure S7e; *R^2^~adj~* = 0.024, *F*~1,~ ~103~ = 3.55, *p* = 0.062), a result contrary to our expectations.

We noted significant negative relationships between pathogen damage and LPS (Figure S8b; *R^2^~adj~* = 0.078, *F*~1,~ ~380~ = 33.32, *p* \< .0001), ACI (Figure S8c; *R^2^~adj~* = 0.033, *F*~1,~ ~380~ = 14.34, *p* = .0002) and LMA (Figure S8d; *R^2^~adj~* = 0.030, *F*~1,~ ~380~ = 12.6, *p* \< .001) when considering the complete data set. Pathogen damage did not have a significant correlation with LT (Figure S8a; *R^2^~adj~* = -0.001, *F*~1,~ ~380~ = 0.50, *p* = .482). The *E-low* and *E-high* treatment groups follow the same general trend as the complete data set. Contrary to our predictions, we found a statistically significant positive relationship between pathogen damage and Shannon diversity index in the complete data set (Figure S8e; *R^2^~adj~* = 0.015, *F*~1,~ ~380~ = 6.90, *p* \< .01). Upon further scrutiny, only the *E-high* treatment group had a significant positive correlation between pathogen damage and Shannon diversity index (Figure S8e;*R^2^~adj~* = 0.031, *F*~1,~ ~188~ = 7.11, *p* \< .01). 

Leaf thickness and LMA have opposite outcomes in plants' response to herbivory. The best-fit for our GLMMs showed that fixed effects LT, LMA, and *E-high* treatment group were statistically significant predictors of herbivory damage (@tbl-tableGLMM). No measure of FEF abundance or diversity was present in the final model. Leaf mass per area was a significant positive predictor of herbivory with the greatest effect size (estimate = 1741, *t*(200) = 3.53 *p* \< .001). While LT is a significant negative predictor of herbivory damage (estimate = -0.01, *t*(200) = -2.52, *p* = .01) and *E-high* as well (estimate = -0.78, *t*(200) = -4.62, *p* \< .001). The best fit model for pathogen damage did not reveal any of the LFTs as significant predictors (@tbl-tableGLMM). Like our previous model, no measure of FEF abundance or diversity was present in final model. Even though it was not significant, LMA showed the greatest effect size (estimate = 171.7, *t*(352) = 0.96, *p* = .34).

# Discussion

<!-- To test our predictions, we addressed the following questions: -->

<!-- 1.  How do FEF high and low treatment differs in terms of abundance, richness, diversity, and community composition? -->
<!-- 1) Leaf-cutter ants and *Calonectria* sp. would cause less leaf damage (herbivory through leaf tissue removal and leaf necrosis through pathogen infection, respectively) on leaves with higher FEF abundance, richness and diversity; -->

<!-- 2.  How do leaf functional traits differ between FEF high and low treatments? -->
<!-- 2) Tree species with leaf functional traits on the low end of the economic spectrum (e.g., lower leaf mass per area) would have less herbivory and pathogen damage when treated with high FEF loads (*E-high*) compared to their low FEF counterparts (*E-low*);  -->

<!-- 3.  What is the relationship between FEF abundance, richness, diversity and species composition and herbivory and pathogen damage? -->
<!-- 3) Conversely, tree species with leaf functional traits of the high side of the economic spectrum (e.g., greater leaf mass per area) treated with high FEF loads (*E-high*) would have no differences in herbivory and pathogen damage compared to their low FEF counterparts (*E-low*). -->

<!-- 4.  What is the relationship between leaf functional traits and herbivory or pathogen damage in high and low FEF treatment groups? -->
<!-- 4) we anticipated that leaves with leaf functional traits on the high end of the economic spectrum would be experience less herbivory by leaf-cutter ants, but low FEF loads (*E-low*) in them could increase allurement. -->


This is the first study to examine the interplay of FEF communities and LFTs in response to the effects of a generalist herbivore and a pathogen in tropical tree species. Integrating the role of FEF communities into a conceptual framework that includes trade-offs to plants' constitutive and induced defenses in response to natural enemies helps us understand the importance of FEF communities in the maintenance of plant diversity in tropical forests. Our findings suggest that foliar endophytic fungi (FEF) communities and leaf traits work to improve leaf defenses against generalist herbivores and pathogens in tropical trees. Across all host species, we saw that the *E-high* treatment group exhibited lower herbivory damage than the *E-low* treatment group. At the host species level, we saw that *E-high* had less herbivory damage, however these differences were not significant between treatment groups. This is probably due to a small replicate size in treated individuals per species used in herbivory assay trials. Our results align with Estrada et al., [-@estrada2013], where leaf-cutter ant effects were significantly reduced in paper disks and leaves treated with higher densities of a common endophyte. In a laboratory setting, Bittleston et al., [-@bittleston2011] found similar patterns in herbivory reduction using *C. alliodora* treated with high and low FEF loads and laboratory reared colonies of *Atta colombica*. In a field study, Coblentz and Van Bael [-@coblentz2013] found that leaf-cutter ants preferred leaves with a lower FEF abundance when compared to surrounding leaf material (material not selected by ants). Rocha et al. [-@rocha2017], found endophytic *Trichoderma* more frequently isolated from leaf cuttings rejected by queen-less leaf-cutter ant colonies of *A. sexdens rubropilosa* in southeast Brazil. Our results track findings from previous studies that focus on single host-endophyte interactions or haphazard field collection and build upon them by using multiple host tree species and field inoculated FEF communities. 

Our GLMM analysis allowed us to look at FEF and leaf traits at the same time; for herbivory damage we observed only LMA, LT and *E-high* treatment group as strong predictors (@tbl-tableGLMM). Using data from all the assays in simple linear regressions, FEF diversity and community composition correlated negatively with herbivory damage, since we saw reduced herbivory as Shannon diversity index increased (black regression line in Figure S7e). As a caveat to these results, we saw an inverse relationship between the treatment groups with the *E-high* group positively correlating to herbivory and *E-low* group negatively correlating to herbivory (yellow and pink regression lines, respectively, in Figure S7e). The contrast between GLMM and simple linear regressions point to the nuanced role of FEF diversity in combating herbivory; LFTs, LMA and LT, overshadowed FEF diversity in our results. The FEF abundance, measured as *E-high* treatment group, also played a strong role in predicting herbivory, but less so diversity and community composition. <!-- Given consistent preference by leaf-cutter ants [@bittleston2011; @coblentz2013; @estrada2013], we interpret our results as evidence for a threshold of diminishing returns for the host plant, were the acquisition of more FEF increases the chances of hosting a community that does not deter leaf-cutter ants. From the perspective of the leaf-cutter ants, everything is equally infected and the cost of allocating new resources is taxing. It highlights a trade-off in the presumably asymptomatic symbiosis host species have with FEF communities. -->

We did not observe the same pattern for pathogen damage since there were no significant differences between treatment groups when considering all tree species combined (Figure 2b). Like herbivory damage, pathogen damage was not significantly different across treatment groups per species. Interestingly we saw that the *E-high* group had equal or slightly higher pathogen damage than the *E-low* group in all tree species (Figure S6b). The best-fit GLMM for pathogen damage showed LMA and LT as weak predictors (@tbl-tableGLMM). On the other hand, with simple linear regressions we saw a significant increase in pathogen damage as Shannon diversity index increased for the complete data set (Figure S8e). Like our herbivory damage models, the contrast between GLMM and simple linear regression point to a nuanced role of FEF abundance and diversity in combating a pathogen. Pathogen damage significantly increased in the *E-high* group as Shannon diversity increased, but the *E-low* group did not (Figure S8e). González-Tauber [-@gonzalez-teuber2016] found the opposite trend when examining *in vitro* the inhibitory effects of the most abundant genera (*Mycosphaerella* sp., *Xylaria* sp., *Diaporthe* sp., and *Penicillium* sp.) in FEF communities isolated from the southern temperate tree *Embothrium coccineum* against three common pathogens (*Botrytis cinerea*, *Fusarium oxysporum* and *Ceratocystis pilifera*). In our case, it is possible that the FEF abundance and diversity acquired from spore-fall have a synergistic interaction with *Calonectria* sp., thus outweighing any benefits provided by single-species interactions, ultimately increasing pathogen damage intensity.

The leaf economic spectrum (LES) allows us to interpret our results based on the functional traits that can have an important role in understanding tripartite plant-insect-pathogen interaction. The LES describes how LFTs with high values are characteristic of long-lived versus short-lived leaves [@wright2004, @kitajima2013, @poorter2006]. The LES, thus acts as a host-imposed filter which FEF communities must overcome to colonize leaf tissue, assemble, and carry out their life cycle. We did not measure leaf lifespan directly, but we interpret the values obtained for the LFTs we measured as proxies for leaf lifespan, with the caveat that the traits were measured on seedlings and leaves were relatively young (\< 150 days). We saw that species with relatively low values of ACI, LMA, and LPS (Figures S2 - S5) constrained in the PC1 axis (Figure 4b) experienced very little herbivory damage (i.e., *Dypteryx* sp.) or had much variability (i.e., *C. alliodora*) (Figure 5a). Species with relatively high values of ACI, LMA, and LPS like *C. cainito* experienced low to moderate herbivory damage (Figure 5a). A similar pattern was evident in the pathogen damage data set (Figure 5c). The contrast in the slopes of the regression lines in Figure 5a and 5c highlight the potential importance LES traits have to counter herbivory and pathogen damage. We view these findings and those presented in Figure S7 as support for our prediction, where leaves on the high end of the LES, are less attractive to leaf cutter-ants but the effects of FEF communities outweigh this selection factor after a certain threshold is reached, as mentioned above.

Comprehending the relationship between the Leaf Economic Spectrum (LES), plant defenses, and FEF communities is crucial for understanding the complex interactions among plants, insects, and pathogens. The Optimal Defense Theory (ODT), as outlined by Stamp [-@stamp2003], proposes three key predictions about plant defenses. First, a plant's defense investment is directly proportional to the frequency of attacks, such as herbivory or pathogen intensity, and inversely related to the cost of resources [@holeski2010]. Second, plants tend to allocate resources preferentially to parts with high reproductive value, especially when defense costs are minimal. Third, plants exhibit increased defensive responses after being attacked. This framework suggests that the likelihood of a plant to bolster its defenses following an attack is inversely related to its inherent defense traits [@holeski2010]. Our results point to a preemptive low-cost investment strategy against plant enemies, particularly at the seedling stage, that is leveraged by species specific inherent defense mechanisms. We did not track herbivory or pathogen damage past the seedling stage, so an avenue for inquiry is to investigate how FEF communities change after herbivore and pathogen attacks and to determine the key life stages. A combination of *in vitro* and *in vivo* assays could help elucidate the roles of specific FEF OTUs. The use of *in vitro* assays could help identify the potential anti-herbivore and anti-pathogen qualities of specific FEF OTUs. *In vivo* inoculation assays could help identify the importance that specific FEF OTUs have in different developmental stages, especially in older stages.

# Conclusion

This study advances our understanding of the intricate interactions between plants and their FEF communities, particularly in the context of plant defense mechanisms against herbivores and pathogens. Our findings highlight the complex dynamics of plant-herbivore-pathogen relationships and underscore the importance of FEF communities as a potentially low-cost, preemptive defense strategy for plants, especially during early growth stages. These insights not only shed light on the nuanced role of endophytes in plant ecology but also open avenues for future research, particularly in exploring the strategic resource allocation in plants and the specific contributions of FEF to plant resilience. As we continue to unravel these complex biological interactions, the knowledge gained holds promise not only for ecological theory but also for practical applications in agriculture, forestry, and conservation of the tropics.

# Author Contributions

A.E.A., S.A.V. designed research study. M.S.J. and B.A.R. performed experiments and collected data. B.A.R. and M.S.J. analyzed data. B.A.R. wrote the manuscript with input from all authors. All authors gave final approval for publication. Our study included technicians based in the country where the study was carried out throughout the preparation phase of the project (seed collection and preparation). We recognize that more could have been done to engage local residents, students and scientists with our research as our project developed. We plan to address these caveats in future research.


# Acknowledgements

This research was funded by NSF DEB-1556583 to S.A.V. and NSF DEB-1556287 to A.E.A., and by the School of Plant Sciences and the College of Agriculture, Life and Environmental Sciences at The University of Arizona (AEA). We thank Ming-Min Lee for laboratory support and Nicole Colón-Carrion for support with mock community analyses and laboratory support. We are grateful to the Republic of Panama for the opportunity to conduct research there, and the Smithsonian Tropical Research Institute for logistics support. We thank Allie Martin for all the support during data collection and sample preparation. 

# Conflict of Interest Statement

The authors declare no competing interests.

# Data Availability Statement
The genomic data that support the findings of this study will be submitted to NCBI-GenBank upon acceptance of this manuscript. The manuscript and code for reproducibility is available from corresponding author's GitHub:[https://github.com/jibarozzo/endophyte-leaf-traits.git](https://github.com/jibarozzo/endophyte-leaf-traits.git)

# References

::: {#refs}
:::

# Figures

```{r, Clean sequences}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#Working directory
rm(list = ls()) 

#Working Directory and Path for Linux
save.path <- ("../Aim3_Sequence_analyses/")

# Laoding files
csamp <-
  readRDS(file.path(save.path, "R_objects/clean_sequences.rds"))

tbas <- readRDS(file.path(save.path, "R_objects/tbas_filtered.rds"))

data <-
  readRDS(file.path(save.path, "R_objects/leaf_data_raw_analyses.rds"))

ndata <-
  readRDS(file.path(save.path, "R_objects/new_leaf_data.rds"))

ndata2 <-
  readRDS(file.path(save.path, "R_objects/new_leaf_data2.rds"))

ants <- readRDS(file.path(save.path, "R_objects/ants_data.rds"))

# Just the area loss
ants2 <- ants |>
  select(c(1, 3, 4, 9, 10))

patho <-
  readRDS(file.path(save.path, "R_objects/pathogen_data.rds"))

#Just the area damaged
patho2 <- patho |>
  select(c(1, 3, 4, 8, 9, 12))

pq1 <- readRDS(file.path(save.path, "R_objects/phyloseq_main.rds"))


pq2 <- readRDS(file.path(save.path, "R_objects/phyloseq_pq2.rds"))

# Subset of pq1 -- only E+ samples and OTUs.
#Important -- don't remove OTUs with 0 reads here, because we want to know which ones have no reads in E+ but DO have reads in E-.
pq2E <- subset_samples(pq2, E_load == "E+")
#ntaxa(pq2E) #1219 taxa and 78 samples

# Eliminate E- only OTUs. Keep OTUs with more than 0 reads in subset.
pq2_EminusRemoved <- prune_taxa(taxa_sums(pq2E) > 0, pq2E)
#ntaxa(pq2_EminusRemoved) #959 taxa remain. 260 OTUs removed.

#If OTU has 0 reads in E+, it will have reads in E-, so this prunes pq2E and identifies all OTUs that have 0 reads in E+, which by default, are the OTUs that DO have reads in E-.
pq2_EminuOnly <- prune_taxa(taxa_sums(pq2E) == 0, pq2E)
#pq2_EminuOnly #260 taxa and 78 samples

# Gets names of OTUs and make a data frame with column name the same as in pq2
EminusOTUs2 <- taxa_names(pq2_EminuOnly)
EminusOTUsList2 <- as.data.frame(EminusOTUs2)
#write.table(EminusOTUsList2, "clean_data/otu_data/Aim3_RemovedOTUsList.txt")

# Get vectors (names) of numbered OTUs from pq1
OTU_ID <- rownames(otu_table(pq1))

# Returns all OTU names that don't have a match in Eminus OTUs.
notShared <- setdiff(OTU_ID, EminusOTUs2)

# Subset phyloseq object to only these OTUs
pq2ET <-
  subset(otu_table(pq2), rownames(otu_table(pq2)) %in% notShared)

# Exported into "Sequence Analyses"
#write.csv(pq2ET, "clean_data/Aim3_OTU_phyloseq_trimmed.csv")

# New phyloseq object without E- OTUs.
newpq <-
  merge_phyloseq(
    pq2ET,
    tax_table(pq2),
    sample_data(pq2),
    rtree(ntaxa(pq2), rooted = TRUE, tip.label = taxa_names(pq2))
  )

# Relative Abundance of 959 OTUs. No removal of singletons yet.

# Filtering Taxa: Removal of singletons ####
# Removal of  singletons
newpq1 <-
  filter_taxa(newpq, function (x) {
    sum(x > 0) > 1
  }, prune = TRUE)
# The result is 2,464,558 sequence reads from 569 taxa in 156 samples.

# Richness data frame ####
rich <-
  estimate_richness(newpq1,
                    split = TRUE,
                    measures = c("Observed", "Shannon"))

rich <- rich |>
  rownames_to_column() |>
  rename(Sample_name = rowname)

# Phyloseq object to data frames ####

# Cleaned: no singletons
newpqDF <-
  phyloseq_to_df(
    newpq1,
    addtax = T,
    addtot = F,
    addmaxrank = F,
    sorting = "abundance"
  )

#The 569 OTUs and 156 samples (total abundances)
newpqDF <-
  read.csv("clean_data/otu_data/Aim3_OTUs_assigned_nonsingletons.csv")
newpqDF <-
  newpqDF |>  # Code from the Taxonomical assginment section dopes the same. This is just calling it directly from the /csv to avoid running all the code.
  select(!c(1))

eOTU2 <- readRDS(file.path(save.path, "R_objects/eOTU2.rds"))

cOTU <- readRDS(file.path(save.path, "R_objects/clean_OTU.rds"))

rabun <- readRDS(file.path(save.path, "R_objects/rabun_tidy.rds"))

rawra <- readRDS(file.path(save.path, "R_objects/rawra_tidy.rds"))


###################################
#### Theme set ####
###################################

# font_add_google("Roboto", "RobotoCondensed-Regular.ttf")
# 
# showtext_auto()
# showtext_opts(dpi = 300)
 theme_set(theme_classic(base_size = 12))

```

## Figure 1

```{r, Master data set}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#This contains all the OTU id's per sample type. Hence, 156 (# samples) observations per OTU_ID. The phyloseq object achieves the same purpose. This data set is easier to use with other functions or test not supported by phyloseq.

# Master ####
#put all data frames into list
df_list <- list(ndata2, cOTU, ants2, patho2, rich)    

#merge all data frames together
master <- df_list |> 
  reduce(left_join, by= "Sample_name", "E_load") |>
  mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)*100) |>
  select(c(1:9, 579:591)) |>
  select(!c(E_load,
            E_load.y,
            Trial_Code,
            Trial_Code.y)) |>
  relocate(Treatment, E_load.x, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x)


# Masterant on a per plant level
masterant <- master |>
  subset(Trial_type == "Ant") |>
  drop_na(Trial_Code) |>
  select(!c(4, 13:14)) |>
  na.omit()

# Masterant on a per leaf level (70 plants, 3 leaves per plant = 210 leaves measured)
df_list_ant2 <- list(ndata, cOTU, ants2, patho2, rich)

masterant2 <- df_list_ant2 |>
  reduce(left_join, by= "Sample_name", "E_load") |>
 mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) |>
  select(c(1:10, 584:594)) |>
  select(!c(E_load,
            Trial_Code)) |>
  relocate(Treatment, E_load.x, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) |>
  subset(Trial_type == "Ant") |>
  drop_na(Trial_Code) |>
  select(!c(5, 14:15)) |>
  na.omit() |>
  mutate(logit_herbivory = logit(Ant_percent_leafloss))

# Pathogen Observations per plant level
masterpat <- master |>
  subset(Trial_type == "Pathogen") |>
  select(!c(11,12)) |>
  na.omit()

# Pathogen Observations per leaf level (64 plants, 3 leaves per plant = 192 leaves measured)
# masterpat2

masterpat2 <- df_list_ant2 |>
  reduce(left_join, by= "Sample_name", "E_load") |>
 mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) |> 
  select(c(1:10, 584:594)) |>
  select(!c(E_load,
            Trial_Code)) |>
  relocate(Treatment, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) |>
  subset(Trial_type == "Pathogen") |>
  select(!c(12:13)) |>
  na.omit() |>
  mutate(logit_pathogenicity = logit(Pathogen_percent_damage)) 

#mutate(Pathogen_percent_damage = pmin(pmax(Pathogen_percent_damage, 0), 1)) |>  # Rescale values between 0 and 1
  #mutate(logit_damage = logit(Pathogen_percent_damage))
#masterpat2$log_damage <- log(masterpat2$Pathogen_percent_damage)
```

```{r fig1}
#| echo: false
#| eval: true
#| warning: false
#| fig.width: 6
#| fig.height: 6
#| fig.cap: "Relative abundance (RA) of Ascomycota OTUs of seven tree species used in the study. (a) Box plots show individuals' RA and its distribution by species. (b) The RA of OTU's by treatment withing each tree species. Pink boxes represent low endophyte (*E-low*) treatment and yellow outlined represent high endophyte (*E-high*) treatment. Relative abundance is the percentage of endophyte colonization within individuals of the same species. Statistical significance was calculated using a two-sided Student’s t-Test. Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."


#Comparison of means of LMA between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
fig1_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Relative_Abundance ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
fig1_compare_means <- compare_means(Relative_Abundance ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
fir_compare_means <- compare_means(Relative_Abundance ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#Plotting t-test comparisons  
# RA per E_load per species

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dipteryx sp.", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")


RAE <- ggplot(data = master, aes(x = E_load, y = Relative_Abundance)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = E_load),
               alpha = 0.0,
               outlier.alpha = 0.0) +
  scale_color_manual(name = "Treatment ",
                     labels = c("E-low", "E-high"),
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  theme_classic(base_size = 12) +
  theme(
    strip.background = element_rect(fill = "white"),
    axis.line.x.bottom = element_blank(),
    axis.ticks.x = element_blank(),
    strip.text.x = element_text(colour = "grey15", face = "italic"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 14),
    plot.title = element_text(
      color = "black",
      size = 14,
      face = "bold"
    ),
    axis.text.x = element_blank()
  ) +
  labs(x = "", y = "Mean Relative Abundance of Ascomycota", face = "bold") +
  theme() +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(
    comparisons = list(c("E-", "E+")),
    method = "t.test",
    label = "p.signif",
    paired = T,
    label.y = 25,
    bracket.size = 0.65
  ) +
  facet_wrap( ~ Species, labeller = as_labeller(newname))

#RAE

RAE_bar <- ggplot(data = master, aes(x = Species, y = Relative_Abundance)) +
  geom_bar(stat = "identity", aes(fill = E_load), position = "stack") +
  scale_fill_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme_classic(base_size = 12) +
  theme(
    strip.text.x = element_text(colour = "grey15", face = "italic"),
    panel.border = element_rect(linetype = "blank", fill = NA)
  ) +
  labs(x = "", y = "Relative Abundance of Ascomycota", face = "bold") +
  theme(
    legend.position = "right",
    legend.title = element_blank(),
    legend.text = element_text(size = 12),
    plot.title = element_text(
      color = "black",
      size = 12,
      face = "bold"
    ),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    )
  )

#RAE_bar

# Arranged as a grid
fig1 <- ggarrange(
  RAE,
  RAE_bar,
  nrow = 1,
  ncol = 2,
  widths = c(1.5, 1),
  common.legend = TRUE,
  legend = "bottom",
  label.x = 0,
  vjust = 1,
  labels = c("(a)", "(b)")
)

fig1


# Saving
ggsave(filename="./figures/figure1.png", plot = fig1, dpi=300, units=c("mm"), width = 210, height = 180, bg ="white")
#
```

## Figure 2

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of herbivory (%) damage caused by *Atta colombica* in treatment groups (*E-low* and *E-high*) and tree species. a) Comparison of herbivory (%) means between treatment groups across individuals of all species. Pink represents low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). b) Comparison of pathogen (%) means between treatment groups across individuals of all species. Maroon box plots represent control leaves and blue box plots represent pathogen treated leaves. Statistical significance was calculated using a two-sided Student's t-Test. Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)].."


# Fig. 2a

# Summarize statistics
fig2a_summ_stats <-  master |>
  group_by(E_load) |>
  summarise(
    count = n(),
    mean = mean(Ant_percent_leafloss, na.rm = TRUE),
    sd = sd(Ant_percent_leafloss, na.rm = TRUE),
    se = sd(Ant_percent_leafloss, na.rm = TRUE) / sqrt(n()),
    ci = 1.96 * se
  ) |>
  as.data.frame()

#Comparison of means of Herbivory(%) between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
# This is the test that provides a test statistic, compare_means does not.
fig2a_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(
    Ant_percent_leafloss ~ E_load,
    p.adjust.method = "BH",
    paired = TRUE,
    alternative = "two.sided",
    mu = 0,
    conf.level = 0.95,
    detailed = TRUE
  )

# ggpubr package used for t.tests and plotting t-test comparisons
# E+ vs E- for all specie. 
# To compare means of herbivory damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means. Result is similar to `pairwise_t_test`.

fig2a_compare_means <- compare_means(
  Ant_percent_leafloss ~ E_load,
  data = master,
  #group.by = "Species",
  method = "t.test",
  p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided",
  mu = 0,
  var.equal = FALSE,
  conf.level = 0.95
)
#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.

# T.test to get test statistic of E- and E+ comparison
x <- subset(master, E_load == "E-", na.rm = TRUE)
y <- subset(master, E_load == "E+", na.rm = TRUE)
  
fig2a_t_test <- t.test(
  x$Ant_percent_leafloss, y$Ant_percent_leafloss,
  method = "t.test",
  p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided",
  mu = 0,
  var.equal = FALSE,
  conf.level = 0.95
)

# Plot
herb_violin <-
  ggplot(data = master, aes(x = E_load, y = Ant_percent_leafloss)) +
  #geom_violin() +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.0,
    linewidth = 1.2
  ) +
  scale_fill_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(name = "Inoculation treatment  ",
                     labels = c("E-low", "E-high"),
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank(),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Herbivory (%)"))) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    comparisons = list(c("E-", "E+")),
    bracket.size = 0.8
  )

#herb_violin

# Fig. 2b

# Summarize statistics
fig2b_summ_stats <- master |>
  group_by(E_load, Treatment) |>
  summarise(
    count = n(),
    mean = mean(Pathogen_percent_damage),
    sd = sd(Pathogen_percent_damage),
    se = sd(Pathogen_percent_damage) / sqrt(n()),
    ci = 1.96 * se
  ) |> 
  as.data.frame()

# Comparison of means of Pathogen damage (%) between E+ and E- samples per tree species. 
# To obtain the comparison between control and pathogen treatments within E+ and E- groups, group_by("E_load") and change the formula to Pathogen_percent_damage ~ Treatment.
#rstatix package used for pairwise t-test

# This is the test that provides a test statistic for pathogen damage data, compare_means does not. 
fig2b_pairwise_t_test <- master |>
  group_by(E_load) |>
  pairwise_t_test(
    Pathogen_percent_damage ~ Treatment,
    p.adjust.method = "BH",
    paired = TRUE,
    #var.equal = F,
    alternative = "two.sided",
    mu = 0,
    conf.level = 0.95,
    detailed = TRUE
  )

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all species. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.

# Comparing E+ and E- for all species
fig2b_compare_means <-
  compare_means(
    Pathogen_percent_damage ~ E_load,
    data = master,
    #group.by = "Species",
    method = "t.test",
    p.adjust.method = "BH",
    paired = TRUE,
    alternative = "two.sided",
    mu = 0,
    var.equal = FALSE,
    conf.level = 0.95
  )

# Plot
patho_violin <-
  ggplot(data = master |>
           filter(!is.na(Treatment)),
         aes(x = E_load, y = Pathogen_percent_damage, fill = Treatment)) +
  # geom_violin() +
  # geom_point(aes(color = E_load),position = position_jitterdodge(dodge.width = 0, jitter.width = 0.2),
  #            alpha = 0.5, size = 2) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(alpha = 0.5, outlier.alpha = 0.0) +
  scale_fill_manual(
    name = "Pathogen treatment  ",
    labels = c("Control", "Pathogen"),
    values = met.brewer("Egypt", n = 2, type = "discrete")
  ) +
  scale_color_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    #axis.text.x=element_blank(),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Pathogen damage (%)"))) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    label.y = 80
  ) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    comparisons = list(c("E-", "E+")),
    bracket.size = 0.8
  ) +
  guides(color = "none")
#patho_violin


# Figure 2a-2b
figure2 <- ggarrange(herb_violin, patho_violin, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1,
                       widths = c(1.2, 1),
                       common.legend = FALSE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))

figure2
ggsave(filename="./figures/figure2.png", plot = figure2, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure 3

```{r, Distance Matrix}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
otu_e.dist <- vegdist(t(rabun), method="bray", binary=FALSE)
#Using "rabun". No singletons
#Bray-Curtis dissimilarity matrix
```

```{r, m3dbRDA}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 6.5
#| fig.height: 6
#| fig.cap: "FEF community composition was associated with leaf functional traits (LFTs) from the leaf economic spectrum (LES) (genomic data set). Variation in FEF community composition within and between host species (*n* = 7) and treatment groups (*E*-, *E*+) from distance-based redundancy analyses (dbRDA). Solid arrows represent statistically significant associations (*p* <.01). Each point represents a FEF community sample from one host tree species per treatment group; colors represent host tree species. Circles and filled triangles represent low (*E*-) and high (*E*+) FEF treatment groups, respectively."

#dbRDa with `dbrda` function. it can be calculated with `capscale` function too. VERY similar.
#Best model selected with `ordistep` function 
#Terms: otu_e.dist ~ Thickness + Toughness + Anthocyanins + LMA
m3dbRDA <- dbrda(
  otu_e.dist ~ Anthocyanins + Toughness + Thickness + LMA,
  data = ndata2,
  dist = "bray",
  na.action = na.omit
)
m3dbrda_summary <- summary(m3dbRDA)

# Assessing marginal significance of constraining variables
# anova.cca(m3dbRDA, by = "margin", perm.max = 999)
# anova.cca(m3dbRDA, by = "terms")
# anova(m3dbRDA, by = "axis")
# anova(m3dbRDA, by="axis", perm.max=500)

# Correlation of constrained and unconstrained axes
# cor(m3dbrda_summary$constraints) |>
#   round(2)

#Plotting dbRDA  with color by continous leaf lifespan
#plot using ggplot2

B <- summary(m3dbRDA)

A.1 <- vegan::scores(m3dbRDA)
A.2 <- A.1$sites
A.3 <- cbind(A.2, ndata2)

#scores for arrows
A.4 <- data.frame(vegan::scores(m3dbRDA, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(
  xend = (dbRDA1 * 2),
  yend = (dbRDA2 * 2),
  x = 0,
  y = 0,
  shape = NULL,
  color = NULL,
  fill = NULL
)
label_map <- aes(
  x = 2 * dbRDA1,
  y = 2 * dbRDA2,
  label = row.names(A.4),
  shape = NULL,
  color = NULL,
  fill = NULL
)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
A.4 <- A.4[sort(rownames(A.4)), ]

A4.sub1 <- A.4[3, ] #Thickness
A4.sub2 <- A.4[1, ] #Anthocyanins
A4.sub3 <- A.4[2, ] #LMA
A4.sub4 <- A.4[4, ] #Toughness

#A4.sub4

# Make plot
p_m3 <- ggplot(data = A.3, aes(x = dbRDA1, y = dbRDA2))
p_m3dbrda <- p_m3 +
  geom_point(
    data = A.3,
    aes(color = Species, shape = E_load),
    size = rel(3),
    alpha = 0.8,
    stroke = 1
  ) +
  geom_segment(
    arrow_map,
    size = rel(.8),
    data = A.4,
    color = "black",
    arrow = arrowhead
  ) +
  geom_vline(xintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot horizontal line
  geom_text(
    label_map,
    size = rel(4),
    data = A4.sub1,
    fontface = "bold",
    show.legend = FALSE,
    hjust = 1,
    label = c("LT"),
    nudge_y = -0.15
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4.sub2,
    fontface = "bold",
    show.legend = FALSE,
    hjust = 0.2,
    label = c("ACI"),
    nudge_y = -0.2
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4.sub3,
    fontface = "bold",
    show.legend = FALSE,
    hjust = 1.2,
    label = c("LMA"),
    nudge_y = -0.05
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4.sub4,
    fontface = "bold",
    show.legend = FALSE,
    hjust = 1.2,
    label = c("LPS"),
    nudge_y = 0.05
  ) +
  xlab(label = paste(
    "dbRDA1 (",
    round(B$concont$importance[2, 1] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  ylab(label = paste(
    "dbRDA2 (",
    round(B$concont$importance[2, 2] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  scale_color_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = met.brewer(name = "Cross", n = 8, type = "discrete")
  ) +
  scale_shape_manual(
    name = "Treatment",
    labels = c("E-low", "E-high"),
    values = c(16, 17)
  ) +
  stat_ellipse(
    aes(color = Species),
    geom = "path",
    size = 1.3,
    position = "identity",
    type = "t",
    linetype = 1,
    level = 0.95,
    segments = 51,
    na.rm = FALSE,
    show.legend = NA,
    inherit.aes = TRUE
  ) +
  
  labs(caption = "PERMDISP: *F*<sub>4,151</sub> = 2.56, *p* = .001") + #From simple ANOVA
  theme(
    plot.title = element_text(
      color = "black",
      size = 12,
      face = "bold"
    ),
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(color = "black", size = 12),
    plot.caption = element_markdown()
  )
# Rearranging the order of layers so arrows are above the points.
p_m3dbrda$layers <- c(
  p_m3dbrda$layers,
  p_m3dbrda$layers[[2]],
  p_m3dbrda$layers[[5]],
  p_m3dbrda$layers[[6]],
  p_m3dbrda$layers[[7]],
  p_m3dbrda$layers[[8]]
)

figure3 <- p_m3dbrda
figure3
ggsave(
  filename = "./figures/figure3.png",
  plot = figure3,
  dpi = 300,
  units = c("mm"),
  width = 275,
  height = 200
)

# ggsave(
#   filename = "./figures/figure3_points.png",
#   plot = p_m3dbrda,
#   dpi = 300,
#   units = c("mm"),
#   width = 250,
#   height = 200
# )
```

## Figure 4

```{r, Full PCA}
#| echo: false
#| eval: true
#| warning: false
#| tidy: true

# PCA using covariates to explain species richness/abundance ####
data.pca <- ndata[c(7,8,9,10)]
data.pca <- data.pca |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.

###Run this to create pca with prcomp function
pca<-prcomp(data.pca, scale=TRUE)
pca$rotation=-pca$rotation
pca$x=-pca$x

#Checking the PCA
#plot(pca,type = "lines")
#biplot(pca) # Base type PCA

# PCA using autoplot() and prcomp()and modifying with ggplot syntax ####
auto <- autoplot((pca), data = data.frame(ndata), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 1, 
         loadings.label.hjust = 1) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(labels=c("*A. membranacea*", 
                              "*C. cainito*", 
                              "*C. alliodora*", 
                              "*Dipteryx* sp.", 
                              "*H. concinna*", 
                              "*L. panamensis*", 
                              "*T. cacao*"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  scale_fill_discrete(labels=c("*A. membranacea*", 
                              "*C. cainito*", 
                              "*C. alliodora*", 
                              "*Dipteryx* sp.", 
                              "*H. concinna*", 
                              "*L. panamensis*", 
                              "*T. cacao*")) +
  scale_shape_manual(name = "Treatment", labels = c("E-", "E+"), values = c(16, 17)) +
 
  #labs(title = "(a)") + 
  theme(plot.title = element_text(color="black", size = 12, face="bold"),
        legend.title = element_text(face = "bold"),
        legend.text = element_markdown(color="black", size = 12))

#caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 467).") #This goes in the labs() arguments

auto$layers <- c(auto$layers, auto$layers[[2]], auto$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto <- auto +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto 

#ggsave(filename="./figures/Aim3_PCA_SEPT252023.png", plot = auto, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Ant PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false

# PCA using covariates to explain species richness/abundance ####
ant_pcadata <- masterant2[c(7,8,9,10)]
ant_pcadata <- ant_pcadata |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
ant.pca <-prcomp(ant_pcadata, scale=TRUE)
ant.pca$rotation=-ant.pca$rotation
ant.pca$x=-ant.pca$x

# Plot
auto_ant <- autoplot((ant.pca), data = data.frame(masterant2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
 
  #labs(title = "(b)") +
  theme(plot.title = element_text(color="black", size = 12, face="bold")) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  
  


auto_ant$layers <- c(auto_ant$layers, auto_ant$layers[[2]], auto_ant$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_ant <- auto_ant +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_ant

#ggsave(filename="./figures/Aim3_Ant_PCA_07102023.png", plot = auto_ant, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false
#
# PCA using covariates to explain species richness/abundance ####
pat_pcadata <- masterpat2[c(8,9,10,11)]
pat_pcadata <- pat_pcadata |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
pat.pca <-prcomp(pat_pcadata, scale=TRUE)
pat.pca$rotation=-pat.pca$rotation
pat.pca$x=-pat.pca$x

# Plot
auto_pat <- autoplot((pat.pca), data = data.frame(masterpat2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
 
  #labs(title = "(c)") +
  theme(plot.title = element_text(color="black", size = 12, face="bold")) + 
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  

auto_pat$layers <- c(auto_pat$layers, auto_pat$layers[[2]], auto_pat$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_pat <- auto_pat +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_pat

#ggsave(filename="./figures/Aim3_Pathogen_PCA_08162023.png", plot = auto_pat, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Fig4 Grid PCA}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 6 
#| fig.height: 6
#| fig.cap: "LFTs are conserved within tree species regardless of endophyte load treatment. (a) Principal Component Analysis (PCA) of LFTs from all tree species separated by *E-low* and *E-high* treatment. (b) PCA of LFTs of plants solely used in ant herbivory assays. (c) PCA LFTs of plants used solely in pathogen damage assays. Colors represent tree species. Circle and triangles represent low (*E-low*) and high (*E-high*) FEF treatment groups, respectively. Colored ellipses correspond to tree species and represent 95% confidence intervals."
figure4 <- ggarrange(auto, 
                      ggarrange(auto_ant, auto_pat, 
                                nrow = 1, ncol=2, 
                                label.x = -0.015, vjust = 1, 
                                labels = c("(b)", "(c)")), 
                      nrow = 2, 
                      common.legend = TRUE, 
                      legend="bottom", 
                      label.x = -0.01, vjust = 1, 
                      labels = "(a)")

figure4
# Adding caption
# ant_caption <- expression("*All individual leaves per individual per tree species included ("~ italic("n") ~ "= 210).")
# ant_pca_with_caption <- annotate_figure(antpca_arranged, bottom = text_grob(ant_caption), fig.lab.pos = "bottom.right", fig.lab.size = 6)
# 
# ant_pca_with_caption

ggsave(filename = "./figures/figure4.png", plot = figure4, dpi=300, units=c("mm"), width = 275, height = 300, bg = "white")
#Previously called Aim3_GridPCA_SEPT182023.png

```

## Figure 5

```{r, Ant LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# PCA loadings (rotations) data frame
ant.pci<-data.frame(ant.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

ant_pcalm <- masterant2[c(1,2,5,12, 17)]

ant_pcalm <- cbind(ant_pcalm, ant.pci) #Both data sets have 467 observations
```

```{r, Ant LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}

#Summary of linear model
lmpc1 <- lm(Ant_percent_leafloss ~ PC1, data = ant_pcalm)
#summary(lmpc1)

# PC1
# Formatted p-value
ant_p1 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC1)$p.value

ant_p1 = format.p(ant_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
ant_pc1 <- ggplot(ant_pcalm, aes(PC1, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load),
              size = 3,
              alpha = 0.6) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  stat_poly_eq(
    formula = y ~ x,
    color = "black",
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  scale_color_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = met.brewer(name = "Cross", n = 8, type = "discrete")
  ) +
  scale_shape_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = c(16, 17)
  ) +
 
  labs(y = "Herbivory (%)", caption = "") +
  scale_y_continuous(limits = c(0, 100)) +
  theme(
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(color = "black", size = 12)
  )

#ant_pc1

#ggsave(filename="./figures/Aim3_AntPC1_JUL102023.png", plot = ant_pc1, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Summary of linear model
lmpc2 <- lm(Ant_percent_leafloss ~ PC2, data = ant_pcalm)
#summary(lmpc2)


# Formatted p-values
ant_p2 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC2)$p.value

ant_p2 =format.p(ant_p2) # This is just to make the p-value nicer. 

## Plot PC2
ant_pc2 <- ggplot(ant_pcalm, aes(PC2, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load),
              size = 3,
              alpha = 0.6) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  stat_poly_eq(
    formula = y ~ x,
    color = "black",
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  scale_color_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = met.brewer(name = "Cross", n = 8, type = "discrete")
  ) +
 
  labs(y = "Herbivory (%)", caption = "") +
  scale_y_continuous(limits = c(0, 100)) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
  
  
#ant_pc2

#ggsave(filename="./figures/Aim3_AntPC2_JUL102023.png", plot = ant_pc2, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# PCA loadings (rotations) data frame
pat.pci<-data.frame(pat.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

pat_pcalm <- masterpat2[c(1,2,5,6,13)]

pat_pcalm <- cbind(pat_pcalm, pat.pci) #Both data sets have 467 observations
```

```{r, Pathogen LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}



# PC1
# Summary of linear model
plmpc1 <- lm(Pathogen_percent_damage ~ PC1, data = pat_pcalm)
#summary(plmpc1)

# Formatted p-value
pathogen_p1 <- cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC1)$p.value

pathogen_p1 = format.p(pathogen_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
pat_pc1 <- ggplot(pat_pcalm, aes(PC1, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load),
              size = 3,
              alpha = 0.6) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  stat_poly_eq(
    formula = y ~ x,
    color = "black",
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  scale_color_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = met.brewer(name = "Cross", n = 8, type = "discrete")
  ) +
 
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")

#pat_pc1


#ggsave(filename="./figures/Aim3_PatPC1_AUG282023.png", plot = pat_pc1, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Formatted p-values
pathogen_p2 <-
  cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC2)$p.value

pathogen_p2 = format.p(pathogen_p2) # This is just to make the p-value nicer.

## Plot PC2
plmpc2 <- lm(Pathogen_percent_damage ~ PC2, data = pat_pcalm)

pat_pc2 <- ggplot(pat_pcalm, aes(PC2, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load),
              size = 3,
              alpha = 0.6) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  stat_poly_eq(
    formula = y ~ x,
    color = "black",
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
scale_color_manual(
  labels = c(
    "*A. membranacea*",
    "*C. cainito*",
    "*C. alliodora*",
    "*Dipteryx* sp.",
    "*H. concinna*",
    "*L. panamensis*",
    "*T. cacao*"
  ),
  values = met.brewer(name = "Cross", n = 8, type = "discrete")
) +
 
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")

  
#pat_pc2

#ggsave(filename="./figures/Aim3_PatPC2_AUG282023.png", plot = pat_pc2, dpi=300, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Figure 5}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 9
#| fig.height: 9
#| fig.cap: "Simple linear regressions of herbivory and pathogen damage on PC1 and PC2 axes from PCAs of leaf traits for ant herbivory and pathogen damage assays. Linear regression of a) percent herbivory damage and PC1 axis (*R^2^~adj~* = -0.0024, *p* = 0.447); b) percent herbivory damage and PC2 axis (*R^2^~adj~* = 0.079, *p* = < .001); c) percent pathogen damage and PC1 axis (R^2^-adjusted = 0.064, *p* = < .001); and d) percent pathogen damage and PC2 axis (*R^2^~adj~* = 0.0016, *p* = .207). Colors represent individual species. Circle and triangles represent *E-low* and *E-high* treatments, respectively."
figure5<- ggarrange(ant_pc1, ant_pc2, pat_pc1, pat_pc2,
                    nrow = 2, 
                    ncol=2, 
                    label.x = -0.015, vjust = 1, 
                    labels = c("(a)", "(b)", "(c)", "(d)"),
                    common.legend = TRUE, 
                    legend="bottom")

figure5

ggsave(filename = "./figures/figure5.png", plot = figure5, dpi=300, units=c("mm"), width = 300, height = 225, bg = "white")
#Previously named Aim3_AntPCS_SEPT252023.png
```

# Tables

## Table 1

```{r}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| label: tbl-table1
#| tbl-cap: "Summary statistics for the leaf functional traits (LFTs)"

# Using `gtsummary` and 'flextable' packages
summa_t1 <- tbl_summary(data |>
  group_by(Species, E_load) |>
  select(c(10:13)) |>
  rename(Treatment = E_load) |>
  mutate(Species = case_match(Species, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dipteryx sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
  rename('Anthocyanins (ACI)' = Anthocyanins, 
           'Leaf Thickness (LT) (\U00B5m)'=Thickness, 
           'Leaf Punch Strength (LPS) (N mm/1)'= Toughness, 
           'Leaf Mass per Area (LMA) (mg/mm)' = LMA) |>
  mutate(Treatment= case_match(Treatment, "E-" ~ "E- (n = 570)", 
                        "E+" ~ "E+ (n = 544)")) |> # The sum of E- and E+ was added after iterations of tbl_summary().
    na.omit(),
  by = Species,
  missing = "no") |>
  # statistic = list( #Not working with statistic argument 01/28/2024
  #   all_continuous() ~ "{mean} \u00B1 {sd}", 
  #   all_categorical() ~ "{n}")) |>
  modify_header(label = "",
                stat_1 = 'A. membranacea, n = 83',
                stat_2 = 'C. alliodora, n = 100',
                stat_3 = 'C. cainito, n = 150',
                stat_4 = 'Dipteryx sp., n = 288',
                stat_5 = 'H. concinna, n = 132',
                stat_6 = 'L. panamensis, n = 185',
                stat_7 = 'T. cacao, n = 176',
                text_interpret = "md")
#summa_t1

  #modify_footnote(N = "N = count number", abbreviation = TRUE)
  #modify_spanning_header(all_stat_cols(stat_0= T) ~ "**Species**") 
  #modify_caption("**Table 1: Summary statistics for the leaf functional traits**")

#Turning it into a flextable object for further manipulation.
summa_t1 <- summa_t1 |>
  as_flex_table() |>
  # set_caption(
  #   as_paragraph(
  #     as_b(
  #       as_chunk("Table 1: Summary statistics for the leaf functional traits",
  #                props = fp_text_default(font.family = "Tex Gyre Termes", font.size = 12)
  #              )
  #     )
  #   ),
  # align_with_table = F) |>
  flextable::align(j = 1, align = "right", part = "all") |>
  flextable::align(j = 2:8, align = "center", part = "all") |>
  flextable::italic(j = c(2:8), italic = TRUE, part = "header") |>
  flextable::bold(i = 1, bold = TRUE, part = "header") |>
  flextable::italic(i = 1, italic = TRUE, part = "body") |>
  #padding(j = 1, padding.right= 40) |>
  flextable::width(j = 1, width = 1.25, unit = "in") |>
  flextable::width(j = 2:8, width = 0.75, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname)

# Adding some thicker borders to the table
thick <- fp_border(color = "black", style = "solid", width = 1.5)

summa_t1 <- summa_t1 |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick)

#summa_t1

```

<!-- ## Test -->
<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| eval: true -->
<!-- #| tidy: true -->
<!-- #| warning: false -->
<!-- #| label: tbl-tableMIM31 -->
<!-- #| tbl-cap: "Permutational ANOVA for the best-fit dbRDA model with all genetic cross-types." -->
<!-- #dbRDA table  (results from terms are the same as adonis2 but without R2) -->
<!-- #anova_m3_hell_margin <- readRDS("clean_data/statistics/anova_m3_hell_margin.rds") -->
<!-- anova_m3_hell_term <- readRDS(file.path(path, "clean_data/statistics/anova_m3_hell_term.rds")) -->

<!-- anova_table1 <- tidy(anova_m3_hell_term) %>% -->
<!--   as.data.frame() %>% -->
<!--   mutate("p-value" = str_replace_all(p.value, "0.001", "***"), -->
<!--          across(term, ~ gsub("_m", " (m)", .))) %>% -->
<!--   rename( -->
<!--     Term = term, -->
<!--     "Sum. of Sqs." = SumOfSqs, -->
<!--     "F-value" = statistic, -->
<!--     "Df" = df -->
<!--   ) %>% -->
<!--   select(Term, Df, "Sum. of Sqs.", "F-value", "p-value") -->

<!-- supptab_S1 <- gt(anova_table1) %>% -->
<!--   fmt_number(columns = vars("Sum. of Sqs.", "F-value"), -->
<!--              decimals = 2) %>% -->
<!--   fmt_number(columns = vars("Df"), decimals = 0) %>% -->
<!--   tab_footnote( -->
<!--     footnote = md( -->
<!--       "Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]." -->
<!--     ), -->
<!--     locations = cells_column_labels(columns = "p-value") -->
<!--   ) %>% -->
<!--   tab_style(style = cell_text(weight = "bold"), -->
<!--             locations = cells_column_labels(columns = everything())) %>% -->
<!--   as_latex() -->

<!-- supptab_S1 -->
<!-- ``` -->



## Table 2

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| label: tbl-tableGLMM
#Optimizers
ctrl <- lmeControl(opt='optim')
ctrl2 <- lmeControl(opt = "nlminb")

#M3REM
#M3REM Best fit model after model selection. See Aim3_leaftraits_Statistical_Analyses.qmd for details.
M3REM <- lme(logit_herbivory ~ Thickness  + LMA + E_load, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species, method = "REML", control = ctrl, data = masterant2, na.action = na.exclude)

#summary(M3REM)
#AIC(M3REM) #584.711 #1902.209 as of 5/23/23 # 741.7825 as of 30/OCT/2023

#P3REM
#Best fit model after model selection. See Aim3_leaftraits_Statistical_Analyses.qmd for details.
P3REM <- lme(logit_pathogenicity ~  LMA + Thickness, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species/E_load/Treatment, method = "REML", control = ctrl, data = masterpat2, na.action = na.exclude)
#summary(P3REM)
#AIC(P3REM) #1011.239 as of 30/OCT/2023

save(M3REM, P3REM, file = "./clean_data/glmm_models.rda")
```

```{r, Table2, tidy = TRUE}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogenicity"

# Checking AIC values
#broom.mixed::glance(M3REM, conf.int = TRUE, effects = "fixed")
#broom.mixed::glance(P3REM, conf.int = TRUE, effects = "fixed")

# #Joining the two models
# tidy_m3rem <- broom::tidy(M3REM,
#                           scales = "sdcor",
#                           conf.int = TRUE,
#                           conf.level = 0.95,
#                           effects = "fixed", 
#                           data = masterant2)
# 
# tidy_p3rem <- broom::tidy(P3REM,
#                           scales = "sdcor",
#                           conf.int = TRUE,
#                           conf.level = 0.95,
#                           effects = "fixed", 
#                           data = masterpat2)
# # Significance stars
# makeStars <- function(x){
#   stars <- c("****", "***", "**", "*", "ns")
#   vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
#   i <- findInterval(x, vec)
#   stars[i]
# }
# 
# models <- left_join(tidy_m3rem, tidy_p3rem, by = "term") |>
#   select(!c(effect.y, effect.x)) |>
#   mutate(stars.x = makeStars(p.value.x),
#          stars.y = makeStars(p.value.y)
#   ) |>
#   relocate(conf.low.x, conf.high.x, .after = estimate.x) |>
#   relocate(conf.low.y, conf.high.y, .after = estimate.y) |>
#   relocate(stars.x, .after = p.value.x) |>
#   relocate(stars.y, .after = p.value.y)
# 
# # Table with `gt` package
# table3 <- gt(models, 
#              rowname_col = "term") |>
#   cols_width(everything() ~ px(70),
#              starts_with("term") ~ px(200)
#   ) |>
#   tab_options(row_group.as_column = TRUE) |>
#   tab_stubhead(label = "Fixed effects") |>
#   cols_merge(
#     columns = c(conf.low.x, conf.high.x),
#     pattern = "{1} - {2}"
#   ) |>
#   cols_merge(
#     columns = c(conf.low.y, conf.high.y),
#     pattern = "{1} - {2}"
#   ) |>
#   cols_label(
#     estimate.x = "Estimate",
#     estimate.y = "Estimate",
#     std.error.x = "Standard error",
#     std.error.y = "Standard error",
#     df.x = "df",
#     df.y = "df",
#     statistic.x = "t-value",
#     statistic.y = "t-value",
#     p.value.x = "p-value",
#     p.value.y = "p-value",
#     stars.x = "",
#     stars.y = "",
#     conf.low.x = "CI",
#     conf.low.y = "CI",
#   ) |>
#   fmt_number(columns = everything(),
#              rows = everything(),
#              decimals = 3,
#              n_sigfig = NULL
#    ) |>
#   tab_spanner(
#     label = md("Herbivory model"),
#     columns = ends_with(".x")
#     ) |>
#   tab_spanner(
#     label = md("Pathogen damage model"),
#     columns = ends_with(".y")
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(weight = "bold"),
#       cell_text(style = "italic")),
#     locations = cells_column_labels()
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(style = "italic")),
#     locations = cells_stubhead()
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(weight = "bold")),
#     locations = cells_column_spanners()
#     ) |>
#    tab_style(
#     style = cell_text(size = pct(90)),
#     locations = list(cells_body(),
#                      cells_stub(),
#                      cells_column_labels())  
#     ) |>
#   tab_style(
#     style = cell_borders(
#       sides = "all",
#       color = NULL
#     ),
#     locations = list(cells_body(),
#                      cells_stub())
#    ) |>
#   tab_style(
#     style = cell_text(weight = "bold"),
#     locations = cells_body(
#       columns = c(p.value.x, p.value.y),
#       rows = p.value.x < 0.05 | p.value.y < 0.05)
#   ) |>
# 
#   tab_header(
#     title = md("Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogen damage")
#    ) |>
#   tab_footnote(
#     footnote = md("Akaike Information Criterion (AIC) = 741.8"),
#     locations = cells_column_spanners(spanner = "Herbivory model")
#   ) |>
#   tab_footnote(
#     footnote = md("Akaike Information Criterion (AIC) = 1011.2"),
#     locations = cells_column_spanners(spanner = "Pathogen damage model")
#   ) |>
#   tab_footnote(
#     footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."),
#     locations = cells_column_labels(columns = starts_with("p"))
#   ) |>
#   opt_align_table_header(align = "left") |>
#   opt_table_font(
#     font = list(
#       google_font(name = "Tex Gyre Termes"),
#        "serif"
#     )
#   ) |>
#   opt_footnote_marks(marks = "letters")

#Final editing of the table will be completed in text editor. 

#gtsave(table3, file = "Aim3_table3_30JAN2024.docx", path = "./tables")
# I didn't like the way the table looked in the end. This format would look better as HTML

#Using `hugetable` package to create the same table
# Table with `huxtable` package
table3 <- huxreg(
  "Herbivory model" = M3REM,
  "Pathogen damage model" = P3REM,
  coefs = c(
    "Intercept" = "(Intercept)",
    "Thickness" = "Thickness",
    "LMA" = "LMA",
    "Endophyte load (E+)" = "E_loadE+",
    "sd_Intercept" = "sd_(Intercept)",
    "Observations" = "sd_Observation",
    "A. membranacea" = "APEIME",
    "C. cainito" = "CHRYCA",
    "C. alliodora" = "CORDAL",
    "Dipteryx sp." = "DYPTE",
    "H. concinna"  = "HEISCO",
    "L. panamensis" = "LACPA",
    "T. cacao" = "THEOCA"
  ),
  error_pos = "right",
  error_format = "({conf.low} - {conf.high} ) [{statistic}]",
  number_format = "%.3f",
  align = ".",
  ci_level = 0.95,
  stars = c(`***` = 0.001,
            `**` = 0.01,
            `*` = 0.05),
  bold_signif = 0.05,
  borders = 0.4,
  outer_borders = 0.8,
  note = "Significance levels are represented by asterisks [p < 0.05 (*), p < 0.01 (**), p < 0.001 (***), and p < 0.0001 (****)]. T statistics in brackets.",
  statistics = c("N" = "nobs",
                 "logLik",
                 "AIC")
) |>
  insert_row("Predictors",
             "Estimate",
             "CI [t-statistic]",
             "Estimate",
             "CI [t-statistic]",
             after = 1) |>
  insert_row("Random effects", "", "", "", "", after = 6) |>
  set_all_padding(4) |>
  set_outer_padding(0) |>
  set_bold(row = 1, col = everywhere) |>
  #set_bottom_border(row = 1, col = everywhere) |>
  set_width(1.1) |>
  theme_article() |> #flextable::theme_apa() is good too.
  huxtable::as_flextable(column_to_header = TRUE) |>
  hline_top(part = "body", border = thick) |>
  hline(19,
        part = "body",
        border = fp_border(
          color = "black",
          style = "solid",
          width = 1
        )) |>
  hline(16, part = "all", border = thick) |>
  hline(
    i = 1,
    j = c(2:3, 4:5),
    part = "body",
    border = fp_border(
      color = "black",
      style = "solid",
      width = 1
    )
  ) |>
  flextable::align(j = 2:5, align = "center", part = "body") |>
  flextable::style(i = c(1:20),
                   j = 1,
                   pr_t = fp_text(bold = FALSE)) |>
  flextable::italic(
    i = c(7, 10:16),
    j = 1,
    italic = TRUE,
    part = "body"
  ) |>
  flextable::bold(
    i = c(2, 7),
    j = 1,
    bold = TRUE,
    part = "body"
  ) |>
  flextable::set_caption(
    "Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogen damage"
  ) |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname
  )

table2
#Final editing of the table will be completed in text editor.
#save_as_docx(table3, path = "./tables/Aim3_table2_30JAN2024.docx", section_properties = sect_properties)
```

# Supplementary Materials

<!-- ## Table S1 -->

```{r, supptable_S1}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of anthocyanin content (ACI) (\u03BCm) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
aci_comparisons <- compare_means(Anthocyanins ~ Species, data = master, method = "t.test")

#Table of results
supptable_S1 <-  gt(
  aci_comparisons |>
    mutate(
      group1 = case_match(
        group1,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    mutate(
      group2 = case_match(
        group2,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    select(!c(1, 8)),
  rowname_col = ".y.",
  groupname_col = "group1"
) |>
  tab_header(
    title = md("**Student's t-Tests of means anthocyanins (ACI)**"),
    subtitle = md("Pairwise comparisons of ACI between species.")
  ) |>
  tab_stubhead(label = "") |>
  cols_label(group2 = md("Comparison Species"),) |>
  # tab_stub_indent(
  #   rows = everything(),
  #   indent = 1
  # ) |>
  tab_style(style = list(cell_text(style = "italic")),
            locations = cells_body(columns = group2)) |>
  tab_style(style = cell_text(weight = "bold",
                              style = "italic"),
            locations = cells_row_groups()) |>
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = cells_body(columns = p:p.signif,
                           rows = p < 0.05)
  ) |>
  fmt_scientific(columns = p:p.signif,
                 decimals = 3,) |>
  tab_spanner(label = md("*p* - values"),
              columns = c(p, p.adj, p.format, p.signif)) |>
  tab_footnote(
    footnote = md(
      "Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."
    ),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(footnote = md("*n* = 156 individuals"),
               locations = cells_column_labels(columns = group2)) |>
  opt_align_table_header(align = "center") |>
  opt_table_font(font = list(google_font(name = "Tex Gyre Termes"),
                             "serif"))

supptable_S1
#gtsave(supptable_S1, file = "Aim3_supptable_S1_05JAN2024.docx", path = "./tables")
```

<!-- ## Table S2 -->

```{r, supptable_S2}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf thickness (LT) (\u03BCm) means between species."

#Table of results: Thickness T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
thickness_comparisons <- compare_means(Thickness ~ Species, data = master, method = "t.test")


#Table of results
supptable_S2 <-  gt(
  thickness_comparisons |>
    
    mutate(
      group1 = case_match(
        group1,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    mutate(
      group2 = case_match(
        group2,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    select(!c(1, 8)),
  rowname_col = ".y.",
  groupname_col = "group1"
) |>
  tab_header(
    title = md("**Student's t-Tests of means leaf thickness (LT) (\u03BCm)**"),
    subtitle = md("Pairwise comparisons of LT between species.")
  ) |>
  tab_stubhead(label = "") |>
  cols_label(group2 = md("Comparison Species"),) |>
  tab_style(style = list(cell_text(style = "italic")),
            locations = cells_body(columns = group2)) |>
  tab_style(style = cell_text(weight = "bold",
                              style = "italic"),
            locations = cells_row_groups()) |>
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = cells_body(columns = p:p.signif,
                           rows = p < 0.05)
  ) |>
  fmt_scientific(columns = p:p.signif,
                 decimals = 3,) |>
  tab_spanner(label = md("*p* - values"),
              columns = c(p, p.adj, p.format, p.signif)) |>
  tab_footnote(
    footnote = md(
      "Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."
    ),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(footnote = md("*n* = 156 individuals"),
               locations = cells_column_labels(columns = group2)) |>
  opt_align_table_header(align = "center") |>
  opt_table_font(font = list(google_font(name = "Tex Gyre Termes"),
                             "serif"))

supptable_S2
#gtsave(supptable_S2, file = "Aim3_supptable_S2_05JAN2024.docx", path = "./tables")
```

<!-- ## Table S3 -->

```{r, supptable_S3}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf punch strength (LPS) (N mm<sup>-1</sup>) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lps_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S3 <-  gt(
  lps_comparisons |>
    
    mutate(
      group1 = case_match(
        group1,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    mutate(
      group2 = case_match(
        group2,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    select(!c(1, 8)),
  rowname_col = ".y.",
  groupname_col = "group1"
) |>
  tab_header(
    title = md(
      "**Student's t-Tests of means leaf punch strength (LPS) (N mm<sup>-1</sup>)**"
    ),
    subtitle = md("Pairwise comparisons of LPS between species.")
  ) |>
  tab_stubhead(label = "") |>
  cols_label(group2 = md("Comparison Species"),) |>
  tab_style(style = list(cell_text(style = "italic")),
            locations = cells_body(columns = group2)) |>
  tab_style(style = cell_text(weight = "bold",
                              style = "italic"),
            locations = cells_row_groups()) |>
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = cells_body(columns = p:p.signif,
                           rows = p < 0.05)
  ) |>
  fmt_scientific(columns = p:p.signif,
                 decimals = 3,) |>
  tab_spanner(label = md("*p* - values"),
              columns = c(p, p.adj, p.format, p.signif)) |>
  tab_footnote(
    footnote = md(
      "Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."
    ),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(footnote = md("*n* = 156 individuals"),
               locations = cells_column_labels(columns = group2)) |>
  opt_align_table_header(align = "center") |>
  opt_table_font(font = list(google_font(name = "Tex Gyre Termes"),
                             "serif"))

supptable_S3
#gtsave(supptable_S3, file = "Aim3_supptable_S3_05JAN2024.docx", path = "./tables")
```

<!-- ## Table S4 -->

```{r, supptable_S4}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf mass per are LMA) (mg mm^-2) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lma_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S4 <-  gt(
  lma_comparisons |>
    
    mutate(
      group1 = case_match(
        group1,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    mutate(
      group2 = case_match(
        group2,
        "APEIME" ~ "A. membranacea",
        "CHRYCA" ~ "C. cainito",
        "CORDAL" ~ "C. alliodora",
        "DYPTE" ~ "Dipteryx sp.",
        "HEISCO" ~ "H. concinna",
        "LACPA" ~ "L. panamensis",
        "THEOCA" ~ "T. cacao"
      )
    ) |>
    select(!c(1, 8)),
  rowname_col = ".y.",
  groupname_col = "group1"
) |>
  tab_header(
    title = md(
      "**Student's t-Tests of means leaf mass per area (LMA) (mg mm<sup>-2</sup>)**"
    ),
    subtitle = md("Pairwise comparisons of LMA between species.")
  ) |>
  tab_stubhead(label = "") |>
  cols_label(group2 = md("Comparison Species"),) |>
  tab_style(style = list(cell_text(style = "italic")),
            locations = cells_body(columns = group2)) |>
  tab_style(style = cell_text(weight = "bold",
                              style = "italic"),
            locations = cells_row_groups()) |>
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = cells_body(columns = p:p.signif,
                           rows = p < 0.05)
  ) |>
  fmt_scientific(columns = p:p.signif,
                 decimals = 3,) |>
  tab_spanner(label = md("*p* - values"),
              columns = c(p, p.adj, p.format, p.signif)) |>
  tab_footnote(
    footnote = md(
      "Significance levels are represented by *ns* (not significant) and asterisks: *p* = .05 (\\*), *p* = .01 (\\**), p = .001 (\\***), and *p* < .0001 (\\****)]."
    ),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(footnote = md("*n* = 156 individuals"),
               locations = cells_column_labels(columns = group2)) |>
  opt_align_table_header(align = "center") |>
  opt_table_font(font = list(google_font(name = "Tex Gyre Termes"),
                             "serif"))

supptable_S4
#gtsave(supptable_S4, file = "Aim3_supptable_S4_05JAN2024.docx", path = "./tables")

```

<!-- ## Table S5 -->

```{r, Indicator_species}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#Subset data frame for indicator species analysis
#Community Data
cotu <- left_join(cOTU, ndata2, by = "Sample_name") |>
  select(!c(Trial_type,
            Trial_Code,
            Anthocyanins,
            Thickness,
            Toughness,
            LMA)) |>
  relocate(Species, E_load, .after = Sample_name)
```

```{r, vector_of_groups}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#Making vector of groups for `multipatt` analysis
species_corr_matrix <- cotu[, 4:ncol(cotu)]

species <- cotu$Species
eload <- cotu$E_load

multipatt_analysis <- multipatt(species_corr_matrix, species, func = "r.g", control = how(nperm=999)) #By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"
#multipatt_analysis

#summary(multipatt_analysis, indvalcomp = TRUE)

#round(head(multipatt_analysis$str), 7)
```

```{r, supptable_S5}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomy of OTUs significantly correlated with tree host species"
#Correcting for type 1 error and multiple comparisons
#code from this post
#https://stats.stackexchange.com/questions/370724/indiscpecies-multipatt-and-overcoming-multi-comparrisons/401277#401277

#Extract table of stats
multipatt_analysis_sign <- as.data.table(multipatt_analysis$sign, keep.rownames=TRUE)
# 
# #Add adjusted p-value
multipatt_analysis_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# #indval.table <- indval.sign |>
#   #mutate(p.value.bh = p.adjust(p.value, method = "BH"))
 
# #Now we can select only the indicators with adjusted significant p-values

multipatt_analysis_sign <- multipatt_analysis_sign[p.adj < 0.05,]
# 
# #Renaming the first column
colnames(multipatt_analysis_sign)[1]  <- "OTU" 

# #Now we can join the two tables

#Table with taxonomic information
multipatt_taxonomy <-
  left_join(newpqDF, multipatt_analysis_sign, by = c("OTU"))

multipatt_taxonomy <- multipatt_taxonomy |>
  filter(p.adj < 0.05) |>
  select(!c(9:164)) |>
  as.tibble()

# write.csv(multipatt_taxonomy, "./post_stat_analyses_data/Significant_OTUs.csv")
# multipatt_taxonomy <- read.csv("./post_stat_analyses_data/Significant_OTUs.csv")

#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x) {
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S5 <- gt(
  multipatt_taxonomy |>
    mutate(
      across(s.APEIME:s.THEOCA, na_if, 0),
      Host =
        case_when(
          s.APEIME  == 1 ~ "A. membranacea",
          s.CHRYCA == 1 ~ "C. cainito",
          s.CORDAL == 1 ~ "C. alliodora",
          s.DYPTE == 1 ~ "Dipteryx sp.",
          s.HEISCO == 1 ~ "H. concinna",
          s.LACPA == 1 ~ "L. panamensis",
          s.THEOCA == 1 ~ "T. cacao"
        ),
      p.value = makeStars(p.value)
    ) |>
    select(!c(s.APEIME:s.THEOCA)) |>
    relocate(OTU, Host, .after = species) |>
    rename_with(str_to_title,!OTU),
  groupname_col = "Host"
) |>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Host species") |>
  tab_stub_indent(rows = tidyr::starts_with("Fungi"),
                  indent = 2) |>
  tab_spanner(label = md("Multilevel pattern analysis"),
              columns = c(Index:P.adj)) |>
  cols_label(P.value = md("*p*"),
             P.adj = md("*p*<sub>adj<sub>")) |>
  fmt_number(columns = c(Stat:P.adj),
             decimals = 3) |>
  tab_style(style = list(cell_text(weight = "bold",
                                   style = "italic")),
            locations = cells_row_groups()) |>
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = list(cells_column_labels(), cells_stubhead())
  ) |>
  text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
  text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
  tab_style(style =  cell_text(style = "italic"),
            locations = cells_body(columns = Species)) |>
  tab_header(title = md(
    "Taxonomy of OTUs significantly correlated OTUs with tree host species"
  )) |>
  tab_footnote(
    footnote = md(
      "Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."
    ),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
  opt_table_font(font = list(google_font(name = "Tex Gyre Termes"),
                             "serif"))
supptable_S5 

#gtsave(supptable_S5, file = "Aim3_supptable_S5_12JAN2024.docx", path = "./tables")
```

<!-- ## Table S6 -->

```{r, Recoding_upper_lower}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false

upper_lower_damage <- master |>
  mutate(
    herbivory_level = case_when(Ant_percent_leafloss  >= 70 ~ "high",
                                Ant_percent_leafloss %between% list(31,69) ~ "medium",
                                 Ant_percent_leafloss < 30 ~ "low"),
    pathogen_level = case_when(Pathogen_percent_damage >= 30 ~ "high",
                               Pathogen_percent_damage < 29 ~ "low")) |>
  filter(!(is.na(herbivory_level) & is.na(pathogen_level))) |> #Dropping NAs in both columns
  select(c(Sample_name, Species, E_load, Treatment, herbivory_level, pathogen_level)) #Droping Ant_percent_leafloss and Pathogen_percent_damage
#196 observations and 6 variables
```

```{r, Filtering_damage}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#Some filtering and joining
leaf_damage_filter <- inner_join(upper_lower_damage, cotu, join_by(Sample_name, Species, E_load))#Should result in 196 observations and 575 variables

#Anti join check
filter_filter <- anti_join(leaf_damage_filter, cotu, by = c("Sample_name")) #should turn 0 observations and 575 variables
```

```{r, Highest_lowest_leaf_damage_herb_pathogen}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
# Recoded dataset for indicator species analysis
#Making vector of groups for analysis

#NA removal
herb_recoded_filtered <- leaf_damage_filter |>
  filter(!(is.na(herbivory_level)))

#Removal of first 6 columns. Tidyverse solution resulted in the addition of "missing grouping variables" error.
herb_recoded_filtered <- herb_recoded_filtered[, 7:ncol(herb_recoded_filtered)]

#High and low leaf damage by herbivory analysis
#Comparing High and Low groups: What OTUs are corrrelated with these groups?
herb_level <- na.omit(leaf_damage_filter$herbivory_level)

herb_multipatt = multipatt(herb_recoded_filtered, herb_level, func = "r.g", control = how(nperm=999))

#By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"

#summary(herb_multipatt, indvalcomp = TRUE)

#High and low leaf damage by pathogen analysis
#NA removal
patho_recoded_filtered <- leaf_damage_filter |>
  filter(!(is.na(pathogen_level)))

#Removal of first 6 columns.
patho_recoded_filtered <- patho_recoded_filtered[, 7:ncol(patho_recoded_filtered)]

#Comparing High and Low groups: What OTUs are corrrelated with these groups?
patho_level <- na.omit(leaf_damage_filter$pathogen_level)

patho_multipatt = multipatt(patho_recoded_filtered, patho_level, func = "r.g", control = how(nperm=999))

#summary(patho_multipatt, indvalcomp = TRUE)
```

```{r, supptable_S6}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs that are significantly correlated to different levels of leaf herbivory damage"
#Herbivory results
#Extract table of stats
herb_multipatt_sign <- as.data.table(herb_multipatt$sign, keep.rownames=TRUE)

#Add adjusted p-value
herb_multipatt_sign[ , p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# It doesn't make much sense here to adjust the p-value because the groups(herb_levels) are small. 

#Now can select only the indicators with significant p-values
herb_multipatt_corrected <- herb_multipatt_sign[p.value < 0.05,]

#renaming the first column
colnames(herb_multipatt_corrected)[1]  <- "OTU" 



#Table of OTUs and respective taxonomic information that are significantly correlated to high and low leaf herbivory damage
herb_multipatt_taxonomy <- left_join(newpqDF, herb_multipatt_corrected, join_by(OTU))

herb_multipatt_taxonomy <- herb_multipatt_taxonomy |>
  filter(p.value < 0.05) |>
  select(!c(9:164)) |>
  as.tibble()

#Saving table
#write.csv(herb_multipatt_taxonomy, "./post_stat_analyses_data/high_low_herbivory_OTUs.csv")

#herb_multipatt_taxonomy <- read.csv("./post_stat_analyses_data/high_low_herbivory_OTUs.csv")

# gt table

#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S6 <- gt(herb_multipatt_taxonomy |>
  mutate(across(s.high:s.medium, na_if, 0), Herbivory =
           case_when(s.high  == 1 ~ "High",
                                s.medium == 1 ~ "Medium",
                                 s.low == 1 ~ "Low"),
         p.value = makeStars(p.value)) |>
  select(!c(s.high:s.medium)) |>
  relocate(OTU, Herbivory, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Herbivory")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Herbivory damage") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
  fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
   tab_style(
   style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
   ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with *Atta colombica* herbivory levels")) |>
  tab_footnote(
    footnote = md("High = >70% leaf area damage, Medium = 31-69% leaf area damage, Low = <30% leaf area damage"),
    locations = cells_stubhead()
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S6 

#gtsave(supptable_S6, file = "Aim3_supptable_S6_12JAN2024.docx", path = "./tables")
```

<!-- ## Table S7 -->

```{r, supptable_S7}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs that are significantly correlated to high and low levels leaf pathogen damage"
#Pathogen damage results
#Extract table of stats
patho_multipatt_sign <- as.data.table(patho_multipatt$sign, keep.rownames=TRUE)

#Add adjusted p-value
patho_multipatt_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# It doesn't make much sense here to adjust the p-value because the groups(patho_levels) are small. 

#Now can select only the indicators with significant p-values
patho_multipatt_corrected <- patho_multipatt_sign[p.value < 0.05,]

#renaming the first column
colnames(patho_multipatt_corrected)[1]  <- "OTU" 



#Table of OTUs and respective taxonomic information that are significantly correlated to high and low leaf pathogen damage
patho_multipatt_taxonomy <- left_join(newpqDF, patho_multipatt_corrected, join_by(OTU))

patho_multipatt_taxonomy <- patho_multipatt_taxonomy |>
  filter(p.value < 0.05) |>
  select(!c(9:164)) 

#Saving table
#write.csv(patho_multipatt_taxonomy, "./post_stat_analyses_data/high_low_pathogen_OTUs.csv")
# gt table
#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S7 <- gt(patho_multipatt_taxonomy |>
  mutate(across(s.high:s.low, na_if, 0), Pathogen =
           case_when(s.high  == 1 ~ "High",
                                 s.low == 1 ~ "Low"),
         p.value = makeStars(p.value)) |>
  select(!c(s.high:s.low)) |>
  relocate(OTU, Pathogen, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Pathogen")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Pathogen damage") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
     tab_style(
   style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
   ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
    fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with *Calonectria* sp. pathogen damage levels")) |>
  tab_footnote(
    footnote = md("High = >30% leaf area damage, Low = <29% leaf area damage"),
    locations = cells_stubhead()
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S7 

#gtsave(supptable_S7, file = "Aim3_supptable_S7_12JAN2024.docx", path = "./tables")
```

<!-- ## Table S8 -->

```{r, Eload_multipatt_analysis}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
species_corr_matrix <- cotu[, 4:ncol(cotu)]

eload <- cotu$E_load

eload_multipatt_analysis <- multipatt(species_corr_matrix, eload, func = "r.g", control = how(nperm=999)) #By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"
#multipatt_analysis

#summary(eload_multipatt_analysis, indvalcomp = TRUE)
```

```{r, supptable_S8}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs significantly correlated with FEF inoculation levels"
#Correcting for type 1 error and multiple comparisons
#Extract table of stats
eload_multipatt_analysis_sign <- as.data.table(eload_multipatt_analysis$sign, keep.rownames=TRUE)

#Add adjusted p-value
eload_multipatt_analysis_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
#indval.table <- indval.sign |>
  #mutate(p.value.bh = p.adjust(p.value, method = "BH"))

#Now we can select only the indicators with adjusted significant p-values
eload_multipatt_corrected <- eload_multipatt_analysis_sign[p.adj < 0.05,]

#Renaming the first column
colnames(eload_multipatt_corrected)[1]  <- "OTU" 

#Table of OTUs and respective taxonomic information that are significantly correlated with FEF inoculation levels
eload_multipatt_taxonomy <- left_join(newpqDF, eload_multipatt_corrected, join_by(OTU))

eload_multipatt_taxonomy <- eload_multipatt_taxonomy |>
  filter(p.value < 0.05) |>
  select(!c(9:164)) |>
  as.tibble()

#Saving table
#write.csv(eload_multipatt_taxonomy, "./post_stat_analyses_data/eload_levels_OTUs.csv")

# gt table
#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S8 <- gt(eload_multipatt_taxonomy |>
  mutate(across(`s.E-`:`s.E+`, na_if, 0), Treatment =
           case_when(`s.E-`  == 1 ~ "E-",
                                 `s.E+` == 1 ~ "E+"),
         p.value = makeStars(p.value)) |>
  select(!c(`s.E-`:`s.E+`)) |>
  relocate(OTU, Treatment, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Treatment")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Treatment level") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
    ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
    fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with FEF inoculation levels")) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\**), *p* < .001 (\\***), and *p* < .0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S8 


#gtsave(supptable_S8, file = "Aim3_supptable_S8_14JAN2024.docx", path = "./tables")
```

<!-- ## Table S9 -->

```{r, supptable_S9}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Sterilization protocol for tropical tree seeds"


# sect_properties <- prop_section(
#   page_size = page_size(
#     orient = "portrait",
#     width = 8.25, height = 11.7
#   ),
#   type = "continuous",
#   page_margins = page_mar()
# )

#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 2)

sterile_protocol <- hux(
  "Tree Species" = c("Apeiba membranacea", 
                            "Chrysophylum cainito", 
                            "Cordia alliodora",
                            "Dipteryx sp.",
                            "Heisteria concinna",
                            "Lacmellea panamensis",
                            "Theobroma cacao"), 
  "Number of seed collected" = c("500",
                                 "100",
                                 "403",
                                 "~100",
                                 "250",
                                 "75",
                                 "44"),
  "Number of maternal sources" = c("3",
                                   "1",
                                   "1",
                                   "1",
                                   "~6",
                                   "3",
                                   "1"),
  "Sterilization protocol" = c("Soak in water 3-5 days; 0.5% NaClO for 4 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.5% NaClO for 4 minutes, 70% EtOH for 5 minutes",
                               "Soak in water 1 day; 0.5% NaClo for 3 minutes; 50% EtOH for 3 minutes",
                               "Soak in water 7 days; 0.5% NaClO for 5 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.5% NaClO for 4 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.25% NaClO for 3 minutes; 50% EtOH for 3 minutes",
                               "Rinsed seeds in running tap water; 0.5%  NaClO for 5 minutes")) 


sterile_protocol <- sterile_protocol|>
  set_all_padding(4) |> 
      set_outer_padding(0) |> 
      set_bold(row = 1, col = everywhere) |> 
      set_bottom_border(row = 1, col = everywhere) |> 
      set_width(1.1) |>
  theme_article() |>
  huxtable::as_flextable(column_to_header=TRUE) |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick) |>
  flextable::align(j = 1:3, align = "center", part = "all") |>
  flextable::italic(j = 1, i = 2:8, italic = TRUE, part = "body") |>
 # flextable::width(j = 1, width = 1.5, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

sterile_protocol
#save_as_docx(sterile_protocol, path = "./tables/Aim3_supptable_S9_28JAN2024.docx")
```

## Figure S1

```{r, suppfig_1}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Foliar endophytic fungi (FEF) colonization of seven tropical tree species in malt extract agar (MEA 2%). a) Comparison of mean percent colonization of leaves by FEF measured 7 days after placing leaf pieces on plates. Statistical significance was calculated with a Student's t-Test. Violin plots show the distribution of colonization values for all tree species within treatment groups (*E-low* and *E-high*). b) Comparison of mean percent colonization of leaves by FEF measured 7 days after culture. Violin plots show the distribution of percent colonization values for each species per treatment group. Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]. "
Abun7a <- ggplot(
  data = data |>
    group_by(Species, Sample_name, E_load, Leaf_ID) |>
    summarise(Abun_7 = mean(Abun_7)),
  aes(x = E_load, y = Abun_7)
) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5,
    linewidth = 1.2
  ) +
  scale_fill_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_y_continuous(labels = scales::percent) +
  theme_classic(base_size = 12) +
  theme(
    strip.text.x = element_text(colour = "grey15", face = "italic"),
    panel.border = element_rect(linetype = "blank", fill = NA)
  ) +
  labs(x = "", y = "Endophyte colonization (%)", face = "bold") +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 14),
    plot.title = element_text(
      color = "black",
      size = 14,
      face = "bold"
    ),
    axis.text.x = element_blank()
  ) +
  stat_compare_means(
    comparisons = list(c("E-", "E+")),
    method = "t.test",
    paired = T,
    label = "p.signif",
    bracket.size = 0.65
  )
#Abun7a

Abun7b <- ggplot(
  data = data |>
    group_by(Species, Sample_name, E_load, Leaf_ID) |>
    summarise(Abun_7 = mean(Abun_7)),
  aes(x = E_load, y = Abun_7)
) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = E_load),
               alpha = 0.0,
               outlier.alpha = 0.5) +
  scale_fill_manual(name = "Treatment ",
                    values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_y_continuous(
    expand = expansion(mult = 0.1),
    breaks = c(0, 0.25, 0.50, 0.75, 1),
    labels = scales::percent
  ) +
  #scale_y_continuous(labels = scales::percent) +
  theme_classic(base_size = 8) +
  theme(
    axis.line.x.bottom = element_blank(),
    strip.text.x = element_text(colour = "grey15", face = "italic"),
    panel.border = element_rect(linetype = "blank", fill = NA)
  ) +
  labs(x = "", y = "Endophyte colonization (%)", face = "bold") +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 14),
    plot.title = element_text(
      color = "black",
      size = 14,
      face = "bold"
    ),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    axis.text.y = element_text(size = 12),
    axis.title.y = element_text(size = 12)
  ) +
  stat_compare_means(
    comparisons = list(c("E-", "E+")),
    method = "t.test",
    label = "p.signif",
    paired = T,
    label.y = 1.03,
    bracket.size = 0.65
  ) +
  facet_wrap( ~ Species, labeller = as_labeller(newname))


#Abun7b  

# Figure S1a-S1b
suppfig_1 <- ggarrange(Abun7a, Abun7b, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))

suppfig_1


ggsave(filename="./figures/suppfig1.png", plot = suppfig_1, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S2

```{r, suppfig_2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of anthocyanin content (ACI) in treatment groups (*E-low* and *E-high*) and tree species. a) Comparison of ACI means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of ACI means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

# Comparisons
mycomparisons <- list(c("APEIME", "CHRYCA"), c("APEIME", "CORDAL"), c("APEIME", "DYPTE"), c("APEIME", "HEISCO"),c("APEIME", "LACPA"), c("APEIME","THEOCA"),
                      c("CHRYCA","CORDAL"), c("CHRYCA","DYPTE"),c("CHRYCA","HEISCO"), c("CHRYCA","LACPA"), c("CHRYCA", "THEOCA"),
                      c("CORDAL","DYPTE"), c("CORDAL","HEISCO"), c("CORDAL","LACPA"), c("CORDAL","THEOCA"), 
                      c("DYPTE","HEISCO"), c("DYPTE","LACPA"), c("DYPTE","THEOCA"), 
                      c("HEISCO","LACPA"), c("HEISCO","THEOCA"), c("LACPA","THEOCA"))

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dipteryx sp.", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")


#Comparison of means of ACI between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig2_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Anthocyanins ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig2a_compare_means <- compare_means(
  Anthocyanins ~ E_load,
  data = master,
  #group.by = "Species",
  method = "t.test",
  p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided",
  mu = 0,
  var.equal = FALSE,
  conf.level = 0.95
)
#Roughly the same outcome as pairwise_t_test.
suppfig2b_compare_means <- compare_means(
  Anthocyanins ~ E_load,
  data = master,
  group.by = "Species",
  method = "anova",
  p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided",
  mu = 0,
  var.equal = FALSE,
  conf.level = 0.95
)

# Anthocyanins by endophyte load an species
ACIa <- ggplot(data = master, aes(x = E_load, y = Anthocyanins)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5,
    linewidth = 1.2
  ) +
  scale_color_manual(values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_fill_manual(name = "Treatment ",
                    values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank(),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste(
    "ACI (% ", italic("A") [lambda], " at 931 nm / % ", italic("A") [lambda], " at 530 nm)"
  ))) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    comparisons = list(c("E-", "E+")),
    bracket.size = 0.8
  )

#ACIa


ACIb <-
  ggplot(data = master, aes(x = Species, y = Anthocyanins)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
  ) +
  geom_boxplot(aes(color = E_load),
               alpha = 0.0,
               outlier.alpha = 0.5) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    ),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste(
    "ACI (% ", italic("A") [lambda], " at 931 nm / % ", italic("A") [lambda], " at 530 nm)"
  ))) +
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T,
                     
  )

#ACIb

# Figure S1a S1b
suppfig_2 <- ggarrange(ACIa, ACIb, 
                       nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_2
ggsave(filename="./figures/suppfig2.png", plot = suppfig_2, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S3

```{r, suppfig_3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf thickness (LT) (\u03Bcg) in treatment groups (*E-low* and *E-high*) and tree species. a) Comparison of LT means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LT means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Statistical significance was calculated using a two-sided Student’s t-Test. Statistical significance was calculated using a two-sided Student’s t-Test. Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

#Comparison of means of LT between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig3_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Thickness ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig3a_compare_means <- compare_means(Thickness ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig3b_compare_means <- compare_means(Thickness ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Leaf thickness by endophyte load and species

LTa <-
  ggplot(data = master, aes(x = E_load, y = Thickness, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5,
    linewidth = 1.2
  ) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank(),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Leaf thickness (", mu, "m)"))) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    comparisons = list(c("E-", "E+")),
    bracket.size = 0.8
  )

#LTa


LTb <-
  ggplot(data = master, aes(x = Species, y = Thickness, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
  ) +
  geom_boxplot(aes(color = E_load),
               alpha = 0.0,
               outlier.alpha = 0.5) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    ),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Leaf thickness (", mu, "m)"))) +
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T)
#LTb

# Figure S3a S3b
suppfig_3 <- ggarrange(LTa, LTb, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_3

ggsave(filename="./figures/suppfig3.png", plot = suppfig_3, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously saved under name: Aim3_LT_Species_07062022.png
```

## Figure S4

```{r, suppfig_4}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf punch strength (LPS) (N mm^-1) in treatment groups (*E-low* and *E-high*) and tree species. a) Comparison of LPS means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LPS means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."


#Comparison of means of LPS between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig4_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Toughness ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all species. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig4a_compare_means <- compare_means(Toughness ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig4b_compare_means <- compare_means(Toughness ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Figure S3
# Leaf toughness (lbf) by  endophyte load and species with data (data) ####
LPSa <- ggplot(data = master, aes( x = E_load, y = Toughness, color = E_load)) +
geom_point(
  aes(color = E_load),
  alpha = 0.7,
  size = 1.7,
  position = position_jitter(w = 0.2)
) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5,
    linewidth = 1.2
  ) +
  scale_color_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
 
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf punch strength (N mm","^-1)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8) 
#LPSa

# 
#
LPSb <- ggplot(data = master, aes( x = Species, y = Toughness, color= E_load)) +
geom_point(
  aes(color = E_load),
  alpha = 0.7,
  size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5) +
  scale_color_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
 
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf punch strength (N ", mm^-1,")"))) +
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T) +
  ylim(0.10, 1) 
#LPSb

# Figure S4a S4b
suppfig_4 <- ggarrange(LPSa, LPSb, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_4
ggsave(filename="./figures/suppfig4.png", plot = suppfig_4, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously named Aim3_LPS_Species_07062022.png

```

## Figure S5

```{r, suppfig_5}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf mass per area (LMA) (mg mm^2) in treatment groups (*E-low* and *E-high*) and tree species. a) Comparison of LMA means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LMA means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

#Comparison of means of LMA between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig5_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(LMA~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig5a_compare_means <- compare_means(LMA ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig5b_compare_means <- compare_means(LMA ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Figure S5
# Leaf mass per area (LMA) by  endophyte load and species
LMAa <-
  ggplot(data = master, aes(x = E_load, y = LMA, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5,
    linewidth = 1.2
  ) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank(),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("LMA (mg ", mm ^ -2, ")"))) +
  stat_compare_means(
    label = "p.signif",
    method = "t.test",
    paired = T,
    comparisons = list(c("E-", "E+")),
    bracket.size = 0.8
  )
#LMAa

LMAb <-
  ggplot(data = master, aes(x = Species, y = LMA, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
  ) +
  geom_boxplot(aes(color = E_load),
               alpha = 0.0,
               outlier.alpha = 0.5) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    ),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("LMA (mg ", mm ^ -2, ")"))) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T)

#LMAb

# Figure S5a-S5b
suppfig_5 <- ggarrange(
  LMAa,
  LMAb,
  nrow = 1,
  ncol = 2,
  label.x = -0.015,
  vjust = 1,
  common.legend = TRUE,
  legend = "bottom",
  labels = c("(a)", "(b)")
)
suppfig_5
ggsave(filename="./figures/suppfig5.png", plot = suppfig_5, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S6

```{r, suppfig_6}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of herbivory (%) and pathogen damage caused by *Atta colombica* and *Calonectria* sp. , respectively, in treatment groups (*E-low* and *E-high*) per tree species. a) Comparison of herbivory (%) means between treatment groups across individuals of all species. b) Comparison of pathogen (%) means between treatment groups across individuals of all species. Pink outlined box plots represent low FEF group (*E-low*) and yellow outlined box plots represent high FEF group (*E-high*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

#Fig. S6a
herb_violin_a <-
  ggplot(data = master, aes(x = Species, y = Ant_percent_leafloss, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5
  ) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    ),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Herbivory (%)"))) +
  
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T)
#herb_violin_a

#Fig. S6b
patho_violin_b <-
  ggplot(data = master,
         aes(x = Species, y = Pathogen_percent_damage, color = E_load)) +
  geom_point(
    aes(color = E_load),
    alpha = 0.7,
    size = 1.7,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
  ) +
  geom_boxplot(
    aes(color = E_load),
    alpha = 0.0,
    outlier.alpha = 0.5
  ) +
  scale_color_manual(name = "Treatment ",
                     values = met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels = c(newname)) +
  theme(legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(
      face = "italic",
      hjust = 1,
      angle = 30
    ),
    legend.position = "right",
    legend.text = element_text(size = 12)
  ) +
  labs(x = "", y = expression(paste("Pathogen damage (%)"))) +
  
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T) +
  guides(color = "none")

#patho_violin_b


# Figure S6a-S6b
suppfig_6 <- ggarrange(herb_violin_a, patho_violin_b, nrow = 2, 
                       ncol=1, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))

suppfig_6
ggsave(filename="./figures/suppfig6.png", plot = suppfig_6, dpi=300, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S7

```{r, suppfig_7}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Simple linear regressions of logit transfomed herbivory (%) and LFTs. a) Herbivory *vs.* leaf thickness (LT) (\u03Bcg) (*R^2^~adj~* = 0.0811, *p* < .0001). b) Herbivory *vs.* LPS (N mm<sup>-1</sup>) (*R^2^~adj~* = -0.0018, *p* = .429)). c) Herbivory *vs.* ACI (*R^2^~adj~* = 0.0071, *p* = .116). d) Pathogen *vs.* LMA (mg mm^2) (*R^2^~adj~* = -0.0008, *p* = .36). e) Herbivory *vs.* Shannon diversity index (*R^2^~adj~* = 0.007 , *p* = .12). Pink filled line and shapes represent low FEF group (*E-low*) and yellow filled line and shapes represent high FEF group (*E-high*). Black line represents the linear regression on all observations. Solid lines represent significant correlations and dashed lines represent non-significant correlations at the α < .05 level."

# Herbivory and Toughness
#Simple linear regression
#summary(lm(logit_herbivory ~ Toughness, data = masterant2))
 
herb_lps <-
  ggplot(data = masterant2, aes(y = logit_herbivory, x = Toughness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm,
              se = F,
              linetype = "dashed")+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    linetype = "dashed",
    size = 0.75
  ) +
  scale_shape_manual(# labels = c(
    #   "*A. membranacea*",
    #   "*C. cainito*",
    #   "*C. alliodora*",
    #   "*Dipteryx* sp.",
    #   "*H. concinna*",
    #   "*L. panamensis*",
    #   "*T. cacao*"
    # ),
    values = c(15:22)) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  ggplot2::annotate(
    "rect",
    ymin = -4.5,
    ymax = -3.25,
    xmin = 0.5,
    xmax = 0.95,
    alpha = .7,
    fill = "white"
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "right",
    label.y = "bottom",
    vstep = 0.08
  ) +
  labs(x = expression(paste("Leaf punch strength (N mm", "^-1)")), y = "logit[Herbivory (%)]") +
  ##theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#herb_lps


# Herbivory and Anthocyanins
#Simple linear regression
#summary(lm(logit_herbivory ~ Anthocyanins, data = masterant2))

herb_aci <-
  ggplot(data = masterant2, aes(y = logit_herbivory, x = Anthocyanins, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm,
              se = F,
              linetype = "dashed")+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    linetype = "dashed",
    size = 0.75
  ) +
  scale_shape_manual(# labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  ggplot2::annotate(
    "rect",
    ymin = -4.5,
    ymax = -3.25,
    xmin = 5.6,
    xmax = 10.8,
    alpha = .7,
    fill = "white"
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "right",
    label.y = "bottom",
    vstep = 0.08
  ) +
  labs(x = expression(paste(
    "ACI (% ", italic("A") [lambda], " at 931 nm / % ", italic("A") [lambda], " at 530 nm)"
  )), y = "logit[Herbivory (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#herb_aci
#scale_shape_manual(values = c(1:7))

# Herbivory and leaf thickness
#Simple linear regression
#summary(lm(logit_herbivory ~ Thickness, data = masterant2))

herb_lt <-
  ggplot(data = masterant2, aes(y = logit_herbivory, x = Thickness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm, se = F) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  scale_shape_manual(# labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  ggplot2::annotate(
    "rect",
    ymin = -4.5,
    ymax = -3.25,
    xmin = 195,
    xmax = 300,
    alpha = .7,
    fill = "white"
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "right",
    label.y = "bottom",
    vstep = 0.08
  ) +
  labs(x = expression(paste("Leaf thickness (", mu, "m)")), y = "logit[Herbivory (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend

#herb_lt

# Herbivory and LMA
#Simple linear regression
#summary(lm(logit_herbivory ~ LMA, data = masterant2))

herb_lma <-
  ggplot(data = masterant2, aes(y = logit_herbivory, x = LMA, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm,
              se = F,
              linetype = "dashed")+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    linetype = "dashed",
    size = 0.75
  ) +
  scale_shape_manual(# labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  ggplot2::annotate(
    "rect",
    ymin = -4.5,
    ymax = -3.25,
    xmin = 0.0011,
    xmax = 0.0022,
    alpha = .7,
    fill = "white"
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "right",
    label.y = "bottom",
    vstep = 0.08
  ) +
  labs(x = expression(paste("LMA (mg ", mm ^ -2, ")")), y = "logit[Herbivory (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  ) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
#herb_lma

# Herbivory and FEF Shannon Diversity
#Simple linear regression
#summary(lm(logit_herbivory ~ Shannon, data = masterant2))

#Simple linear regression by E_load

#E- summary
#summary(lm(logit_herbivory ~ Shannon, data = masterant2[masterant2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_herbivory ~ Shannon, data = masterant2[masterant2$E_load == "E+",]))



herb_shannon <-
  ggplot(data = masterant2, aes(y = logit_herbivory, x = Shannon, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm, se = F) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    linetype = "dashed",
    size = 0.75
  ) +
  scale_shape_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  ggplot2::annotate(
    "rect",
    ymin = -4.5,
    ymax = -3.25,
    xmin = 1.75,
    xmax = 4.4,
    alpha = .7,
    fill = "white"
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "right",
    label.y = "bottom",
    vstep = 0.08
  ) +
  labs(x = "Shannon's Diversity Index", y = "logit[Herbivory (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )

#herb_shannon

# Multiples plots together

suppfig_S7 <-
  ggarrange(
    herb_lt,
    herb_lps,
    herb_aci,
    herb_lma,
    herb_shannon,
    nrow = 2,
    ncol = 3,
    label.x = -0.035,
    common.legend = TRUE,
    labels = c("(a)", "(b)", "(c)", "(d)", "(e)"),
    legend = "bottom"
  )

suppfig_S7

ggsave(filename = "./figures/suppfig7.png", plot = suppfig_S7, dpi=300, units=c("mm"), width=250, height=200, bg = "white")

```

## Figure S8

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Simple linear regressions of logit transformed pathogen damage (%) and and LFTs. a) Pathogen damage *vs.* leaf thickness (LT) (\u03Bcg) (*R^2^~adj~* = -0.0013, *p* = .482). b) Pathogen damage *vs.* LPS (N mm<sup>-1</sup>) (*R^2^~adj~* = 0.0782, *p* < .0001). c) Pathogen damage *vs.* ACI (*R^2^~adj~* = 0.0338, *p* < .001). d) Pathogen *vs.* LMA (mg mm^2) (*R^2^~adj~* = 0.0295, *p* < .001). e) Pathogen damage *vs.* Shannon diversity index (*R^2^~adj~* = 0.0152 , *p* < .001). Pink filled line and shapes represent low FEF group (*E-low*) and yellow filled line and shapes represent high FEF group (*E-high*). Black line represents the linear regression on all observations. Solid lines represent significant correlations and dashed lines represent non-significant correlations at the α < .05 level."

# Pathogen
# Pathogen damage and Toughness
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Toughness, data = masterpat2)) 

patho_lps <-
  ggplot(data = masterpat2, aes(y = logit_pathogenicity, x = Toughness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm, se = F) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  scale_shape_manual(
    # labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  labs(x = expression(paste("Leaf punch strength (N mm", "^-1)")), y = "logit[Pathogen damage (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#patho_lps


# Pathogen damage and Anthocyanins
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Anthocyanins, data = masterpat2))

patho_aci <-
  ggplot(data = masterpat2,
         aes(y = logit_pathogenicity, x = Anthocyanins, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5)+
  geom_smooth(
    data = subset(masterpat2, E_load == "E+"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ffbb44",
    size = 0.75
  ) +
  geom_smooth(
    data = subset(masterpat2, E_load == "E-"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ee8577",
    linetype = "dashed",
    size = 0.75
  )+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  )+
  scale_shape_manual(
    # labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  labs(x = expression(paste(
    "ACI (% ", italic("A") [lambda], " at 931 nm / % ", italic("A") [lambda], " at 530 nm)"
  )), y = "logit[Pathogen damage (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#patho_aci
#scale_shape_manual(values = c(1:7))

# Pathogen damage and leaf thickness
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Thickness, data = masterpat2))

patho_lt <-
  ggplot(data = masterpat2, aes(y = logit_pathogenicity, x = Thickness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(
    data = subset(masterpat2, E_load == "E+"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ffbb44",
    size = 0.75
  ) +
  geom_smooth(
    data = subset(masterpat2, E_load == "E-"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ee8577",
    linetype = "dashed",
    size = 0.75
  )+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    linetype = "dashed",
    size = 0.75
  ) +
  scale_shape_manual(
    # labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  labs(x = expression(paste("Leaf thickness (", mu, "m)")), y = "logit[Pathogen damage (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend

#patho_lt

# Pathogen damage and LMA
#Simple linear regression
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2))

#E- summary
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2[masterpat2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2[masterpat2$E_load == "E+",]))

patho_lma <-
  ggplot(data = masterpat2, aes(y = logit_pathogenicity, x = LMA, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
  geom_smooth(method = lm, se = F) +
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  scale_shape_manual(
    # labels = c(
    #   "A. membranacea",
    #   "C. cainito",
    #   "C. alliodora",
    #   "Dipteryx sp.",
    #   "H. concinna",
    #   "L. panamensis",
    #   "T. cacao"
    # ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  labs(x = expression(paste("LMA (mg ", mm ^ -2, ")")), y = "logit[Pathogen damage (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(face = "italic",
                               size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  ) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
#patho_lma

# Pathogen damage and FEF Shannon Diversity
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2))

#E- summary
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2[masterpat2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2[masterpat2$E_load == "E+",]))

# Extracting effect size of model to plot
patho_shannon <-
  ggplot(data = masterpat2, aes(y = logit_pathogenicity, x = Shannon, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species),
              size = 3,
              alpha = 0.5) +
   geom_smooth(
    data = subset(masterpat2, E_load == "E+"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ffbb44",
    size = 0.75
  ) +
  geom_smooth(
    data = subset(masterpat2, E_load == "E-"),
    method = lm,
    se = F,
    level = 0.95,
    na.rm = F,
    color = "#ee8577",
    linetype = "dashed",
    size = 0.75
  )+
  geom_smooth(
    method = lm,
    se = T ,
    level = 0.95,
    na.rm = F,
    color = "black",
    size = 0.75
  ) +
  scale_shape_manual(
    labels = c(
      "*A. membranacea*",
      "*C. cainito*",
      "*C. alliodora*",
      "*Dipteryx* sp.",
      "*H. concinna*",
      "*L. panamensis*",
      "*T. cacao*"
    ),
    values = c(15:22)
  ) +
  scale_color_manual(
    name = "Treatment",
    labels = c("E-", "E+"),
    values = met.brewer(name = "Cross", n = 2, type = "discrete")
  ) +
  stat_poly_eq(
    formula = y ~ x,
    inherit.aes = TRUE,
    aes(label = paste(
      #..eq.label..,
      ..adj.rr.label.., #"~italic(p) ==",
      ..p.value.label..,
      #signif(..p.value.., digits = 4),
      sep = "*`,`~~"
    )),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x = "left",
    label.y = "top",
    vstep = 0.08
  ) +
  labs(x = "Shannon's Diversity Index", y = "logit[Pathogen damage (%)]") +
  #theme_classic(base_size = 10) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(size = 12),
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 7)
  )

#patho_shannon


# Multiples plots together

suppfig_S8 <-
  ggarrange(
    patho_lt,
    patho_lps,
    patho_aci,
    patho_lma,
    patho_shannon,
    nrow = 2,
    ncol = 3,
    label.x = -0.035,
    common.legend = TRUE,
    labels = c("(a)", "(b)", "(c)", "(d)", "(e)"),
    legend = "bottom"
  )

suppfig_S8
#Saving
ggsave(filename ="./figures/suppfig8.png", plot = suppfig_S8, dpi= 300, units=c("mm"), width=250, height=200, bg = "white")

#showtext_auto(FALSE)
```

## Figure S9

::: {#fig-S9}
![Simple linear regression of tiered mock community.](mock_files/mock_regressions.png){width="6in"}
:::

## Supplementary Material - Methods

#### Seed collection and sterilization

Seeds were prepared for germination within 24 hours of fruit collection on BCI, January - April 2019. Fruits were peeled to extract seeds, cleaned, put in water to swell embryo, sterilized, and planted in sterile soil germination trays (75% soil; 25% sand). Soil was autoclaved at 121 °C in two, one hour cycles. Seeds were surface sterilized using 10% bleach for 3 minutes followed by 70% ethanol for 3 minutes.

#### Germination Tray and 24-pot tray sterilization

Plastic germination trays and 24-cell trays were sterilized in a 10% bleach bath for 20 minutes, sprayed with 70% ethanol, and paper towel dried right before adding soil/planting.

#### Planting in germination trays

The sterile soil is added to an sterilized plastic germination tray, combined with water well until it is wet and has a cookie dough-like consistency. Seeds were then added to moist soil. A sprinkle of dry soil is added to as a top layer to discourage pathogen spores from landing in the wet surface soil.

#### Seedling transfer into pots

Once seeds germinated, seedlings were transferred to pots by wetting the soil and extracting intact root system. Seedling were immediately placed in pot with sterile soil using a small shovel after uprooting from germination tray. Hands were sprayed with 70% ethanol when switching from handling one species to handling another. Plants were watered as needed at the soil level and 25mL of MiracleGro all-purpose plant food was added to every seedling once a month throughout entirety of experiment.
