---
title: "[Working title]: Evaluating the Role of Endophyte-Rich Leaves in Protecting Tropical Trees Against a Generalist Herbivore and a Pathogen"
date: today
bibliography: references.bib
csl: functional-ecology.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolo@tulane.edu
    corresponding: true
    equal-contributor: false
    affiliations:
      - ref: tu
    # affiliation: 
    #   - id: tu
    #     name: Tulane University
    #     department: Ecology and Evolutionary Biology
    #     city: New Orleans
    #     state: LA
    #     country: US
    #     url: www.tulane.edu
  - name: A. Elizabeth Arnold
    orcid: 0000-0002-7013-4026
    email: arnold@ag.arizona.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: ua
      #- ref: ua2
      
    # affiliation: 
    #   - id: ua
    #     name: University of Arizona
    #     department: School of Plant Sciences
    #     city: Tucson
    #     state: AZ
    #     country: US
    #     url: www.arizona.edu
    #   - id: ua2
    #     name: University of Arizona
    #     department: Department of Ecology and Evolutionary Biology
    #     city: Tucson
    #     state: AZ
    #     country: US
    #     url: www.arizona.edu
  - name: Mareli Sánchez Juliá
    email: msanchezjulia@tulane.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: tu
    # affiliation: 
    #   - id: tu
    #     name: Tulane University
    #     department: Ecology and Evolutionary Biology
    #     city: New Orleans
    #     state: LA
    #     country: US
    #     url: www.tulane.edu  
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    equal-contributor: false
    affiliations:
      - ref: tu
    affiliation: 
      - ref: tu
      
affiliations:
  - id: tu
    name: Department of Ecology and Evolutionary Biology, Tulane University, 6823 St. Charles Avenue, New Orleans, LA 70118
  - id: ua
    name: School of Plant Sciences, Department of Ecology and Evolutionary Biology, Robert L. Gilbertson Mycological Herbarium. Ecosystem Genomics Graduate Interdisciplinary Program, and the Bio5 Institute, University of Arizona, Tucson, AZ 85721
  - id: ua2
    name: Department of Ecology and Evolutionary Biology and the Bio5 Institute, University of Arizona, Tucson, AZ 85721

filters:
  - authors-block

format:
  # pdf:
  #   documentclass: scrartcl
  #   include-in-header:
  #       text: '\usepackage{lineno}\linenumbers'
  #   linestretch: 2.0
  #   margin-left: 1in
  #   margin-right: 1in
  #   margin-top: 1in
  #   margin-bottom: 1in
  #   mainfont: TeX Gyre Termes #Alternative to Times New Roman
  #   sansfont: TeX Gyre Termes #Another option is Liberation Serif
  #   number-sections: true
  #   citation-package: biblatex
  #   #keep_tex: true
  #   keep_md: true
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    tbl-colwidths: true
    #linestretch: 2.0
    citation-package: biblatex
crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Fig. S
      space-before-numbering: false
      latex-list-of-description: Supplementary Figure
    
editor: source
execute:
  echo: false
warning: false
---

```{r}
#| echo: false
#| eval: true
knitr::opts_chunk$set(ft.tabcolsep=0)
```

```{r, Packages}
#| echo: false
#| eval: true
#| warning: false
# Data manipulation and visualizations ####
library("tidyverse")
library("rmarkdown")
library("conflicted")
library("devtools")
#library("DiagrammeR")
library("ggfortify")
library("ggiraph")
library("ggiraphExtra")
library("ggplot2")
library("ggpubr")
library("gridExtra")
library("ggthemes")
library("ggraph")
library("hrbrthemes")
library("igraph")
library("plotrix")
#library("viridis")
library("MetBrewer")
library("wesanderson")
library("lattice")
#library("knitr")


# Tables and housekeeping
library("janitor")
library("flextable")
library("huxtable")
library("gt")
library("gtsummary")
library("officer")
library("broom")
library("broom.mixed")
library("broom.helpers")
library("formatR")
library("data.table")
library("kableExtra")

# Stats ####

library("vegan")
library("nlme")
library("MASS")
library("MuMIn")
library("car") #For type 3 Anova with Anova() function.
library("PerformanceAnalytics")
library("corrr")
library("permute")

library("pls")
library("buildmer")
library("lme4")
library("sjPlot")
library("indicspecies")
library("rstatix")

# Phylogenetic analyses #source("https://raw.githubusercontent.com/joey711/phyloseq/master/inst/scripts/installer.R",local = TRUE)
library("mgcv")
library("phyloseq")
library("ape")
library("metagMisc")
#remotes::install_github("vmikk/metagMisc")
#library("speedyseq")
library("picante")
#source("http://bioconductor.org/biocLite.R")


# Preference of conflicted functions among packages ####
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer_all("phyloseq")
```

**Author contributions:** A.E.A., S.A.V. designed research study. M.S.J. and B.A.R. performed experiments and collected data. B.A.R. and M.S.J. analyzed data. B.A.R. wrote the manuscript with input from all authors. All authors gave final approval for publication.

# Abstract

Leaf traits such as leaf chemistry, lifespan, toughness, and leaf mass per area (LMA) are a plant’s first line of defense against natural enemies. Plants that invest more in leaf tissue with longer lifespans and higher LMA typically feature robust constitutive defenses (e.g., leaf toughness, thickness, and dense cell walls) as well. In contrast, plants that invest little in leaf nutrients and have low LMA often invest more in induced defenses. Together, leaf traits, whether constitutive or induced, represent an environmental filter for leaf microbial communities, especially foliar endophytic fungi (FEF), which may in turn play an additional role in plant defense. Our overarching hypothesis is that FEF alter  leaf fate by interacting directly or indirectly with leaf traits, thus reshaping sucessive  FEF colonization, development of leaf traits and response to plant enemies. To evaluate this hypothesis, we inoculated seedlings of seven tropical tree species with natural and diverse endophyte communities. We confirmed the success of our inoculations of low FEF (*E-*) and high FEF (*E+*) treatment groups via culturing and culture-free amplicon sequencing. We then measured leaf removal by leaf-cutter ants (*Atta colombica*) and leaf necrosis due to a generalist fungal pathogen (*Calonectria* sp.). Across the experiment as a whole, we observed greater herbivory in the E- treatment compared to the E+ treatment, but no difference in pathogen damage. However, we did see significant differences between exposed and non-exposed pathogen leaves within the *E-* treatment group and within the *E+* treatment group. Dimensionality reduction for leaf traits revealed correlations among LMA, toughness, thickness, and anthocyanin levels, but did not reveal relationships between these and endophyte diversity. Previous research showed that FEF abundance, diversity, and composition vary as a function of these leaf traits, suggesting that FEF community traits should be integrated into such models to understand their relative importance in defining leaf defense. In turn, indicator species analyses reveal functional traits and taxonomic identities of FEF associated with high- and low leaf damage by natural enemies, suggesting new insights into cryptic roles of foliar symbionts in extending and modifying plant defenses in tropical forests.

# Keywords:

*Atta colombica*, *Calonectria*, foliar fungal endophytes, herbivory, pathogen, symbioses, tropical trees

# Introduction

Vascular plants encountered many challenges in their expansion inland: new climates, rising CO~2~ [@leakey2012],  unique substrates, and stressors like water limitation that required innovations in both allocation and transfer (CITE). Angiosperms have been successful throughout their evolutionary history by developing an array of strategies to combat biotic [@feild2005] and abiotic [@leakey2012] selective pressures. Strategies against stressors that damage leaf tissue range from secondary metabolites like alkaloid and jasmonic acid [@guerriero2018; @teoh2016] to structures that deter potential pests (e.g., thorns/modified leaves)(CITE). Leaf functional traits such as shape, leaf thickness, leaf strength, leaf mass per area (LMA), and anthocyanins are often a plant’s first line of defense against herbivores and pathogens, key selective evolutionary pressures [@niklas2023; @anderson2010].

Leaf defenses can be placed conceptually along the leaf economic spectrum (LES), which on one end has short-lived leaves with high nutrient content, low leaf mass per area (LMA), thin  leaf blades, and thin cell walls, and on the other end, long-lived leaves with low nutrient content, high LMA, thick leaf blades and thick cell walls [@mason2015; @wright2004]. Investment in baseline constitutive defenses is associated with longer lifespans [@kitajima2012; @kitajima2013], whereas plants that invest little in leaf nutrient content and LMA are potentially able to invest more in induced defense [@kitajima2013; @poorter2006; @wright2004]. 
Such leaf functional traits are expressed differentially across species and are influenced by their life history and the environment they occupy (CITE).Because they define the chemical, structural, and longevity characteristics of leaves, leaf functional traits also influence associated leaf microbial communities [@saunders2010; @tellezTraits2022]. Many leaf-associated microbes establish in leaves via horizontal transmission and are thought to alter the physical and chemical traits of leaves (CITE). If leaf traits confer selectivity, then plants can gain or lose potential allies in the fight against herbivores and pathogens, ultimately contributing to their ecological and evolutionary success [@friesen2011].

Leaf microbial communities, such as foliar endophytic fungi (FEF), are found inside the leaf tissue of all lineages of vascular land plants [@currie2014; @rodriguez2009]. In tropical forests, FEF transmit horizontally through ambient spore fall [@arnold2000]. Newly flushed leaves are free of FEF presenting fungal spores with challenges to colonization that will ultimately determine FEF communities. They generally grow asymptomatically within leaves [@porras-alfaro2011]. Nevertheless, FEF have been found to modulate leaf functional traits, especially with regard to the expression of secondary metabolites, sensitivity to drought, photosynthetic rates an efficiency, and defense against natural enemies [@arnold2003; @arnold2007; @friesen2011; @bittleston2011; @estrada2013; @mejia2014]. Such effects have not been examined systematically and quantitatively, but are critical to understanding the species interactions in tropical forests relevant to plant survival, performance, and productivity and downstream ecosystem services [@mcgill2006]. Tellez et al. [-@tellezTraits2022] highlighted how FEF communities in tropical trees structure along specific leaf functional traits, thus extending the LES framework by including diverse and ecologically important FEF. The potential FEF have to alter where plants fall in the LES offers a useful lens to ask: what is the role of FEF in plant defenses against herbivores and pathogens and what are the trade-offs. Our grasp of the role of FEF in plant defenses is critical to our understanding of plant-enemy interactions and the maintenance of plant diversity in tropical forests.

In this study, we set out to investigate the role of FEF abundance, diversity and community composition in the modulation of leaf functional traits and plant's response to herbivory and pathogen damage. This work builds upon experiments that used single plant species to plant enemies [@estrada2013; @mejia2008; @mejia2014] by incorporating seven phylogenetically distinct tropical tree species and two plant enemies. We hypothesized that FEF improve leaf defenses against generalist herbivores and pathogens, especially in plants that invest less in constitutive defenses (e.g., thin leaves and short-lived). Alternatively, plants that invest more in constitutive defenses rely less on induced FEF acquisition. To test our hypothesis we designed an experiment that manipulated tropical tree seedlings and measured leaf damage (herbivory and pathogen infection) and a subset of leaf functional traits: leaf mass per area (LMA) , leaf thickness (LT), leaf punch strength (LPS), and anthocyanins (ACI), in response to high and *E-* treatments. As plant enemies, we used as model systems leaf-cutter ants, *Atta colombica* (Formicidae), for a generalist herbivore and *Calonectria* sp. (Nectriaceae) for a generalist pathogen. We predicted the following: 1) Leaf-cutter ants and *Calonectria* sp. would cause less leaf damage (herbivory through leaf tissue removal and leaf necrosis through pathogen infection, respectively) on leaves with higher FEF abundance, richness and diversity composition; 2) Tree species with leaf functional traits on the low end of the economic spectrum (e.g., lower leaf mass per area) would have less herbivory and pathogen damage when treated with high FEF densities compared to their *E-* counterparts; 3) Conversely, tree species with leaf functional traits of the high side of the economic spectrum (e.g., greater leaf mass per area) treated with *E+* would have no differences in herbivory and pathogen damage compared to their low FEF counterparts; 4) We anticipated that leaves with leaf functional traits on the high end of the economic spectrum would be less attractive to leaf-cutter ants, but *E-* in them may outweigh this selection factor. To test our predictions, we addressed the following questions:

1.  How do FEF high and low treatment differs in terms of abundance, richness, diversity, and community composition?

2.  How do leaf functional traits differ between FEF high and low treatments?

3.  What is the relationship between FEF abundance, richness, diversity and species composition and herbivory and pathogen damage?

4.  What is the relationship between leaf functional traits and herbivory or pathogen damage in high and low FEF treatment groups?

This is the first study to examine the interplay of FEF communities and leaf functional traits in plant defenses against *Atta colombica* and *Calonectria* sp. in tropical tree species. Integrating the role FEF communities into a conceptual framework that includes trade-offs to plants' constitutive and induced defenses in response to natural enemies will help us understand the importance FEF communities in the maintenance of plant diversity in tropical forests.

# Materials and Methods

### Study site and seedling rearing

The species, *Theobroma cacao*, *Dypterix* sp., *Lacmellea panamensis*, *Apeiba membranacea*, *Heisteria concinna*, *Chrysophyllum caimito*, and *Cordia alliodora* were chosen due to their variance in leaf functional traits (J.Wright *unpublished data*). Seeds from maternal sources were collected from the forest floor at Barro Colorado Island (BCI) in central Panama (9°050N, 79°450W) during January - April 2019. The average annual precipitation at BCI is 2,600 mm and the pronounced wet season ranges from May to December [@leigh1996]. In preparation for the experiment, seeds were surface sterilized by soaking in water and rinsing in sodium hypochlorite (NaClO) and ethanol (EtOH). Seed from each species had a species-specific sterilization protocol (see Supplementary Materials). Seed germination and the experiment was carried out at the Santa Cruz Field Facility of the Smithsonian Tropical Research Institute in Gamboa, Panama (9°070N, 79°420W). We germinated and reared seedlings in a clean and shaded greenhouse where we enclosed four tables with a PVC pipe frame and covered it in 3 mil clear plastic sheet; two plastic enclosures with two tables each. The enclosures allowed us to grow plants at ambient temperature and moderate light while providing protection from rain and most fungal spores. This allowed us to rear seedlings with yielding zero to low endophyte densities [@bittleston2011]. To ensure sterile conditions throughout the experiment, we cleaned table surfaces and walls of the enclosures on a weekly basis with 70% EtOH and 0.5 % NaClO. We germinated seedlings in sterilized trays containing a 3:1 mix of soil and river sand that was autoclaved for two one-hour cycles at 121°C prior to planting. Individual seedlings were transferred from germination trays to a 24-cell tray (each cell \~380 mL) containing the same autoclaved soil and sand mixture. We took precaution to extract complete root systems from the seedlings. See Supplementary Materials for further details on plastic tray and pot sterilizations protocols.

Seedlings reached a minimum of 3-4 true leaves before endophyte inoculation. We placed seedlings on separate tables designated for spore fall inoculation and non-inoculated treatment groups within the enclosures. Seedlings of the same species but different treatment groups were in the same enclosure. We watered seedlings at the soil level to minimize endophyte spore germination in the enclosures [@arnold2003].

### Fungal endophyte inoculation

To inoculate seedlings with FEF, we took 10 individual seedlings of each species and exposed them to 10 nights of spore fall to achieve a high FEF load (*E+*) and 10 homologous plants were kept inside the greenhouse plastic enclosure to maintain a low FEF load (*E-*). Plants exposed to spore fall were placed on a table near (\~10 m) the forest edge at dusk (\~18:00 hours) and returned to the greenhouse at dawn (\~07:00 hours) [@bittleston2011]. We sprayed the *E+* seedlings with water to simulate rain and to promote endophyte spore germination and infection of leaves. We repeated this process for 10 consecutive nights. Low FEF plants (*E-*) were watered only at the soil level and shuffled and moved inside the greenhouse to simulate similar treatment as *E+* seedlings.

### Leaf trait measurements

Three mature leaves were haphazardly collected from each of the individual plants in each treatment (*E+*, *E-*) within 7-10 days after inoculation treatment. Anthocyanin (ACI) content and leaf thickness (LT) were measured while the leaf was still attached to the plant. We measured anthocyanin content with ACM-200plus (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on three haphazardly selected locations (working from the petiole out to the leaf tip) on the leaf surface of three haphazardly selected leaves for a total of nine measurements per plant [@tellezTraits2022]. To account for leaf thickness, the ACM-200 calculates an anthocyanin content index (ACI) value from the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@tellezRedCol2016, @opti-sciencesinc]. On compound leaves (i.e., *Dypterix* sp.) we measured at three different leaflets. Leaf thickness (μm) was measured with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) at six different points on the leaf lamina; at the base, mid-leaf and tip on both sides of the mid-vein, taking care to avoid major and secondary veins. After ACI and leaf LT measurements were completed, we removed the leaves from their stems, placed them inside a plastic bag (i.e., ZiplocⓇ), place in an ice chest and moved them to the lab for further measurements. Leaf punch strength (LPS) was measured with an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). The leaf punch measurements were taken at six different points of the leaf by puncturing the lamina at the base, mid-leaf and tip on both sides of the mid-vein, avoiding minor leaf veins when possible [@tellezTraits2022]. Once LPS was measured, we used a 7 mm diameter punch hole to puncture disks for leaf mass per area (LMA) measurements. We collected three disks per leaf (see Supplementary material for details). The disk punches dried at 60 °C for 48-72 hours. before being weighed.

### Leaf tissue preparation for molecular work

The selected leaves were also used to profile endophyte community composition, abundance, and richness via amplicon sequencing (Illumina MiSeq). The leaf tissue remaining after the leaf trait measurements had the main vein and margins excised so that only the lamina remained. The lamina was haphazardly cut into 2 x 2 mm segments, enough to obtain a total of 16, and surface sterilized by sequential rinsing in 95% ethanol (10 s), 0.5 NaOCl (2 mins) and 70% ethanol (2 mins), as per [@arnold2003; @higgins2014; @tellezTraits2022]. After, leaves were air-dried briefly under sterile conditions. Sixteen leaf segments per leaf, a total of forty-eight leaf segments per plant, were plated in 2% malt extract agar (MEA), sealed with Parafilm M (Bemis Company Inc., U.S.A.) and incubated at room temperature. The cultured leaf segments were used to estimate endophyte colonization of *E-* and *E+* leaves. The presence or absence of endophytic fungi in the leaf cuttings was assessed 7 days after plating. The remaining sterilized leaf lamina was preserved in sterile 15 mL tubes with \~ 10 mL CTAB solution (1 M Tris--HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). Leaf tissue in CTAB solution was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a biosafety cabinet with all surfaces sterilized by exposure to UV light for 30 minutes and cleaned sequentially in between samples with 95% ethanol, 0.5% NaOCl and 70% ethanol to prevent cross contamination.

## Amplicon sequencing

Leaf tissue in CTAB solution was stored for 2 months at room temperature prior to being placed at -80 °C for 3 months before extracting DNA. In preparation for DNA extraction, we decontaminated all instruments, materials, and surfaces with DNAway (Molecular BioProducts Inc., San Diego, CA, United States), 95% Ethanol, 0.5 % NaOCl, and 70 % Ethanol, and subsequently treated with UV light for 30 minutes in biosafety cabinet. We then transferred 0.2 -- 0.3 g of leaf tissue into duplicate sterile 2mL tubes, resulting in 2 subsamples. Total genomic DNA from subsamples was extracted as described in U'Ren & Arnold [-@uren2017]. In brief, we added two sterile 3.2 mm stainless steel beads to each tube and proceeded to lyophilize samples for 72 hours to fully remove CTAB content from tissue. After this period, we submerged the sample tubes in liquid nitrogen for 30s and proceeded to homogenize samples to a fine powder for 45 s in FastPrep-24 Tissue and Cell Homogenizer (MP Biomedicals, Solon, OH, USA). Afterwards, we repeated the decontamination procedure described before and used QIAGEN DNeasy 96 PowerPlant Pro-HTP Kit [@uren2017] (QIAGEN, Valencia, CA, USA). After all genomic DNA was extracted, we pooled the subsamples for each individual sample before amplification. We followed a two-step amplification approach previously described by Sarmiento et al. [-@sarmiento2017] and U´Ren & Arnold [-@uren2017]. We used a separate set of sterile pipettes, tips, and equipment to reduce contamination. We used a designated PCR area to restrict contact with pre-PCR materials [@oita2021]. Used primers for the fungal ITSrDNA region, ITS1f (5'-CTTGGTCATTTAGAGGAAGTAA-3') and ITS4 (5'-TCCTCCGCTTATTGATATGC-3') with modified universal consensus sequences CS1 and CS2 and 0--5 bp for phase-shifting. Every sample was amplified in two parallel reactions containing 1-2 µL of DNA template [@uren2017; see also @tellezTraits2022]. We visualized PCR (PCR1) reactions with SYBR Green 1 (Thermo Fisher Scientific, Waltham, MA, USA.) on a 2% agarose gel [@oita2021]. Based on band intensity, we combined parallel PCR1 reactions and diluted 5 µL of amplicon product with molecular grade water to standardize to a concentration of 1:15 [@tellezTraits2022; @sarmiento2017]. We included DNA extraction blanks and PCR1 negatives in this step. We used 1 µL of PCR1 product from samples and negative control for a second PCR (PCR2) with barcode adapters (IBEST Genomics Resource Core, Moscow, ID, USA). Each PCR2 reaction (total 15 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix, 0.075 µM of barcoded primers (forward and reverse pooled at a concentration of 2 µM) and 0.24mg/mL of BSA following Sarmiento [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. Before final pooling for sequencing, we purified the amplicons using Agencourt AMPure XP Beads (Beckman Coulter Inc, Brea, CA USA) to a ratio of 1:1 following the manufacturer's instructions. The products were evaluated with Bio Analyzer 2100 (Agilent Technologies, Santa Clara, CA, USA) [@tellezTraits2022]. We quantified the samples through the University of Arizona Genetics Core, and subsequently diluted them to the same concentration to prevent over representation of samples with higher concentration [@sarmiento2017]. Amplicons were normalized to 1 ng/µL, then pooled 2 µL of each for sequencing. No contamination was detected visually or by fluorometric analysis. To provide robust controls we combined 5 µL of each PCR1 negative and the DNA extraction blanks and sequenced them as samples. Ultimately, we combined samples into a single tube with 20 ng/µL of amplified DNA with barcoded adapters for sequencing on the Illumina MiSeq platform with Reagent Kit v3 (2 × 300 bp) following protocols from the IBEST Genomics Resource Core at the University of Idaho, USA. Again, we included the DNA extraction blanks and two PCR1 negatives and sequenced with samples. 
<!-- Sequencing yielded 3,778,081 total ITS1 reads. -->

### Mock Communities

We processed and sequenced a mock community following the methods described above. We had two aims: to understand the relationship between read abundance and biological abundance, and to determine whether primer bias might exclude fungal lineages of interest from our sequence data. We used two mock communities that consisted of PCR product from DNA extractions of 32 phylogenetically distinct fungi, representing lineages that are typically observed as endophytes: Ascomycota, Basidiomycota, fungi traditionally classified as Zygomycota, and Chytridiomycota [@oita2021; see @daru2019 for details]. In brief, we sequenced six replicates of the mock community with equimolar concentrations of DNA from all 32 fungal taxa, and another six replicates of the mock communitys with tiered concentrations of DNA from the same fungal taxa [see @daru2019]. Each mock community was sequenced five times (i.e., five replicates) [@oita2021]. Read abundance from tiered communities was positively associated with the expected read number (*R^2^~adj~* = 0.87, *p* \< 0.0001, see Fig. S9), and all major fungal lineages present in the mock community were detected (data not shown).  Henceforth, we used read abundance as a relevant proxy for biological OTU abundance [@uren2019].

### Bioinformatic analyses

We used VSEARCH (v2.14.1) for *de novo* chimera detection, dereplication, and assignment of sequences to operational taxonomic units (OTU). VSEARCH is an open-source alternative to USEARCH that uses an optimal global aligner (full dynamic programming Needleman-Wunsch), resulting in more accurate alignments and sensitivity [@rognes2016]. For mock communities and experimental samples, we used forward reads (ITS1) for downstream bioinformatics analyses due to their high quality, rather than reverse reads (ITS4). Following Sarmiento et al. [-@sarmiento2017], we concatenated all reads in a single file and used FastQC reports to assess Phred scores above 30 and determine the adequate length of truncation. We processed 892,713 sequence reads from mock communities and 3,778,081 from experimental samples. We truncated mock community and experimental sample reads to a length of 250 bp with command `fast_trunclen` and filtered them at a maximum expected error of 1.0 with command `fast_maxee`. We then clustered unique sequence zero radius OTUs (that is, zOTUs; analogous to amplicon sequence variants [@callahan2016]), by using commands `derep_fulllength` and `minseqlength` set at 2. Sequentially we denoised and removed chimeras from read sequences with commands `cluster_unoise`, and `uchime3_denovo`, respectively. Finally, we clustered zOTUs at a 95% sequence similarity with command `usearch_global` and option `id` set at 0.95. At that point, 3,035,960 sequence reads from experimental samples remained. Taxonomy was assigned with the Tree-Based Alignment Selector Toolkit [v2.2; @carbone2019] by placing unknowns within the Pezizomycotina v2 reference tree [@carbone2017], and blasting against the UNITE database via the ribosomal database project (RDP) classifier. A total of 2147 OTUs were obtained, with the combined taxonomic data sets revealing 68.6% Ascomycota, 26.8% Basidiomycota, and other fungal lineages either rare (e.g., <0.05% Chytridiomycota, Mortierellomycota) or unidentified (4.2 %). Only OTUs representing Ascomycota were used for downstream statistical analyses since foliar endophyte communities in tropical trees are dominated by Ascomycota [@arnold2007]. For each OTU identified, we removed laboratory contaminants from experimental samples by subtracting the average read count found in control samples from the DNA extraction and PCR steps. Our analysis of mock communities allowed use to identify and remove false OTUs from experimental samples, those with fewer than 10 reads, leading us to 0.1% of the read relative abundance across all samples [@oita2021]. Three experimental samples from *Theobroma cacao* (*n*=2) and *Apeiba membranacea* (*n*=1) were removed from all analyses due to incomplete entries. After pruning OTU with zero reads from experimental samples, we identified 260 OTUs found exclusively in control (*E-*) plants (*n*=78) and deemed them as artifacts resulting from greenhouse conditions.They were eliminated from treatment (*E+*) plants across all species. We converted reads for each fungal OTU to proportions of total sequence abundance per sample to reduce differences in sampling effort, following previous studies (@weiss2017). We then removed singletons and obtained an average of 2,464,558 sequence reads in 529 Ascomycota OTUs across 156 experimental samples of 7 tree species. All analyses after taxonomic assignment were performed in R [v. 4.3.2; @rcoreteam2023] using the `phyloseq` package [@mcmurdie2013] and custom scripts (see Supplementary Material).

### Herbivore assays

A fresh fourth leaf was used in ant assays. To assess leaf-cutter ant damage, we introduced one detached leaf per plant per treatment to an actively foraging leaf-cutter ant colony for a two-hour assay. We presented leaf-cutter ant colonies with a choice of an *E+* or an *E-* leaf on one disposable plastic plate next to an active nest trail. Carefully, we collected and placed debris from the trail leading up to the plate to encourage foraging in the plate. We initiated the ant assay as soon as one ant entered the plate and explored the leaf contents for at least 10-20 seconds. Every five minutes we took a digital photo of the choice arena until about 75% of the leaf content of one of the leaves was taken. We used the digital photo at time zero and at the end of trial to quantify the leaf area removed using ImageJ [v1.52r; @schneider2012]. Ant recruitment was estimated by counting individuals in the choice arena throughout trial event.

### Pathogen assays

For the pathogen assays, we introduced an agar plug inoculated with hyphae of *Calonectria* sp. (*P+* treatment), and an agar plug without the pathogen (*P-* control) to similarly aged/sized leaves that were still on plants (i.e., were not harvested) within 10-14 days after endophyte inoculations [@gilbert2007]. Leaves with the *P+* or *P-* treatment were misted with sterile water two times a day (morning and afternoon) to maintain moisture. After four days, we removed the plugs and took digital photos to analyze leaf area damage using ImageJ [v1.52r; @schneider2012].

### Replication Statement

```{r, replication_statement}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Replication statement of the statistical analysis in this study."


# sect_properties <- prop_section(
#   page_size = page_size(
#     orient = "portrait",
#     width = 8.25, height = 11.7
#   ),
#   type = "continuous",
#   page_margins = page_mar()
# )

#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 2)

rep_statement <- hux(
  "Scale of inference" = c("Leaf functional traits",
                           "Genomic data",
                           "Herbivore assays",
                           "Pathogen assays"),
  
  "Scale at which the factor of interest is applied" = c("Species",
                                                        "Species",
                                                        "Species/individual",
                                                        "Species/individual"),
  "Number of replicates at the appropriate scale" = c("Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5. Replicate leaves per plant = 3",
                                                      "Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5",
                                                      "Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1",
                                                      "Treatment = 2 (E-, E+), sub-treatment = 2 (control and pathogen) for pathogen trials, Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1"))


rep_statement <- rep_statement |>
  set_all_padding(4) |> 
      set_outer_padding(0) |> 
      set_bold(row = 1, col = everywhere) |> 
      set_bottom_border(row = 1, col = everywhere) |> 
      set_width(1.1) |>
  theme_article() |>
  huxtable::as_flextable(column_to_header=TRUE) |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick) |>
  flextable::align(j = 1:3, align = "center", part = "all") |>
 # flextable::width(j = 1, width = 1.5, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

rep_statement
#quick_docx(rep_statement, file = "./tables/replication_statement.docx")
```

### Statistical Analyses

We explored how leaf functional traits and FEF correlated to herbivory and pathogen damage on leaves.  We present the analyses for each tree species at the leaf and at the plant level. Leaf functional traits are presented at the leaf level, while FEF data are presented at the plant level, consistent with our whole-plant inoculation approach. In analyses where leaf functional traits and FEF are combined we used averages of leaf functional traits.

First, we compared the means of herbivory (%) damage, and leaf functional traits for each species and treatment groups using paired two-sided Student's t-Test and analysis of variance (ANOVA) with the `compare_means` and `stat_compare_means` functions from the `ggpubr` package in R [@kassambara2023], which wrap and extend the `anova` and `t.test` functions from the `stats` package [@rcoreteam2023] and facilitate plotting. Additionally, to facilitate comparison between group levels we used the `pairwise_t_test` function from the `rstatix` package [@kassambara2023a] when we compared pathogen (%) damage means. This function also wraps and extends base *R* functions. We adjusted *p* values to account for false discovery rates in multiple comparisons by using "BH" method [@benjamini1995].

Secondly, we calculated a Bray-Curtis dissimilarity matrix with our OTU relative abundance data and computed a distance-based redundancy analysis (dbRDA) by applying the `dbRDA` function in the `vegan` package to our dissimilarity matrix [@oksanen2022]. We computed forward model selection for dbRDA analysis with the `ordistep` function which selects terms based on *p* values [@blanchet2008; @oksanen2022]. We started with our initial model containing only the intercept (dissimilarity_matrix \~ 1) and setting the functions arguments to the following: `scope` = formula(*m*), where *m* is the formula with a defined range including leaf functional traits, tree species and treatment groups; `Pin` = 0.5, `Pout` = 0.05, `trace` = T, `permutations` = how(nperm = 999), `steps` = 50.The dbRDA is considered analogous to a permutational analysis of variance (PERMANOVA) with non-Euclidean distance [@anderson2017; @mcardle2001]. Its corresponding visualizations appropriately illustrate underlying patterns of compositional differences [@anderson2017; @legendre1999; @mcardle2001]. We used the `anova.cca` function to assess the marginal significance of constraining variables [@oksanen2022; @legendre2012; @legendre2011] Applied here to visualize associations between leaf functional traits and FEF communities in host tree species and treatment groups.

Thirdly, we arbitrarily designated percent leaf damage in herbivore assays as high (\>70%), medium (31-69%) and low (\<30%) and in pathogen assays as high (\>30%) and low (\<30%). These categories allowed us to explore correlations between host tree species and specific FEF OTUs. To achieve this we used the `multipatt` function from the `indicspecies` package in *R* [@decaceres2009]. We calculated the point biserial correlation coefficient for each OTU at all tree species and treatment group combinations by applying the `multipatt` function with arguments `func`= "r.g" and `control` = how(nperm=999) to our OTU abundance matrix [@decaceres2009]. Like with other statistical tests performed, we adjusted *p* values to account for false discovery rates in multiple comparisons by using "BH" method [@benjamini1995] in the `p.adjust` function from the `stats` package [@rcoreteam2023]. We then filtered the adjusted a *p* value with a cutoff of \<0.05.

We used Principal Component Analysis (PCA) to reduce dimensions among covariates and reveal underlying interactions between covariates that could influence herbivory and pathogen damage. The PCA was computed using the `prcomp` function in R statistical software [@rcoreteam2023]. A complete PCA was computed with variables ACI, LT, LPS, and LMA. We then proceeded to compute a PCA with the data from leaves of plants used in the herbivory (*n* = 210) and pathogen assays (*n* = 192). We then took from the herbivory and pathogen PCA the principal components that explained the most variance (PC1 and PC2) and regressed them to herbivory (%) and pathogen damage (%). We also regressed ACI, LT, LPS, LMA and Shannon diversity index to logit transformed herbivory (%) and pathogen damage (%). We used the `logit` function from the `car` package for logit transformation of variables and the `lm` function from the `stat` package for simple linear regressions [@fox2019; @rcoreteam2023].

Lastly, to test how leaf functional traits and FEF communities interact to influence herbivory and pathogen damage in tropical tree species, we used a generalized linear mixed model (GLMM) with herbivory and pathogen damage percentage (logit transformed) as the response variable. To determine which fixed effects to include in the GLMMs we used the `vif` function from the `car` package in *R* to calculate the variance inflation factor for all explanatory variables (ACI, LT, LPS, LMA, and Shannon diversity index) [@fox2019; @rcoreteam2023]. Complementary to this, we calculated Pearson's coefficient for each pair of leaf functional traits with by creating a correlation matrix and applying the `cor` function from the `stats` package to assess correlations among traits [@rcoreteam2023]. We opted to maintain explanatory variables LT and LMA, and exclude ACI and LPS from subsequent general linear models (GLMMs) due to high collinearity between the two variables with LMA, *r*(1112) = 0.68, *p* \< 0.0001 and *r*(1113) = 0.65, *p* \< 0.0001, respectively. We modeled only main effects with explanatory variables, we did not model interactions effects to avoid overfitting models. We used a restricted maximum likelihood estimates for model fit with the `lme` function from the `nlme` package [@pinheiro2023]. For our logit herbivory GLMMs we used tree species as a random effect and modeled tree species variance structure with the `varIdent` argument [@pinheiro2023]. For our logit pathogen damage GLMMs we use tree species as a random effect and modeled a nested variance structure for pathogen treatment within treatment groups per species with the `varIdent` argument [@pinheiro2023]. We manually compared and selected models based on Akaike Information Criterion (AIC) with a penalty of 2 degrees of freedom (ΔAIC) with the `model.sel` function from the `MuMIn` package [@barton2023]. We selected the best-fit model based on the lowest value obtained.

# Results

Seedlings exposed to forest spore fall (i.e., *E+*) had a significantly higher proportion of leaf segments colonized by FEF across all species (data from cultures, Fig. S1). Similarly, molecular data set showed that seedlings with *E+* treatment had a significantly higher FEF relative abundance (paired, two-sided *t*-tests, *p* \< 0.05) for all tree species when compared to the *E-* treatment (Fig. 1a). Despite these significant differences, there was a high degree of variability in FEF relative abundance within each treatment type (Fig. 1).

We observed general differences in leaf functional traits among species (Table 2). ACI and LPS did not differ between treatments (*E-* and *E+*) when we combined all host species (Fig. S2a and Fig. S4a respectively). For LT and LMA we saw significant differences between *E-* and *E+* treatment groups when we combined all host species (Fig S3a and Fig. S5a, respectively). As predicted, we did observe lower herbivory in the *E+* treatment compared to the *E-* treatment when we combined all host species, *t*(34) = 2.23, *p* = 0.033 (Fig. 2a). We did not observe differences in pathogen damage between *E-* and *E+* treatments when we combined all host species (Fig. 2b). However, we did see differences between exposed (*M* = 17.37, *SD* = 12.57) and non-exposed (*M* = 3.49, *SD* = 5.42) pathogen leaves within the *E-* treatment group, *t*(31) = -7.19, *p* \< 0.0001 (Fig. 2b) and within the *E+* treatment group: exposed (*M* = 20.04, *SD* = 15.72), non-exposed (*M* = 7.17, *SD* = 17.48), *t*(31) = -3.26, *p* \< 0.01 (Fig. 2b). At the species level, herbivory and pathogen damage did not differ between treatment groups (Fig. S6a-S6b).

We used dbRDA to understand FEF community composition across host species and treatment groups. The analyses revealed that 6.34% of the overall variance in FEF communities was accounted for by the leaf functional traits, the constraining variables. The first axis (dbRDA1) explained 49% and the second axis (dbRDA2) explained 21.3% of the constrained variance (Fig. 3). We observed a high degree of overlap between FEF communities (Fig. 3), indicating that the communities are similar in composition across host species and treatment groups, at least at the degree of resolution provided by ITS data (Fig. 3). We observed tight clustering of FEF communities in *C. cainito* and *L. panamensis* although these are overlapped by *A. membranacea* pointing to a distinct subset composition of FEF OTUs within the latter (Fig. 3). All leaf functional traits significantly correlated with FEF community composition (Fig.3).

There was a core set of OTUs that significantly correlated with host tree species or particular treatments. In summary, 72 out of 569 Ascomycota OTUs were significantly correlated to our host trees species (Table S5). Seedlings used in herbivory assays had 13 OTUs significantly correlated with high herbivory damage (\>70%) and 3 and 1 OTUs significantly correlated with medium (31-69%) and low (\<30%) herbivory damage, respectively (Table S6). Seedlings used in pathogen damage assays had 11 OTUs significantly correlated with high (\>30%) pathogen damage (Table S7). We could not tease apart which OTUs were correlated with leaves treated with control and *Calonectria* sp. agar plugs because the genomic data scale for these trials was at the plant level, not leaf level. For the pathogen assays we found 30 OTUs significantly correlated with *E+* treatment (Table S8)..

The PCA revealed how leaf traits (ACI, LT, LPS and LMA) were related. We plotted leaf trait data according to tree species groups on the PCA axes to show how the variance in the complete data set is explained by PC1 (60%) and PC2 (27%) (Fig. 4a). We observed that ACI, LPS and LMA loadings tracked along PC1 towards more negative values, showing correlation among these traits (Fig. 4a). Traits LT and LPS were orthogonal to each other in Fig. 4a, indicative of low correlation. We note distinct grouping of species along PC1 such as *C. alliodora* in the direction of positive values of PC1 and *C. cainito* towards negative values. Along PC1 we saw distinct and tight clustering according to species for all except *H. concinna* and *A. membranacea* which overlaped with various other species. We noted that LT loading tracked towards negative values along PC2 (Fig. 4a). Clear species groupings were detected, such as *Dypterix* sp. located towards positive values and *L. panamensis* towards negative values of the PC2 axis. We note a similar relationship between the leaf traits with respect to PC1 and PC2 in individual seedlings used for herbivory versus pathogen damage trials (Fig. 4b-4c). The PCA of leaf traits from seedlings used in herbivory trials had a PC1 explaining 57.5% of the variance and a PC2 explaining 28% of the variance in the subset data (Fig. 4b). We saw an inversion of the LT loading in direction of positive values, as well as the main tree species clustered (i.e., *Dypteryx* sp. and *A. membranacea*) along PC2 (Fig. 4b) with respect to Fig. 4a. The PCA of leaf traits from seedling used in pathogen damage trials had a PC1 explaining 64% of the variance and a PC2 explaining 25% of the variance in the subset data (Fig. 4c). We detected similar relationships among leaf traits and PC axes in the pathogen damage subset data (Fig. 4c) when compared to the complete data set (Fig. 4a).

Simple linear regressions of herbivory (%) against PC1 revealed no correlation (*R^2^~adj~* = -0.0024, *F*~1, 208~ = 0.508, *df* = 208, *p* = 0.447)(Fig. 5a), where positive values represent greater values of ACI, LPS and LMA. Even though we note large spread in the data (Fig. 5a and 5b), we see that herbivory was strongly associated with PC2 (*R^2^~adj~* = 0.079, *F*~1, 208~ = 18.9, *p* \< 0.0001), where positive values represent greater LT (Fig. 5b). 
Percent pathogen damage plotted against PC1 revealed a statistically significant correlation (*R^2^~adj~* = 0.064, *F*~1, 380~ = 26.93 *p* \< 0.0001), in which positive values represent greater values of ACI, LPS and LMA (Fig. 5c). We did not see a statistically significant relationship between pathogen damage and PC2 (*R^2^~adj~* = 0.002, *F*~1, 380~ = 1.60, *p* = 0.207) (Fig. 5d). We found similar patterns in the simple linear regressions performed on the leaf functional traits without reducing dimensions and on logit transformed herbivory and pathogen damage data (Fig. S7 and S8, respectively). We observed a statistically significant positive relationship between herbivory and LT (*R^2^~adj~* = 0.081, *F*~1, 208~) = 19.45, *p* \< 0.0001) when considering the complete data set (Figure S7a). We did not observe statistically significant relationship between herbivory (%) and LPS, ACI, LMA, and Shannon's diversity index for FEF (Figure S7b - S7e) for the complete data set. However, we did observe a general decline in herbivory as FEF diversity increased which aligns with our predictions. In further detail we see a statistically significant negative relationship between herbivory and Shannon diversity for the *E-* treatment group (*R^2^~adj~* = 0.138, *F*~1, 103~ = 17.7, *p* \< 0.0001) (Figure S7e). We also see an in crease in herbivory for the *E+* treatment group as Shannon's diversity index for FEF increased, but this is not statistically significant (*R^2^~adj~* = 0.024, *F*~1, 103~ = 3.55, *p* = 0.062) (Figure S7e). For the simple linear regressions of pathogen damage against leaf functional traits we observed a statistically significant negative relationships between pathogen damage and LPS (*R^2^~adj~* = 0.078, *F*~1, 380~ = 33.32, *p* \< 0.0001), ACI (*R^2^~adj~* = 0.033, *F*~1, 380~ = 14.34, *p* = 0.0002) and LMA (*R^2^~adj~* = 0.030, *F*~1, 380~ = 12.6, *p* \< 0.001) (Figure S8b - S8d) when considering the complete data set. Pathogen damage did not have a statistically significant correlation with LMA (*R^2^~adj~* = -0.001, *F*~1, 380~ = 0.50, *p* = 0.482) (Figure S8a). The *E-* and *E+* treatment groups follow the same general trend as the complete data set. Contrary to our predictions, when we observe the complete data set find a statistically significant positive relationship between pathogen damage and Shannon's diversity index for FEF (*R^2^~adj~* = 0.015, *F*~1, 380~ = 6.90, *p* \< 0.01) (Figure S8e). Upon further scrutiny, only the *E+* treatment group has a statistically significantly positive correlation between pathogen damage and Shannon's diversity index for FEF (*R^2^~adj~* = 0.031, *F*~1, 188~ = 7.11, *p* \< 0.01) (Figure S8e).

The best-fit for our GLMMs showed that fixed effects LT, LMA, and *E+* treatment group are statistically significant predictors of herbivory damage (Table 3). No measure of FEF abundance or diversity was present in the final model. Leaf mass per area is a significant positive predictor of herbivory with the greatest effect size (estimate = 1741, *t*(200) = 3.53 *p* \< 0.001). While LT is a significant negative predictor of herbivory damage (estimate = -0.01, *t*(200) = -2.52, *p* = 0.01) and *E+* as well (estimate = -0.78, *t*(200) = -4.62, *p* \< 0.001). The best fit model for pathogen damage did not reveal any of the leaf functional traits as significant predictors (Table 3). Like our previous model, no measure of FEF abundance or diversity was present in final model. Even tough it was not significant, LMA showed the greatest effect size (estimate = 171.7, *t*(352) = 0.96, *p* = 0.34).

# Discussion

Our data suggest that foliar endophytic fungi (FEF) communities improve and leaf traits work to improve leaf defenses against generalist herbivores and pathogens in tropical trees. For all species combined, we saw that the *E+* treatment group had significantly less herbivory damage than the *E-* treatment group (Figure 2). On an individual species level, we did not see significant differences between treatment groups (Figure S6a). This is probably due to a small replicate size in treated individuals per species used in herbivory assay trials (see Replication Statement), but we did see that the *E+* group had lower herbivory damage in all tree species (Figure S6a). Such results align with Estrada et al., [-@estrada2013] findings, were leaf-cutter ant effects were significantly reduced in paper disks and leaves treated with higher densities of a common endophyte. In a laboratory setting, Bittleston et al., [-@bittleston2011] found similar patterns in herbivory reduction using *C. alliodora* treated with high and low FEF loads and laboratory reared colonies of *Atta colombica*. In a field study, Coblentz and Van Bael [-@coblentz2013] found that leaf-cutter ants preferred leaves with a lower FEF abundance when compared to surrounding leaf material (material not selected by ants). Rocha et al. [-@rocha2017], found endophytic *Trichoderma* more frequently isolated from leaf cuttings rejected by queen-less leaf-cutter ant colonies of *A. sexdens rubropilosa* in southeast Brazil. Our results track findings from previous studies that focus on single host-endophyte interactions or haphazard field collection and build upon them by using multiple host tree species and field inoculated FEF communities. Our GLMM analysis allowed us to look at FEF and leaf traits at the same time; for herbivory damage we observed only LMA, LT and *E+* treatment group as strong predictors (Table 3). Using data from all the assays in simple linear regressions, FEF diversity and community composition correlated negatively with herbivory damage, since we saw reduced herbivory as Shannon diversity index increased (black regression line in Figure S7e). As a caveat to these results, we saw an inverse relationship between the treatment groups with the *E+* group positively correlating to herbivory and *E-* group negatively correlating to herbivory (yellow and pink regression lines, respectively, in Figure S7e). The contrast between GLMM and simple linear regressions point to nuanced role of FEF diversity in combating herbivory; leaf functional traits, LMA and LT, overshadowed FEF diversity in our results. The FEF abundance, measured as *E+* treatment group also played a strong role in predicting herbivory, but less so diversity and community composition. <!-- Given consistent preference by leaf-cutter ants [@bittleston2011; @coblentz2013; @estrada2013], we interpret our results as evidence for a threshold of diminishing returns for the host plant, were the acquisition of more FEF increases the chances of hosting a community that does not deter leaf-cutter ants. From the perspective of the leaf-cutter ants, everything is equally infected and the cost of allocating new resources is taxing. It highlights a trade-off in the presumably asymptomatic symbiosis host species have with FEF communities. -->

We did not observe the same pattern for pathogen damage since there were no significant differences between treatment groups when considering all tree species combined (Figure 2b). Similar to herbivory damage, pathogen damage was not significantly different across treatment groups per species. Interestingly we saw that the *E+* group had equal or slightly higher pathogen damage than the *E-* group in all tree species (Figure S6b). The best-fit GLMM for pathogen damage showed LMA and LT as weak predictors (Table 3). On the other hand, with simple linear regressions we sew a significant increase in pathogen damage as Shannon diversity index increased for the complete data set (Figure S8e). Like our herbivory damage models, the contrast between GLMM and simple linear regression point to a nuanced role of FEF abundance and diversity in combating a pathogen. Pathogen damage significantly increased in the *E+* group as Shannon diversity increased, but the *E-* group did not (Figure S8e). González-Tauber [-@gonzalez-teuber2016] found the opposite trend when examining *in vitro* the inhibitory effects of the most abundant genera (*Mycosphaerella* sp., *Xylaria* sp., *Diaporthe* sp., and *Penicillium* sp.) in FEF communities isolated from the southern temperate tree *Embothrium coccineum* against three common pathogens (*Botrytis cinerea* , *Fusarium oxysporum* and *Ceratocystis pilifera*). In our case, it is possible that the FEF abundance and diversity acquired from spore-fall have a synergistic interaction with *Calonectria* sp., thus outweighing any benefits provided by single-species interactions, ultimately increasing pathogen damage intensity.

The leaf economic spectrum (LES) allows us to interpret our results based on the functional traits that can have an important role in understanding tripartite plant-insect-pathogen interaction. The LES describes how leaf functional traits with high values are characteristic of long-lived versus short-lived leaves [@wright2004, @kitajima2013, @poorter2006]. The LES, thus acts as a host imposed filter which FEF communities have to overcome to colonize leaf tissue, assemble, and carry out their life cycle. We did not measure leaf lifespan directly, but we interpret the values obtained for the leaf functional traits we measured as proxies for leaf lifespan, with the caveat that the traits were measured on seedlings and leaves were relatively young (\< 150 days). We saw that species with relatively low values of ACI, LMA, and LPS (Figures S2 - S5) constrained in PC1 axis (Figure 4b) experienced very little herbivory damage (i.e., *Dypteryx* sp.) or had much variability (i.e., *C. alliodora*) (Figure 5a). Species with relatively high values of ACI, LMA, and LPS like *C. cainito* experienced low to moderate herbivory damage (Figure 5a). A similar pattern was evident in the pathogen damage data set (Figure 5c). The contrast in the slopes of the regression lines in Figure 5a and 5c highlight the potential importance LES traits have to counter herbivory and pathogen damage. We view these findings and those presented in Figure S7 as support for our prediction, where leaves on the high end of the LES, are less attractive to leaf cutter-ants but the effects of FEF communities out weigh this selection factor after a certain threshold is reached, as mentioned above.

Comprehending the relationship between the Leaf Economic Spectrum (LES), plant defenses, and FEF communities is crucial for understanding the complex interactions among plants, insects, and pathogens. The Optimal Defense Theory (ODT), as outlined by Stamp [-@stamp2003], proposes three key predictions about plant defenses. First, a plant's defense investment is directly proportional to the frequency of attacks, such as herbivory or pathogen intensity, and inversely related to the cost of resources [@holeski2010]. Second, plants tend to allocate resources preferentially to parts with high reproductive value, especially when defense costs are minimal. Third, plants exhibit increased defensive responses after being attacked. This framework suggests that the likelihood of a plant to bolster its defenses following an attack is inversely related to its inherent defense traits[@holeski2010]. Our results point to a preemptive low-cost investment strategy against plant enemies, particularly at the seedling stage, that is leveraged by species specific inherent defense mechanisms. We did not track herbivory or pathogen damage past the seedling stage, so an avenue for inquiry is to investigate how FEF communities change after herbivore and pathogen attacks and to determine the key life stages. A combination of *in vitro* and *in vivo* assays could help elucidate the roles of specific FEF OTUs. The use of *in vitro* assays could help identify the potential anti-herbivore and anti-pathogen qualities of specific FEF OTUs. *In vivo* inoculation assays could help identify the importance that specific FEF OTUs have in different developmental stages, especially in older stages.

# Conclusion

This study advances our understanding of the intricate interactions between plants and their FEF communities, particularly in the context of plant defense mechanisms against herbivores and pathogens. Our findings highlight the complex dynamics of plant-herbivore-pathogen relationships and underscore the importance of FEF communities as a potentially low-cost, preemptive defense strategy for plants, especially during early growth stages. These insights not only shed light on the nuanced role of endophytes in plant ecology but also open avenues for future research, particularly in exploring the strategic resource allocation in plants and the specific contributions of FEF to plant resilience. As we continue to unravel these complex biological interactions, the knowledge gained holds promise not only for ecological theory but also for practical applications in agriculture, forestry, and conservation of the tropics.

# Author Contributions

A.E.A., S.A.V. designed research study. M.S.J. and B.A.R. performed experiments and collected data. B.A.R. and M.S.J. analyzed data. B.A.R. wrote the manuscript with input from all authors. All authors gave final approval for publication.

# Acknowledgements

This research was funded by NSF DEB-1556583 to S.A.V. and NSF DEB-1556287 to A.E.A., and by the School of Plant Sciences and the College of Agriculture, Life and Environmental Sciences at The University of Arizona (AEA). We thank Ming-Min Lee and Nicole Colón-Carrion for laboratory support. We thank the Republic of Panama for the opportunity to conduct research there, and the Smithsonian Tropical Research Institute for logistics support.

# Conflict of Interest Statement

The authors declare no competing interests.

# Data Availability Statement

# References

::: {#refs}
:::

# Figures

```{r, Clean sequences}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#Working directory
rm(list = ls()) 

#Working Directory and Path for Linux
setwd("/home/baponte/Boxx/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses/")
# 
save.path <- ("/home/baponte/Boxx/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses/")



set.seed(123)
# Cleaned (decontaminated) sample sequences ####
#csamp
# csamp <- read.csv("clean_data/otu_data/all_cleaned_at_10_percent.csv")
# csamp[,2:157] <- lapply(csamp[,2:157], as.integer)
# csamp <- csamp |>
#   rename(OTU_ID = X) |>
#   column_to_rownames(var = "OTU_ID") |>
#   na.omit() |>
#   na.fail() |>
#   as.matrix()

# Saving
# saveRDS(csamp, file.path(save.path, "R_objects", "clean_sequences.rds"))

# Reading
csamp <- readRDS(file.path(save.path, "R_objects", "clean_sequences.rds"))
```

```{r, TBAS}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# T-BAS taxonomic assignment ####
#tbas
# tbas <- read.csv("unite_report2BSDHQZP.csv")
# tbas <- tbas |>
#   dplyr::filter(phylum == "Ascomycota") |>
#   select(-match,-e.value, -percent, -coverage, -bitscore) |> #eliminating some columns that I am not really using
#   na.omit()|>
#   rename( OTU_ID = query) |>
#   column_to_rownames(var = "OTU_ID") |>
#   na.omit() |>
#   na.fail() |>
#   as.matrix()

# Saving
#saveRDS(tbas, file.path(save.path, "R_objects", "tbas_filtered.rds"))

# Reading
tbas <- readRDS(file.path(save.path, "R_objects", "tbas_filtered.rds"))
```

```{r, Leaf trait variables data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

data <- read.csv("field_data/Aim3_Bolivar_Summer_2019_Leaf_Traits_datasheet.csv")

# data
# Data set created on May 23, 2023 for analysis with raw data.
# data <- data |> 
#   separate(Unique_ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) |>
#   unite("Sample_name", Species2:Replicate, sep = "") |>
#   relocate(Sample_name, Trial_Code, E_load, .after = Species) |>
#   select(!c(5, 15:17, 20)) |>
#   rename(Anthocyanins = Anthocyanins..aci., 
#           Thickness = Thickness..micro.m.,  
#           Toughness =Toughness..lbf., 
#           LMA = LMA_dw, 
#           Abun_3 = Abundance_Proportion_day3, 
#           Abun_7 = Abundance_Proportion_day7)

# Saving
# saveRDS(data, file.path(save.path, "R_objects", "leaf_data_raw_analyses.rds"))

# Reading
data <- readRDS(file.path(save.path, "R_objects", "leaf_data_raw_analyses.rds"))

# ndata (new_data)
# This data set can also be used to conduct analyses summarized by leaf.

# ndata <- data |>
#   group_by(Sample_name, Species, Trial_Code, Trial_type, E_load, Leaf_ID) |>
#   summarise(Anthocyanins = mean(Anthocyanins, na.rm = TRUE),
#             Thickness = mean(Thickness, na.rm = TRUE),
#             Toughness = mean(Toughness, na.rm = TRUE),
#             LMA = mean(LMA, na.rm = TRUE),
#             Abun_3 = mean(Abun_3, na.rm = TRUE),
#             Abun_7 = mean(Abun_7, na.rm = TRUE)) |>
#   ungroup() |>
#    mutate_if(is.character, as.factor) |>
#   na.omit() |>
#   na.fail()

# Saving
# saveRDS(ndata, file.path(save.path, "R_objects", "new_leaf_data.rds"))

# Reading
ndata <- readRDS(file.path(save.path, "R_objects", "new_leaf_data.rds"))

# Splitting and relocating Unique_ID column 
# Extract names to match to phyloseq objects separate(Species2, c("Species3", "Numbers"), sep = "(?<=[A-Za-z])(?=[0-9])")

# ndata2 (new_data2)
# Data frame is summarized by plant (n = 156)

# ndata2 <- ndata |> 
#   select(!c(Abun_3, Abun_7)) |>
#   mutate_if(is.character, as.factor) |>
#   group_by(Sample_name, Species, Trial_type, Trial_Code, E_load) |>
#   summarise(Anthocyanins = mean(Anthocyanins, na.rm = TRUE),
#             Thickness = mean(Thickness, na.rm = TRUE),
#             Toughness = mean(Toughness, na.rm =TRUE),
#             LMA = mean(LMA, na.rm = TRUE)) 

# Saving
# saveRDS(ndata2, file.path(save.path, "R_objects", "new_leaf_data2.rds"))

# Reading
ndata2 <- readRDS(file.path(save.path, "R_objects", "new_leaf_data2.rds"))
```

```{r, Ant assay data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#ants <- read.csv("field_data/Aim3_Bolivar_Summer_2019_Ant_Assay_datasheet.csv")
# 
# ants <- ants |>
#   separate(Unique.ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) |>
#   unite("Sample_name", Species2:Replicate, sep = "") |>
#   relocate(Species, Trial_Code,.after = Sample_name)|>
#   slice(-c(11,12)) |>
#   dplyr::filter(Trial_success!="0") |>
#   select(!c(Leaf_ID, 
#             Colony_ID, 
#             Picture_ID, 
#             Colony_location_Pipeline.Gamboa, 
#             Attempt, 
#             Date_analyzed, 
#             X_coordinates, 
#             Y_coordinates, 
#             Elevation_meters, 
#             ELoad, 
#             Analyzer,             
#             Time_start_trial, 
#             Time_first_contact, 
#             Time_first_cut, 
#             Time_end_elapsed_trial )) |>
#   mutate(Ant_percent_leafloss = -100*{(Leaf_area_final-Leaf_area_initial)/Leaf_area_initial}) |>
#   mutate_if(is.character, as.factor)

# Saving
# saveRDS(ants, file.path(save.path, "R_objects", "ants_data.rds"))

# Reading
ants <- readRDS(file.path(save.path, "R_objects", "ants_data.rds"))

# Just the area loss
ants2 <- ants |>
  select(c(1,3,4,9,10))
```

```{r, Pathogen Assay Data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#patho <- read.csv("./field_data/Aim3_Bolivar_Summer_2019_Patho_Assay_datasheet.csv")
# 
#patho <- patho |>
  # separate(Unique.ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) |>
  # unite("Sample_name", Species2:Replicate, sep = "") |>
  # relocate(Species, Trial_Code,.after = Sample_name) |>
  # slice(-c(41:48, 97:100)) |>
  # select(!c(ELoad,
  #           Leaf_ID,
  #           Trial_start_time,
  #           Date,
  #           ImageJ_link,
  #           X,
  #           Notes)) |>
  # rename(Treatment = Treatment_Ctrl_Pathogen) |>
  # mutate(Pathogen_percent_damage = (Damage_area/Leaf_area)*100) |>
  # mutate_if(is.character, as.factor)

# Saving
#saveRDS(patho, file.path(save.path, "R_objects", "pathogen_data.rds"))

# Reading
patho <- readRDS(file.path(save.path, "R_objects", "pathogen_data.rds"))


#Just the area damaged
patho2 <- patho |>
  select(c(1,3,4,8,9,12))

# 
# patho3 <- patho |>
#   select(c(1,3,4,6,7,8,9,12))
```

```{r, Objects and dataframes}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

### Phyloseq objects ####

# OTU Table: 1774 OTU with 156 Samples
# OTU <- otu_table(csamp, taxa_are_rows = TRUE)
# OTU

# Saving
# saveRDS(OTU, file.path(save.path, "R_objects", "otu_table.rds"))

# Taxonomic Table: 1473 OTU by 7 taxonomic ranks
# TAX <- tax_table(tbas)

# Saving
# saveRDS(TAX, file.path(save.path, "R_objects", "taxonomy_table.rds"))

# SAMP (sample metadata)

# SAMP <- ndata2 |>
#   column_to_rownames(var = "Sample_name")
# SAMP <- sample_data(SAMP)

# Saving
# saveRDS(SAMP, file.path(save.path, "R_objects", "samp_data.rds"))


# Merging phyloseq objects ####
# pq1 <- phyloseq(OTU, TAX, SAMP)

# Saving
# saveRDS(pq1, file.path(save.path, "R_objects", "phyloseq_main.rds"))

# Reading
pq1 <- readRDS(file.path(save.path, "R_objects", "phyloseq_main.rds"))

# Random tree ####
#random_tree <- rtree(ntaxa(pq), rooted=TRUE, tip.label=taxa_names(pq))

```

```{r, Mareli code}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# pq2 <- prune_taxa(taxa_sums(pq1) > 0, pq1)
# ntaxa(pq2) #There are 488 taxa with 0 reads.

# Saving
# saveRDS(pq2, file.path(save.path, "R_objects", "phyloseq_pq2.rds"))

# Reading
pq2 <- readRDS(file.path(save.path, "R_objects", "phyloseq_pq2.rds"))

# Subset of pq1 -- only E+ samples and OTUs.
#Important -- don't remove OTUs with 0 reads here, because we want to know which ones have no reads in E+ but DO have reads in E-.
pq2E <- subset_samples(pq2, E_load == "E+")
#ntaxa(pq2E) #1219 taxa and 78 samples

# Eliminate E- only OTUs. Keep OTUs with more than 0 reads in subset.
pq2_EminusRemoved <- prune_taxa(taxa_sums(pq2E) > 0, pq2E)
#ntaxa(pq2_EminusRemoved) #959 taxa remain. 260 OTUs removed.

#If OTU has 0 reads in E+, it will have reads in E-, so this prunes pq2E and identifies all OTUs that have 0 reads in E+, which by default, are the OTUs that DO have reads in E-.
pq2_EminuOnly <- prune_taxa(taxa_sums(pq2E) == 0, pq2E)
#pq2_EminuOnly #260 taxa and 78 samples

# Gets names of OTUs and make a data frame with column name the same as in pq2
EminusOTUs2 <- taxa_names(pq2_EminuOnly)
EminusOTUsList2 <- as.data.frame(EminusOTUs2)
#write.table(EminusOTUsList2, "clean_data/otu_data/Aim3_RemovedOTUsList.txt")

# Get vectors (names) of numbered OTUs from pq1
OTU_ID <- rownames(otu_table(pq1))

# Returns all OTU names that don't have a match in Eminus OTUs.
notShared <- setdiff(OTU_ID, EminusOTUs2)

# Subset phyloseq object to only these OTUs
pq2ET <- subset(otu_table(pq2), rownames(otu_table(pq2)) %in% notShared)

# Exported into "Sequence Analyses"
#write.csv(pq2ET, "clean_data/Aim3_OTU_phyloseq_trimmed.csv")

# New phyloseq object without E- OTUs.
newpq <- merge_phyloseq(pq2ET, tax_table(pq2), sample_data(pq2), rtree(ntaxa(pq2), rooted=TRUE, tip.label=taxa_names(pq2)))

# Relative Abundance of 959 OTUs. No removal of singletons yet.

# rawra <- transform_sample_counts(newpq, function(x)x/sum(x))
# rawRA <- subset(otu_table(rawra), rownames(otu_table(rawra)) %in% notShared)
# write.csv(rawRA, "clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_untrimmed.csv")

# Outputs of this script -- OTU table without E minus only OTUs and phyloseq object with E- OTUs removed. No removal of singletons yet.

# End of Mareli's Code #
```

```{r, Singleton removal}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# Filtering Taxa: Removal of singletons ####
 # Removal of  singletons
newpq1 <- filter_taxa(newpq, function (x) {sum(x > 0) > 1}, prune=TRUE)
# The result is 2,464,558 sequence reads from 569 taxa in 156 samples.

# Relative abundance calculation ####
# Code below is for making the .csv file. After that refer to df rawra from .csv file.

# newpqRA <- transform_sample_counts(newpq1, function(x)x/sum(x))
# rabun <- subset(otu_table(newpqRA), rownames(otu_table(newpqRA)) %in% notShared)
# write.csv(rabun, "clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_trimmed.csv")
#GPfr = filter_taxa(GPr, function(x) mean(x) > 1e-5, TRUE)


# Richness data frame ####
rich <- estimate_richness(newpq1, split = TRUE, measures = c("Observed","Shannon"))

rich <- rich |>
  rownames_to_column() |>
  rename(Sample_name = rowname)

# Phyloseq object to data frames ####

# Cleaned: no singletons
newpqDF <- phyloseq_to_df(newpq1, addtax = T, addtot = F, addmaxrank = F, sorting = "abundance")
#write.csv(newpqDF, "clean_data/otu_data/Aim3_OTUs_assigned_nonsingletons.csv")
```

```{r, Loading phyloseq products}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#These are the data frames resulting from the phyloseq data wrangling.

#The 569 OTUs and 156 samples (total abundances)
newpqDF <- read.csv("clean_data/otu_data/Aim3_OTUs_assigned_nonsingletons.csv")
newpqDF <- newpqDF |>  # Code from the Taxonomical assginment section dopes the same. This is just calling it directly from the /csv to avoid running all the code. 
  select(!c(1))

# OTUs 959 and 156 samples (total abundances)

# eOTU <- read.csv("clean_data/Aim3_OTU_phyloseq_trimmed.csv") 
# Can upload as data frame. Use for distance matrices.
# 
# eOTU2 <- eOTU |>
#   rename(OTU_ID = X) |>
#   column_to_rownames(var = "OTU_ID") |>
#   t() |>
#   as.data.frame() |>
#   rownames_to_column() |>
#   rename(Sample_name = rowname)

# Saving
#saveRDS(eOTU2, file.path(save.path, "R_objects", "eOTU2.rds"))

# Reading
eOTU2 <- readRDS(file.path(save.path, "R_objects", "eOTU2.rds"))


# Just 569 OTUs and 156 samples (total abundances)
# cOTU <- newpqDF |>
#   select(-kingdom, -phylum, -class, -order, -family, -genus, -species) |>
#   column_to_rownames(var = "OTU") |>
#   as.matrix() |>
#   t() |>
#   as.data.frame() |>
#   rownames_to_column() |>
#   rename(Sample_name = rowname)

# Saving
# saveRDS(cOTU, file.path(save.path, "R_objects", "clean_OTU.rds"))

# Reading
cOTU <- readRDS(file.path(save.path, "R_objects", "clean_OTU.rds"))

# Relative Abundance matrix (trimmed to 569 OTUs)
# rabun <- read.csv("clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_trimmed.csv")
# rabun <- rabun |>
#   rename(OTU_ID = X) |>
#   column_to_rownames(var = "OTU_ID") |>
#   na.omit() |>
#   na.fail() |>
#   as.matrix()

# Saving
# saveRDS(rabun, file.path(save.path, "R_objects", "rabun_tidy.rds"))

# Reading
rabun <- readRDS(file.path(save.path, "R_objects", "rabun_tidy.rds"))

# Relative Abundance matrix (singletons untrimmed Ascomycota 959 OTUs)
# rawra <- read.csv("clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_untrimmed.csv")
# rawra <- rawra |>
#   rename(OTU_ID = X) |>
#   column_to_rownames(var = "OTU_ID") |>
#   na.omit() |>
#   na.fail() |>
#   as.matrix()

# Saving
# saveRDS(rawra, file.path(save.path, "R_objects", "rawra_tidy.rds"))

# Reading
rawra <- readRDS(file.path(save.path, "R_objects", "rawra_tidy.rds"))

```

## Figure 1

```{r, Master data set}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#This contains all the OTU id's per sample type. Hence, 156 (# samples) observations per OTU_ID. The phyloseq object achieves the same purpose. This data set is easier to use with other functions or test not supported by phyloseq.

# Master ####
#put all data frames into list
df_list <- list(ndata2, cOTU, ants2, patho2, rich)    

#merge all data frames together
master <- df_list |> 
  reduce(left_join, by= "Sample_name", "E_load") |>
  mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)*100) |>
  select(c(1:9, 579:591)) |>
  select(!c(E_load,
            E_load.y,
            Trial_Code,
            Trial_Code.y)) |>
  relocate(Treatment, E_load.x, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x)
```

```{r, Ant Master Data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# Masterant on a per plant level
masterant <- master |>
  subset(Trial_type == "Ant") |>
  drop_na(Trial_Code) |>
  select(!c(4, 13:14)) |>
  na.omit()

# Masterant on a per leaf level (70 plants, 3 leaves per plant = 210 leaves measured)
df_list_ant2 <- list(ndata, cOTU, ants2, patho2, rich)

masterant2 <- df_list_ant2 |>
  reduce(left_join, by= "Sample_name", "E_load") |>
 mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) |>
  select(c(1:10, 584:594)) |>
  select(!c(E_load,
            Trial_Code)) |>
  relocate(Treatment, E_load.x, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) |>
  subset(Trial_type == "Ant") |>
  drop_na(Trial_Code) |>
  select(!c(5, 14:15)) |>
  na.omit() |>
  mutate(logit_herbivory = logit(Ant_percent_leafloss))
```

```{r, Pathogen Master data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false


# Pathogen Observations per plant level
masterpat <- master |>
  subset(Trial_type == "Pathogen") |>
  select(!c(11,12)) |>
  na.omit()

# Pathogen Observations per leaf level (64 plants, 3 leaves per plant = 192 leaves measured)
# masterpat2

masterpat2 <- df_list_ant2 |>
  reduce(left_join, by= "Sample_name", "E_load") |>
 mutate(Total_reads = sum(across(starts_with("OTU")))) |>
  group_by(Species) |>
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) |> 
  select(c(1:10, 584:594)) |>
  select(!c(E_load,
            Trial_Code)) |>
  relocate(Treatment, .after = Trial_type) |>
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) |>
  subset(Trial_type == "Pathogen") |>
  select(!c(12:13)) |>
  na.omit() |>
  mutate(logit_pathogenicity = logit(Pathogen_percent_damage)) 

#mutate(Pathogen_percent_damage = pmin(pmax(Pathogen_percent_damage, 0), 1)) |>  # Rescale values between 0 and 1
  #mutate(logit_damage = logit(Pathogen_percent_damage))
#masterpat2$log_damage <- log(masterpat2$Pathogen_percent_damage)
```

```{r fig1}
#| echo: false
#| eval: true
#| warning: false
#| fig.width: 7
#| fig.height: 4.5
#| fig.cap: "Relative abundance (RA) of Ascomycota OTUs of seven tree species used in the study. (a) Violin plots show individuals' RA and and its distribution by species. The horizontal line within the violins represents the mean RA per species. (b) The RA of OTU's by treatment withing each tree species. Pink filled violin plots represent low endophyte (*E-*) treatment and yellow filled represent high endophyte (*E+*) treatment. Relative abundance is the percentage of endophyte colonization within individuals of the same species. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."


#Comparison of means of LMA between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
fig1_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Relative_Abundance ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
fig1_compare_means <- compare_means(Relative_Abundance ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
fir_compare_means <- compare_means(Relative_Abundance ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#Plotting t-test comparisons  
# RA per E_load per species

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dypterix sp.", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")

RAE <- ggplot(data= master, aes(x = E_load, y = Relative_Abundance)) +
  geom_violin(aes(fill = E_load)) +
  #geom_boxplot(width=0.1, color="grey30", alpha=0.2) +
  geom_crossbar(stat="summary", fun = mean, fun.max = mean, fun.min = mean,  fatten = 2, width = 0.5) +
  geom_point(color="grey15", alpha = 0.4,size = 2, position = position_jitter(w=0.05)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  theme_classic(base_size = 12)+
  theme(panel.grid.major = element_line(colour = "grey"),
        panel.grid.minor = element_line(colour = "grey"),
        strip.background = element_rect(fill = "white"),
        axis.line.x.bottom = element_blank(), 
        strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(size = 14),
        plot.title = element_text(color="black", size = 14, face="bold"),
        axis.text.x=element_blank()) +
  labs(x="", y="Relative Abundance of Ascomycota", face = "bold")+
  theme() +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(comparisons = list(c("E-", "E+")),
                     method = "t.test",
                     label = "p.signif",
                     paired = T,
                     label.y = 25, 
                     bracket.size = 0.65) +
  facet_wrap(~Species, labeller = as_labeller(newname))
  
#RAE

RAE_bar <- ggplot(data= master, aes(x = Species, y = Relative_Abundance)) +
  geom_bar(stat="identity", aes(fill = E_load), position = "stack") +
  scale_fill_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12)+
  theme(strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA)) +
  labs(x="", y="Relative Abundance of Ascomycota", face = "bold")+
  theme(legend.position="right",
        legend.title = element_blank(),
        legend.text = element_text(size = 12),
        plot.title = element_text(color="black", size = 12, face="bold"),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30))

#RAE_bar

# Arranged as a grid
fig1<- ggarrange(RAE, RAE_bar, nrow = 1, ncol=2, widths = c(1.5, 1), common.legend = TRUE, legend="bottom", label.x = 0, vjust = 1, labels=c("(a)","(b)"))

fig1


# Saving
#ggsave(filename="./figures/Aim3_Fig1.png", plot = fig1, dpi=600, units=c("mm"), width = 210, height = 180, bg ="white")
#
```

## Figure 2

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of herbivory (%) damage caused by *Atta colombica* in treatment groups (*E-* and *E+*) and tree species. a) Comparison of herbivory (%) means between treatment groups across individuals of all species. Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*). b) Comparison of pathogen (%) means between treatment groups across individuals of all species.  Maroon filled violins represent control leaves and blue filled violins represent pathogen treated leaves.  Statistical significance was calculated using a two-sided Student's t-Test. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]"


#Comparison of means of Herbivory(%) between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
fig2_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Ant_percent_leafloss ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE)

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
fig2a_compare_means <- compare_means(Ant_percent_leafloss ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.

#Since `compare_means` does not provide a test statistic, I will use `t.test` to report the test statistic.
fig2a_t_test <-t.test(Ant_percent_leafloss ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Fig. 2a
herb_violin <- ggplot(data = master, aes(x = E_load, y = Ant_percent_leafloss, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary",
               fun = mean,
               fun.max = mean,
               fun.min = mean,
               alpha = 0.3,
               size = 0.3,
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Herbivory (%)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)

#herb_violin

# Fig. 2b

#Comparison of means of Pathogen damage (%) between E+ and E- samples per tree species. To obtain the comparison between control and pathogen treatments within E= and E- groups, grou_by("E_load") and change the formula to Pathogen_percent_damage ~ Treatment.
#rstatix package used for pairwise t-test
fig2b_pairwise_t_test <- master |>
  group_by(E_load) |>
  pairwise_t_test(Pathogen_percent_damage ~ Treatment,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
fig2b_compare_means <- compare_means(Pathogen_percent_damage ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
fig2b_compare_means <- compare_means(Pathogen_percent_damage ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
patho_violin <- ggplot(data = master, aes(x = E_load, y = Pathogen_percent_damage, fill = Treatment)) +
  geom_violin() +
  geom_point(aes(color = E_load),position = position_jitterdodge(dodge.width = 0, jitter.width = 0.2),
             alpha = 0.5, size = 2) +
  geom_crossbar(stat="summary",
               fun = mean,
               fun.max = mean,
               fun.min = mean,
               alpha = 0.3,
               size = 0.3,
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Pathogen treatment ", values= met.brewer("Egypt", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  #scale_shape_manual(name = "Treatment", labels = c("E-", "E+"), values = c(16, 17)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        #axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Pathogen damage (%)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     label.y = 80) +
  stat_compare_means(label = "p.signif",
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8) +
   guides(color = "none") 
#patho_violin



# Figure 2a-2b
figure2 <- ggarrange(herb_violin, patho_violin, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1,
                       widths = c(1.2, 1),
                       common.legend = FALSE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))

figure2
#ggsave(filename="./figures/Aim3_Fig2_21JAN2024.png", plot = figure2, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure 3

```{r, Distance Matrix}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
otu_e.dist <- vegdist(t(rabun), method="bray", binary=FALSE)
#Using "rabun". No singletons
#Bray-Curtis dissimilarity matrix
```

```{r, m3dbRDA}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 6 
#| fig.height: 6
#| fig.cap: "FEF community composition was associated with leaf functional traits from the leaf economic spectrum (genomic data set). variation in FEF community composition within and between host species (*n* = 7) and treatment groups (*E*-, *E*+) from distanmce-based redundancy analyses (dbRDA). Solid arrows represent statistically sisgnificant associations (*p* < 0.05). Each point represent a FEF community samples from one host tree species per treatment group; colors represent host tree species. Circles and filled triangles represent low (*E*-) and high (*E*+) FEF treatment groups, respectively."

#dbRDa with `dbrda` function. it can be calculated with `capscale` function too. VERY similar.
#Best model selected with `ordistep` function 
#Terms: otu_e.dist ~ Thickness + Toughness + Anthocyanins + LMA
m3dbRDA <- dbrda(otu_e.dist ~ Anthocyanins + Toughness + Thickness + LMA, data= ndata2, dist="bray", na.action = na.omit)
m3dbrda_summary <- summary(m3dbRDA)

#Assessing marginal significance of constraining variables 
#anova(m3dbRDA, by = "margin")
#anova(m3dbRDA, by = "axis")
#anova(m3dbRDA, by="axis", perm.max=500) 

#Correlation of constrained and unconstrained axes
# cor(m3dbrda_summary$constraints) |>
#  round(2)

#Plotting dbRDA  with color by continous leaf lifespan
#plot using ggplot2

B <- summary(m3dbRDA)

A.1 <- vegan::scores(m3dbRDA)
A.2 <- A.1$sites
A.3 <- cbind(A.2, ndata2)

#scores for arrows
A.4 <- data.frame(vegan::scores(m3dbRDA, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(xend = (dbRDA1*2), yend = (dbRDA2*2), x = 0, y = 0, shape = NULL, color = NULL, fill = NULL)
label_map <- aes(x = 2*dbRDA1, y = 2*dbRDA2, label = row.names(A.4), shape = NULL, color = NULL, fill = NULL)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
A.4 <- A.4[sort(rownames(A.4)),]

A4.sub1 <- A.4[3,] #Thickness
A4.sub2 <- A.4[1,] #Anthocyanins
A4.sub3 <- A.4[2,] #LMA
A4.sub4 <- A.4[4,] #Toughness

#A4.sub4

# Make plot
p_m3 <- ggplot(data = A.3, aes(x = dbRDA1, y = dbRDA2))
p_m3dbrda <- p_m3 +
  geom_point(data = A.3, aes(color = Species, shape = E_load), size = rel(3), alpha = 0.8, stroke = 1) +
  geom_segment(arrow_map, size = rel(.8), data = A.4, color = "black", arrow = arrowhead) +
  geom_vline(xintercept = 0, color = "grey30", linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0, color = "grey30", linetype = "dashed") + # plot horizontal line
  geom_text(label_map, size = rel(4), data = A4.sub1, fontface = "bold", show.legend = FALSE, hjust = 1, label = c("LT"), nudge_y = -0.15) +
  geom_text(label_map, size = rel(4), data = A4.sub2, fontface = "bold", show.legend = FALSE, hjust = 0.2, label = c("ACI"), nudge_y = -0.2) +
  geom_text(label_map, size = rel(4), data = A4.sub3, fontface = "bold", show.legend = FALSE, hjust = 1.2, label = c("LMA"), nudge_y = -0.05) +
  geom_text(label_map, size = rel(4), data = A4.sub4, fontface = "bold", show.legend = FALSE, hjust = 1.2, label = c("LPS"), nudge_y = 0.05) +
  xlab(label = paste("dbRDA1 (", round(B$concont$importance[2,1]*100, digits = 1), "%)", sep="")) +
  ylab(label = paste("dbRDA2 (", round(B$concont$importance[2,2]*100, digits = 1), "%)", sep="")) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  scale_shape_manual(name = "Treatment", labels = c("E-", "E+"), values = c(16, 17)) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1.3, position = "identity", type = "t", linetype = 1,
               level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  #labs(caption = "ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness")+
  theme_classic(base_size = 12) +
  theme(plot.title = element_text(color="black", size = 12, face="bold"),
        legend.title = element_text(face = "bold"),
        legend.text = element_text(color="black", size = 12, face="italic"))
# Rearranging the order of layers so arrows are above the points.
p_m3dbrda$layers <- c(p_m3dbrda$layers, p_m3dbrda$layers[[2]], p_m3dbrda$layers[[5]], p_m3dbrda$layers[[6]], p_m3dbrda$layers[[7]], p_m3dbrda$layers[[8]])

figure3 <- p_m3dbrda
figure3
#ggsave(filename="./figures/Aim3_Fig3_12JAN2024.png", plot=figure3, dpi=600, units=c("mm"), width=200, height=200)
```

## Figure 4

```{r, Full PCA}
#| echo: false
#| eval: true
#| warning: false
#| tidy: true

# PCA using covariates to explain species richness/abundance ####
data.pca <- ndata[c(7,8,9,10)]
data.pca <- data.pca |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.

###Run this to create pca with prcomp function
pca<-prcomp(data.pca, scale=TRUE)
pca$rotation=-pca$rotation
pca$x=-pca$x

#Checking the PCA
#plot(pca,type = "lines")
#biplot(pca) # Base type PCA

# PCA using autoplot() and prcomp()and modifying with ggplot syntax ####
auto <- autoplot((pca), data = data.frame(ndata), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 1, 
         loadings.label.hjust = 1) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  scale_fill_discrete(labels = c("A. membranacea", 
                                 "C. cainito", 
                                 "C. alliodora", 
                                 "Dypterix sp.", 
                                 "H. concinna", 
                                 "L. panamensis", 
                                 "T. cacao")) +
  scale_shape_manual(name = "Treatment", labels = c("E-", "E+"), values = c(16, 17)) +
  theme_classic(base_size = 12) +
  #labs(title = "(a)") + 
  theme(plot.title = element_text(color="black", size = 12, face="bold"),
        legend.title = element_text(face = "bold"),
        legend.text = element_text(color="black", size = 12, face="italic"))

#caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 467).") #This goes in the labs() arguments

auto$layers <- c(auto$layers, auto$layers[[2]], auto$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto <- auto +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto 

#ggsave(filename="./figures/Aim3_PCA_SEPT252023.png", plot = auto, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Ant PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false

# PCA using covariates to explain species richness/abundance ####
ant_pcadata <- masterant2[c(7,8,9,10)]
ant_pcadata <- ant_pcadata |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
ant.pca <-prcomp(ant_pcadata, scale=TRUE)
ant.pca$rotation=-ant.pca$rotation
ant.pca$x=-ant.pca$x

# Plot
auto_ant <- autoplot((ant.pca), data = data.frame(masterant2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 12) +
  #labs(title = "(b)") +
  theme(plot.title = element_text(color="black", size = 12, face="bold")) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  
  


auto_ant$layers <- c(auto_ant$layers, auto_ant$layers[[2]], auto_ant$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_ant <- auto_ant +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_ant

#ggsave(filename="./figures/Aim3_Ant_PCA_07102023.png", plot = auto_ant, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false
#
# PCA using covariates to explain species richness/abundance ####
pat_pcadata <- masterpat2[c(8,9,10,11)]
pat_pcadata <- pat_pcadata |>
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
pat.pca <-prcomp(pat_pcadata, scale=TRUE)
pat.pca$rotation=-pat.pca$rotation
pat.pca$x=-pat.pca$x

# Plot
auto_pat <- autoplot((pat.pca), data = data.frame(masterpat2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 12) +
  #labs(title = "(c)") +
  theme(plot.title = element_text(color="black", size = 12, face="bold")) + 
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  

auto_pat$layers <- c(auto_pat$layers, auto_pat$layers[[2]], auto_pat$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_pat <- auto_pat +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_pat

#ggsave(filename="./figures/Aim3_Pathogen_PCA_08162023.png", plot = auto_pat, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Fig4 Grid PCA}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 6 
#| fig.height: 6
#| fig.cap: "Leaf Functional traits are conserved within tree species regardless of endophyte load treatment. (a) Principal Component Analysis (PCA) of leaf functional traits from all tree species separated by *E-* and *E+* treatment. (b) PCA of leaf functional traits of plants solely used in ant herbivory assays. (c) PCA leaf functional traits of plants used solely in pathogen damage assays. Colors represent tree species. Circle and triangles represent low (*E-*) and high (*E+*) FEF treatment groups, respectively. Colored ellipses correspond to tree species and represent 95% confidence intervals."
figure4 <- ggarrange(auto, 
                      ggarrange(auto_ant, auto_pat, 
                                nrow = 1, ncol=2, 
                                label.x = -0.015, vjust = 1, 
                                labels = c("(b)", "(c)")), 
                      nrow = 2, 
                      common.legend = TRUE, 
                      legend="bottom", 
                      label.x = -0.01, vjust = 1, 
                      labels = "(a)")

figure4
# Adding caption
# ant_caption <- expression("*All individual leaves per individual per tree species included ("~ italic("n") ~ "= 210).")
# ant_pca_with_caption <- annotate_figure(antpca_arranged, bottom = text_grob(ant_caption), fig.lab.pos = "bottom.right", fig.lab.size = 6)
# 
# ant_pca_with_caption

#ggsave(filename = "./figures/Aim3_Fig4_02JAN2024.png", plot = figure4, dpi=600, units=c("mm"), width = 275, height = 300, bg = "white")
#Previously called Aim3_GridPCA_SEPT182023.png

```

## Figure 5

```{r, Ant LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# PCA loadings (rotations) data frame
ant.pci<-data.frame(ant.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

ant_pcalm <- masterant2[c(1,2,5,12, 17)]

ant_pcalm <- cbind(ant_pcalm, ant.pci) #Both data sets have 467 observations
```

```{r, Ant LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}

#Summary of linear model
lmpc1 <- lm(Ant_percent_leafloss ~ PC1, data = ant_pcalm)
#summary(lmpc1)

# PC1
# Formatted p-value
ant_p1 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC1)$p.value

ant_p1 = format.p(ant_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
ant_pc1 <- ggplot(ant_pcalm, aes(PC1, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  scale_shape_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = c(16, 17)) +
  theme_classic(base_size = 12) +
  labs(y = "Herbivory (%)", caption = "") +
  theme(legend.title = element_text(face = "bold"),
        legend.text = element_text(color="black", size = 12, face="italic"))
  #guides(color = "none")  +      #To turn off color legend
  #guides(fill = "none") + #To turn off fill legend
  #guides(shape = "none")

#ant_pc1

#ggsave(filename="./figures/Aim3_AntPC1_JUL102023.png", plot = ant_pc1, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Summary of linear model
lmpc2 <- lm(Ant_percent_leafloss ~ PC2, data = ant_pcalm)
#summary(lmpc2)


# Formatted p-values
ant_p2 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC2)$p.value

ant_p2 =format.p(ant_p2) # This is just to make the p-value nicer. 

## Plot PC2
ant_pc2 <- ggplot(ant_pcalm, aes(PC2, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                            "C. cainito", 
                            "C. alliodora", 
                            "Dypterix sp.", 
                            "H. concinna", 
                            "L. panamensis", 
                            "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 12) +
  labs(y = "Herbivory (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
  
  
#ant_pc2

#ggsave(filename="./figures/Aim3_AntPC2_JUL102023.png", plot = ant_pc2, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# PCA loadings (rotations) data frame
pat.pci<-data.frame(pat.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

pat_pcalm <- masterpat2[c(1,2,5,6,13)]

pat_pcalm <- cbind(pat_pcalm, pat.pci) #Both data sets have 467 observations
```

```{r, Pathogen LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}



# PC1
# Summary of linear model
plmpc1 <- lm(Pathogen_percent_damage ~ PC1, data = pat_pcalm)
#summary(plmpc1)

# Formatted p-value
pathogen_p1 <- cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC1)$p.value

pathogen_p1 = format.p(pathogen_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
pat_pc1 <- ggplot(pat_pcalm, aes(PC1, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito",
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 12) +
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")

#pat_pc1

#ggsave(filename="./figures/Aim3_PatPC1_AUG282023.png", plot = pat_pc1, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Formatted p-values
pathogen_p2 <- cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC2)$p.value

pathogen_p2 =format.p(pathogen_p2) # This is just to make the p-value nicer. 

## Plot PC2
plmpc2 <- lm(Pathogen_percent_damage ~ PC2, data = pat_pcalm)

pat_pc2 <- ggplot(pat_pcalm, aes(PC2, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora",
                              "Dypterix sp.",
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 12) +
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
  
  
#pat_pc2

#ggsave(filename="./figures/Aim3_PatPC2_AUG282023.png", plot = pat_pc2, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Figure 5}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 9
#| fig.height: 9
#| fig.cap: "Simple linear regressions of herbivory and pathogen damage on PC1 and PC2 axes from PCAs of leaf traits for ant herbivory and pathogen damage assays. Linear regression of a) percent herbivory damage and PC1 axis (R^2^-adjusted= -0.0024, *p* = 0.447); b) percent herbivory damage and PC2 axis (R^2^-adjusted = 0.079, *p* = <0.001); c) percent pathogen damage and PC1 axis (R^2^-adjusted = 0.064, *p* = <0.001); and d) percent pathogen damage and PC2 axis (R^2^-adjusted  = 0.0016, *p* = 0.207). Colors represent individual species. Circle and triangles represent *E-* and *E+* treatments, respectively."
figure5<- ggarrange(ant_pc1, ant_pc2, pat_pc1, pat_pc2,
                    nrow = 2, 
                    ncol=2, 
                    label.x = -0.015, vjust = 1, 
                    labels = c("(a)", "(b)", "(c)", "(d)"),
                    common.legend = TRUE, 
                    legend="bottom")

figure5

#ggsave(filename = "./figures/Aim3_Fig5_04JAN2024.png", plot = figure5, dpi=600, units=c("mm"), width = 300, height = 225, bg = "white")
#Previously named Aim3_AntPCS_SEPT252023.png
```

# Tables

## Table 1

```{r, table1}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Replication statement of the statistical analysis in this study."

#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 1.5)

#Table 1
rep_statement <- hux(
  "Scale of inference" = c("Leaf functional traits",
                           "Genomic data",
                           "Herbivore assays",
                           "Pathogen assays"),
  
  "Scale at which the factor of interest is applied" = c("Species",
                                                        "Species",
                                                        "Species/individual",
                                                        "Species/individual"),
  "Number of replicates at the appropriate scale" = c("Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5. Replicate leaves per plant = 3",
                                                      "Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5",
                                                      "Treatment = 2 (E-, E+), Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1",
                                                      "Treatment = 2 (E-, E+), sub-treatment = 2 (control and pathogen) for pathogen trials, Tropical tree species = 7, Replicates per species = 5, Replicates per plant = 1"))


rep_statement <- rep_statement |>
  set_all_padding(4) |> 
      set_outer_padding(0) |> 
      set_bold(row = 1, col = everywhere) |> 
      set_bottom_border(row = 1, col = everywhere) |> 
      set_width(1.1) |>
  theme_article() |>
  huxtable::as_flextable(column_to_header=TRUE) |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick) |>
  flextable::align(j = 1:3, align = "center", part = "all") |>
 # flextable::width(j = 1, width = 1.5, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

rep_statement


#Saving table as a Word document
sect_properties <- prop_section(
  page_size = page_size(
    orient = "portrait",
    width = 8.2, height = 11.5
  ),
  type = "continuous",
  page_margins = page_mar()
)
#save_as_docx(rep_statement, path  =  "./tables/Aim3_table1_4JAN2024.docx", section_properties = sect_properties)
```

## Table 2

```{r, table2}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Summary statistics for the leaf functional traits"

# Using `gtsummary` and 'flextable' packages
summa_t2 <- tbl_summary(data |>
  group_by(Species, E_load) |>
  select(c(10:13)) |>
  rename(Treatment = E_load) |>
  mutate(Species = case_match(Species, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
  rename('Anthocyanins (ACI)' = Anthocyanins, 
           'Leaf Thickness (LT) (\U00B5m)'=Thickness, 
           'Leaf Punch Strength (LPS) (N mm/1)'= Toughness, 
           'Leaf Mass per Area (LMA) (mg/mm)' = LMA) |>
  mutate(Treatment= case_match(Treatment, "E-" ~ "E- (n = 570)", 
                        "E+" ~ "E+ (n = 544)")) |> # The sum of E- and E+ was added after iterations of tbl_summary().
    na.omit(),
  by = Species,
  missing = "no") |>
  # statistic = list( #Not working with statistic argument 01/28/2024
  #   all_continuous() ~ "{mean} \u00B1 {sd}", 
  #   all_categorical() ~ "{n}")) |>
  modify_header(label = "",
                stat_1 = 'A. membranacea, n = 83',
                stat_2 = 'C. alliodora, n = 100',
                stat_3 = 'C. cainito, n = 150',
                stat_4 = 'Dypterix sp., n = 288',
                stat_5 = 'H. concinna, n = 132',
                stat_6 = 'L. panamensis, n = 185',
                stat_7 = 'T. cacao, n = 176',
                text_interpret = "md")
#summa_t2

  #modify_footnote(N = "N = count number", abbreviation = TRUE)
  #modify_spanning_header(all_stat_cols(stat_0= T) ~ "**Species**") 
  #modify_caption("**Table 1: Summary statistics for the leaf functional traits**")

#Turning it into a flextable object for further manipulation.
summa_t2 <- summa_t2 |>
  as_flex_table() |>
  # set_caption(
  #   as_paragraph(
  #     as_b(
  #       as_chunk("Table 1: Summary statistics for the leaf functional traits",
  #                props = fp_text_default(font.family = "Tex Gyre Termes", font.size = 12)
  #              )
  #     )
  #   ),
  # align_with_table = F) |>
  flextable::align(j = 1, align = "right", part = "all") |>
  flextable::align(j = 2:8, align = "center", part = "all") |>
  flextable::italic(j = c(2:8), italic = TRUE, part = "header") |>
  flextable::bold(i = 1, bold = TRUE, part = "header") |>
  flextable::italic(i = 1, italic = TRUE, part = "body") |>
  #padding(j = 1, padding.right= 40) |>
  flextable::width(j = 1, width = 1.25, unit = "in") |>
  flextable::width(j = 2:8, width = 0.75, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname)

# Adding some thicker borders to the table
thick <- fp_border(color = "black", style = "solid", width = 1.5)

summa_t2 <- summa_t2 |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick)

#summa_t2

```

## Table 3

```{r GLMMs}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#Optimizers
ctrl <- lmeControl(opt='optim')
ctrl2 <- lmeControl(opt = "nlminb")

#M3REM
#M3REM Best fit model after model selection. See Aim3_leaftraits_Statistical_Analyses.qmd for details.
M3REM <- lme(logit_herbivory ~ Thickness  + LMA + E_load, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species, method = "REML", control = ctrl, data = masterant2, na.action = na.exclude)

#summary(M3REM)
#AIC(M3REM) #584.711 #1902.209 as of 5/23/23 # 741.7825 as of 30/OCT/2023

#P3REM
#Best fit model after model selection. See Aim3_leaftraits_Statistical_Analyses.qmd for details.
P3REM <- lme(logit_pathogenicity ~  LMA + Thickness, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species/E_load/Treatment, method = "REML", control = ctrl, data = masterpat2, na.action = na.exclude)
#summary(P3REM)
#AIC(P3REM) #1011.239 as of 30/OCT/2023
```

```{r, Table3, tidy = TRUE}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogenicity"

# Checking AIC values
#broom.mixed::glance(M3REM, conf.int = TRUE, effects = "fixed")
#broom.mixed::glance(P3REM, conf.int = TRUE, effects = "fixed")

# #Joining the two models
# tidy_m3rem <- broom::tidy(M3REM,
#                           scales = "sdcor",
#                           conf.int = TRUE,
#                           conf.level = 0.95,
#                           effects = "fixed", 
#                           data = masterant2)
# 
# tidy_p3rem <- broom::tidy(P3REM,
#                           scales = "sdcor",
#                           conf.int = TRUE,
#                           conf.level = 0.95,
#                           effects = "fixed", 
#                           data = masterpat2)
# # Significance stars
# makeStars <- function(x){
#   stars <- c("****", "***", "**", "*", "ns")
#   vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
#   i <- findInterval(x, vec)
#   stars[i]
# }
# 
# models <- left_join(tidy_m3rem, tidy_p3rem, by = "term") |>
#   select(!c(effect.y, effect.x)) |>
#   mutate(stars.x = makeStars(p.value.x),
#          stars.y = makeStars(p.value.y)
#   ) |>
#   relocate(conf.low.x, conf.high.x, .after = estimate.x) |>
#   relocate(conf.low.y, conf.high.y, .after = estimate.y) |>
#   relocate(stars.x, .after = p.value.x) |>
#   relocate(stars.y, .after = p.value.y)
# 
# # Table with `gt` package
# table3 <- gt(models, 
#              rowname_col = "term") |>
#   cols_width(everything() ~ px(70),
#              starts_with("term") ~ px(200)
#   ) |>
#   tab_options(row_group.as_column = TRUE) |>
#   tab_stubhead(label = "Fixed effects") |>
#   cols_merge(
#     columns = c(conf.low.x, conf.high.x),
#     pattern = "{1} - {2}"
#   ) |>
#   cols_merge(
#     columns = c(conf.low.y, conf.high.y),
#     pattern = "{1} - {2}"
#   ) |>
#   cols_label(
#     estimate.x = "Estimate",
#     estimate.y = "Estimate",
#     std.error.x = "Standard error",
#     std.error.y = "Standard error",
#     df.x = "df",
#     df.y = "df",
#     statistic.x = "t-value",
#     statistic.y = "t-value",
#     p.value.x = "p-value",
#     p.value.y = "p-value",
#     stars.x = "",
#     stars.y = "",
#     conf.low.x = "CI",
#     conf.low.y = "CI",
#   ) |>
#   fmt_number(columns = everything(),
#              rows = everything(),
#              decimals = 3,
#              n_sigfig = NULL
#    ) |>
#   tab_spanner(
#     label = md("Herbivory model"),
#     columns = ends_with(".x")
#     ) |>
#   tab_spanner(
#     label = md("Pathogen damage model"),
#     columns = ends_with(".y")
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(weight = "bold"),
#       cell_text(style = "italic")),
#     locations = cells_column_labels()
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(style = "italic")),
#     locations = cells_stubhead()
#     ) |>
#   tab_style(
#     style = list(
#       cell_text(weight = "bold")),
#     locations = cells_column_spanners()
#     ) |>
#    tab_style(
#     style = cell_text(size = pct(90)),
#     locations = list(cells_body(),
#                      cells_stub(),
#                      cells_column_labels())  
#     ) |>
#   tab_style(
#     style = cell_borders(
#       sides = "all",
#       color = NULL
#     ),
#     locations = list(cells_body(),
#                      cells_stub())
#    ) |>
#   tab_style(
#     style = cell_text(weight = "bold"),
#     locations = cells_body(
#       columns = c(p.value.x, p.value.y),
#       rows = p.value.x < 0.05 | p.value.y < 0.05)
#   ) |>
# 
#   tab_header(
#     title = md("Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogen damage")
#    ) |>
#   tab_footnote(
#     footnote = md("Akaike Information Criterion (AIC) = 741.8"),
#     locations = cells_column_spanners(spanner = "Herbivory model")
#   ) |>
#   tab_footnote(
#     footnote = md("Akaike Information Criterion (AIC) = 1011.2"),
#     locations = cells_column_spanners(spanner = "Pathogen damage model")
#   ) |>
#   tab_footnote(
#     footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
#     locations = cells_column_labels(columns = starts_with("p"))
#   ) |>
#   opt_align_table_header(align = "left") |>
#   opt_table_font(
#     font = list(
#       google_font(name = "Tex Gyre Termes"),
#        "serif"
#     )
#   ) |>
#   opt_footnote_marks(marks = "letters")

#Final editing of the table will be completed in text editor. 

#gtsave(table3, file = "Aim3_table3_30JAN2024.docx", path = "./tables")
# I didn't like the way the table looked in the end. This format would look better as HTML

#Using `hugetable` package to create the same table
# Table with `huxtable` package
table3<- huxreg("Herbivory model" = M3REM, 
                "Pathogen damage model" = P3REM,
               coefs = c("Intercept" = "(Intercept)",
                         "Thickness" = "Thickness",
                         "LMA" = "LMA",
                         "Endophyte load (E+)" = "E_loadE+",
                         "sd_Intercept" = "sd_(Intercept)",
                         "Observations" = "sd_Observation",
                         "A. membranacea" = "APEIME",
                         "C. cainito" = "CHRYCA",
                         "C. alliodora" = "CORDAL",
                         "Dypterix sp." = "DYPTE",
                         "H. concinna"  = "HEISCO",
                         "L. panamensis" = "LACPA",
                         "T. cacao" = "THEOCA"),
               error_pos = "right",
               error_format = "({conf.low} - {conf.high} ) [{statistic}]",
               number_format = "%.3f",
               align = ".",
               ci_level = 0.95,
               stars = c(`***` = 0.001, 
                         `**` = 0.01, 
                         `*` = 0.05),
               bold_signif = 0.05,
               borders = 0.4,
               outer_borders = 0.8,
               note = "Significance levels are represented by asterisks [p < 0.05 (*), p < 0.01 (**), p < 0.001 (***), and p < 0.0001 (****)]. T statistics in brackets.",
  statistics = c("N" = "nobs", 
                 "logLik", 
                 "AIC")) |>
  insert_row("Predictors",
             "Estimate",
             "CI [t-statistic]",
             "Estimate", "CI [t-statistic]",
             after = 1) |>
  insert_row("Random effects", "", "","", "", after = 6) |>
    set_all_padding(4) |> 
    set_outer_padding(0) |> 
    set_bold(row = 1, col = everywhere) |> 
    #set_bottom_border(row = 1, col = everywhere) |> 
    set_width(1.1) |>
    theme_article() |> #flextable::theme_apa() is good too. 
  huxtable::as_flextable(column_to_header = TRUE) |>
  hline_top(part = "body", border = thick) |>
  hline(19, part = "body",
        border = fp_border(color = "black", 
                           style = "solid", 
                           width = 1)) |>
  hline(16, part = "all", border = thick) |>
  hline(i = 1, j = c(2:3, 4:5), part = "body", 
        border = fp_border(color = "black",
                           style = "solid", 
                           width = 1)) |>
  flextable::align(j = 2:5, align = "center", part = "body") |>
  flextable::style(i = c(1:20), j = 1, pr_t = fp_text(bold = FALSE)) |>
  flextable::italic(i = c(7,10:16), j = 1, italic = TRUE, part = "body") |>
  flextable::bold(i = c(2,7), j = 1, bold = TRUE, part = "body") |>
  flextable::set_caption("Generalized linear mixed models (GLMMs) for predicting leaf herbivory and pathogen damage") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

table3
#Final editing of the table will be completed in text editor.
#save_as_docx(table3, path = "./tables/Aim3_table3_30JAN2024.docx", section_properties = sect_properties)
```

# Supplementary Materials

## Table S1

```{r, supptable_S1}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of anthocyanin content (ACI) (\u03BCm) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
aci_comparisons <- compare_means(Anthocyanins ~ Species, data = master, method = "t.test")

#Table of results
supptable_S1<-  gt(aci_comparisons |>
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") |> 
  tab_header(
    title = md("**Student's t-Tests of means anthocyanins (ACI)**"),
    subtitle = md("Pairwise comparisons of ACI between species.")) |>
  tab_stubhead(label = "") |>
  cols_label(
    group2 = md("Comparison Species"),
  ) |>
  # tab_stub_indent(
  #   rows = everything(),
  #   indent = 1
  # ) |>
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) |>
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) |>
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) |>
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S1
#gtsave(supptable_S1, file = "Aim3_supptable_S1_05JAN2024.docx", path = "./tables")
```

## Table S2

```{r, supptable_S2}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf thickness (LT) (\u03BCm) means between species."

#Table of results: Thickness T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
thickness_comparisons <- compare_means(Thickness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S2<-  gt(thickness_comparisons |>
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") |> 
  tab_header(
    title = md("**Student's t-Tests of means leaf thickness (LT) (\u03BCm)**"),
    subtitle = md("Pairwise comparisons of LT between species.")) |>
  tab_stubhead(label = "") |>
  cols_label(
    group2 = md("Comparison Species"),
  ) |>
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) |>
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) |>
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) |>
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S2
#gtsave(supptable_S2, file = "Aim3_supptable_S2_05JAN2024.docx", path = "./tables")
```

## Table S3

```{r, supptable_S3}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf punch strength (LPS) (N mm<sup>-1</sup>) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lps_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S3<-  gt(lps_comparisons |>
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") |> 
  tab_header(
    title = md("**Student's t-Tests of means leaf punch strength (LPS) (N mm<sup>-1</sup>)**"),
    subtitle = md("Pairwise comparisons of LPS between species.")) |>
  tab_stubhead(label = "") |>
  cols_label(
    group2 = md("Comparison Species"),
  ) |>
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) |>
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) |>
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) |>
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S3
#gtsave(supptable_S3, file = "Aim3_supptable_S3_05JAN2024.docx", path = "./tables")
```

## Table S4

```{r, supptable_S4}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf mass per are LMA) (mg mm^-2) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lma_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S4 <-  gt(lma_comparisons |>
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix sp.",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) |>
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") |> 
  tab_header(
    title = md("**Student's t-Tests of means leaf mass per area (LMA) (mg mm<sup>-2</sup>)**"),
    subtitle = md("Pairwise comparisons of LMA between species.")) |>
  tab_stubhead(label = "") |>
  cols_label(
    group2 = md("Comparison Species"),
  ) |>
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) |>
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) |>
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) |>
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks: *p* = 0.05 (\\*), *p* = 0.01 (\\**), p = 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) |>
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S4
#gtsave(supptable_S4, file = "Aim3_supptable_S4_05JAN2024.docx", path = "./tables")

```

## Table S5

```{r, Indicator_species}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#Subset data frame for indicator species analysis
#Community Data
cotu <- left_join(cOTU, ndata2, by = "Sample_name") |>
  select(!c(Trial_type,
            Trial_Code,
            Anthocyanins,
            Thickness,
            Toughness,
            LMA)) |>
  relocate(Species, E_load, .after = Sample_name)
```

```{r, vector_of_groups}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#Making vector of groups for `multipatt` analysis
species_corr_matrix <- cotu[, 4:ncol(cotu)]

species <- cotu$Species
eload <- cotu$E_load

multipatt_analysis <- multipatt(species_corr_matrix, species, func = "r.g", control = how(nperm=999)) #By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"
#multipatt_analysis

#summary(multipatt_analysis, indvalcomp = TRUE)

#round(head(multipatt_analysis$str), 7)
```

```{r, supptable_S5}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomy of OTUs significantly correlated with tree host species"
#Correcting for type 1 error and multiple comparisons
#code from this post
#https://stats.stackexchange.com/questions/370724/indiscpecies-multipatt-and-overcoming-multi-comparrisons/401277#401277

#Extract table of stats
multipatt_analysis_sign <- as.data.table(multipatt_analysis$sign, keep.rownames=TRUE)
# 
# #Add adjusted p-value
multipatt_analysis_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# #indval.table <- indval.sign |>
#   #mutate(p.value.bh = p.adjust(p.value, method = "BH"))
 
# #Now we can select only the indicators with adjusted significant p-values

multipatt_analysis_sign <- multipatt_analysis_sign[p.adj <= 0.05,]
# 
# #Renaming the first column
colnames(multipatt_analysis_sign)[1]  <- "OTU" 

# #Now we can join the two tables

#Table with taxonomic information
multipatt_taxonomy <- left_join(newpqDF, multipatt_analysis_sign, by= c("OTU"))
 
multipatt_taxonomy <- multipatt_taxonomy |>
   filter(p.adj <= 0.05) |>
   select(!c(9:164)) |>
  as.tibble()

# write.csv(multipatt_taxonomy, "./post_stat_analyses_data/Significant_OTUs.csv")
# multipatt_taxonomy <- read.csv("./post_stat_analyses_data/Significant_OTUs.csv")

#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S5 <- gt(multipatt_taxonomy |>
  mutate(across(s.APEIME:s.THEOCA, na_if, 0), Host =
           case_when(s.APEIME  == 1 ~ "A. membranacea",
                     s.CHRYCA == 1 ~ "C. cainito",
                     s.CORDAL == 1 ~ "C. alliodora",
                     s.DYPTE == 1 ~ "Dypterix sp.",
                     s.HEISCO ==1 ~ "H. concinna",
                     s.LACPA == 1 ~ "L. panamensis",
                     s.THEOCA == 1 ~ "T. cacao"),
         p.value = makeStars(p.value)) |>
  select(!c(s.APEIME:s.THEOCA)) |>
  relocate(OTU, Host, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Host")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Host species") |>
  tab_stub_indent(
   rows = tidyr::starts_with("Fungi"),
   indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
  fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
  tab_style(
   style = list(
      cell_text(weight = "bold",
                style = "italic")
      ),
    locations = cells_row_groups()
   )|>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
  tab_header(
    title = md("Taxonomy of OTUs significantly correlated OTUs with tree host species")) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S5 

#gtsave(supptable_S5, file = "Aim3_supptable_S5_12JAN2024.docx", path = "./tables")
```

## Table S6

```{r, Recoding_upper_lower}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false

upper_lower_damage <- master |>
  mutate(
    herbivory_level = case_when(Ant_percent_leafloss  >= 70 ~ "high",
                                Ant_percent_leafloss %between% list(31,69) ~ "medium",
                                 Ant_percent_leafloss <= 30 ~ "low"),
    pathogen_level = case_when(Pathogen_percent_damage >= 30 ~ "high",
                               Pathogen_percent_damage <= 29 ~ "low")) |>
  filter(!(is.na(herbivory_level) & is.na(pathogen_level))) |> #Dropping NAs in both columns
  select(c(Sample_name, Species, E_load, Treatment, herbivory_level, pathogen_level)) #Droping Ant_percent_leafloss and Pathogen_percent_damage
#196 observations and 6 variables
```

```{r, Filtering_damage}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#Some filtering and joining
leaf_damage_filter <- inner_join(upper_lower_damage, cotu, join_by(Sample_name, Species, E_load))#Should result in 196 observations and 575 variables

#Anti join check
filter_filter <- anti_join(leaf_damage_filter, cotu, by = c("Sample_name")) #should turn 0 observations and 575 variables
```

```{r, Highest_lowest_leaf_damage_herb_pathogen}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
# Recoded dataset for indicator species analysis
#Making vector of groups for analysis

#NA removal
herb_recoded_filtered <- leaf_damage_filter |>
  filter(!(is.na(herbivory_level)))

#Removal of first 6 columns. Tidyverse solution resulted in the addition of "missing grouping variables" error.
herb_recoded_filtered <- herb_recoded_filtered[, 7:ncol(herb_recoded_filtered)]

#High and low leaf damage by herbivory analysis
#Comparing High and Low groups: What OTUs are corrrelated with these groups?
herb_level <- na.omit(leaf_damage_filter$herbivory_level)

herb_multipatt = multipatt(herb_recoded_filtered, herb_level, func = "r.g", control = how(nperm=999))

#By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"

#summary(herb_multipatt, indvalcomp = TRUE)

#High and low leaf damage by pathogen analysis
#NA removal
patho_recoded_filtered <- leaf_damage_filter |>
  filter(!(is.na(pathogen_level)))

#Removal of first 6 columns.
patho_recoded_filtered <- patho_recoded_filtered[, 7:ncol(patho_recoded_filtered)]

#Comparing High and Low groups: What OTUs are corrrelated with these groups?
patho_level <- na.omit(leaf_damage_filter$pathogen_level)

patho_multipatt = multipatt(patho_recoded_filtered, patho_level, func = "r.g", control = how(nperm=999))

#summary(patho_multipatt, indvalcomp = TRUE)
```

```{r, supptable_S6}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs that are significantly correlated to different levels of leaf herbivory damage"
#Herbivory results
#Extract table of stats
herb_multipatt_sign <- as.data.table(herb_multipatt$sign, keep.rownames=TRUE)

#Add adjusted p-value
herb_multipatt_sign[ , p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# It doesn't make much sense here to adjust the p-value because the groups(herb_levels) are small. 

#Now can select only the indicators with significant p-values
herb_multipatt_corrected <- herb_multipatt_sign[p.value <= 0.05,]

#renaming the first column
colnames(herb_multipatt_corrected)[1]  <- "OTU" 



#Table of OTUs and respective taxonomic information that are significantly correlated to high and low leaf herbivory damage
herb_multipatt_taxonomy <- left_join(newpqDF, herb_multipatt_corrected, join_by(OTU))

herb_multipatt_taxonomy <- herb_multipatt_taxonomy |>
  filter(p.value <= 0.05) |>
  select(!c(9:164)) |>
  as.tibble()

#Saving table
#write.csv(herb_multipatt_taxonomy, "./post_stat_analyses_data/high_low_herbivory_OTUs.csv")

#herb_multipatt_taxonomy <- read.csv("./post_stat_analyses_data/high_low_herbivory_OTUs.csv")

# gt table

#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S6 <- gt(herb_multipatt_taxonomy |>
  mutate(across(s.high:s.medium, na_if, 0), Herbivory =
           case_when(s.high  == 1 ~ "High",
                                s.medium == 1 ~ "Medium",
                                 s.low == 1 ~ "Low"),
         p.value = makeStars(p.value)) |>
  select(!c(s.high:s.medium)) |>
  relocate(OTU, Herbivory, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Herbivory")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Herbivory damage") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
  fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
   tab_style(
   style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
   ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with *Atta colombica* herbivory levels")) |>
  tab_footnote(
    footnote = md("High = >70% leaf area damage, Medium = 31-69% leaf area damage, Low = <30% leaf area damage"),
    locations = cells_stubhead()
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S6 

#gtsave(supptable_S6, file = "Aim3_supptable_S6_12JAN2024.docx", path = "./tables")
```

## Table S7

```{r, supptable_S7}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs that are significantly correlated to high and low levels leaf pathogen damage"
#Pathogen damage results
#Extract table of stats
patho_multipatt_sign <- as.data.table(patho_multipatt$sign, keep.rownames=TRUE)

#Add adjusted p-value
patho_multipatt_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
# It doesn't make much sense here to adjust the p-value because the groups(patho_levels) are small. 

#Now can select only the indicators with significant p-values
patho_multipatt_corrected <- patho_multipatt_sign[p.value <= 0.05,]

#renaming the first column
colnames(patho_multipatt_corrected)[1]  <- "OTU" 



#Table of OTUs and respective taxonomic information that are significantly correlated to high and low leaf pathogen damage
patho_multipatt_taxonomy <- left_join(newpqDF, patho_multipatt_corrected, join_by(OTU))

patho_multipatt_taxonomy <- patho_multipatt_taxonomy |>
  filter(p.value <= 0.05) |>
  select(!c(9:164)) 

#Saving table
#write.csv(patho_multipatt_taxonomy, "./post_stat_analyses_data/high_low_pathogen_OTUs.csv")
# gt table
#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S7 <- gt(patho_multipatt_taxonomy |>
  mutate(across(s.high:s.low, na_if, 0), Pathogen =
           case_when(s.high  == 1 ~ "High",
                                 s.low == 1 ~ "Low"),
         p.value = makeStars(p.value)) |>
  select(!c(s.high:s.low)) |>
  relocate(OTU, Pathogen, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Pathogen")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Pathogen damage") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
     tab_style(
   style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
   ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
    fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with *Calonectria* sp. pathogen damage levels")) |>
  tab_footnote(
    footnote = md("High = >30% leaf area damage, Low = <29% leaf area damage"),
    locations = cells_stubhead()
  ) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S7 

#gtsave(supptable_S7, file = "Aim3_supptable_S7_12JAN2024.docx", path = "./tables")
```

## Table S8

```{r, Eload_multipatt_analysis}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
species_corr_matrix <- cotu[, 4:ncol(cotu)]

eload <- cotu$E_load

eload_multipatt_analysis <- multipatt(species_corr_matrix, eload, func = "r.g", control = how(nperm=999)) #By using abundance data and not presence-absence we are calculating the "point biserial correlation coefficient"
#multipatt_analysis

#summary(eload_multipatt_analysis, indvalcomp = TRUE)
```

```{r, supptable_S8}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Taxonomic information of OTUs significantly correlated with FEF inoculation levels"
#Correcting for type 1 error and multiple comparisons
#Extract table of stats
eload_multipatt_analysis_sign <- as.data.table(eload_multipatt_analysis$sign, keep.rownames=TRUE)

#Add adjusted p-value
eload_multipatt_analysis_sign[, p.adj := p.adjust(p.value, method="BH")] #This can also be calculated with `dplyr` and `tidyr`
#indval.table <- indval.sign |>
  #mutate(p.value.bh = p.adjust(p.value, method = "BH"))

#Now we can select only the indicators with adjusted significant p-values
eload_multipatt_corrected <- eload_multipatt_analysis_sign[p.adj <= 0.05,]

#Renaming the first column
colnames(eload_multipatt_corrected)[1]  <- "OTU" 

#Table of OTUs and respective taxonomic information that are significantly correlated with FEF inoculation levels
eload_multipatt_taxonomy <- left_join(newpqDF, eload_multipatt_corrected, join_by(OTU))

eload_multipatt_taxonomy <- eload_multipatt_taxonomy |>
  filter(p.value <= 0.05) |>
  select(!c(9:164)) |>
  as.tibble()

#Saving table
#write.csv(eload_multipatt_taxonomy, "./post_stat_analyses_data/eload_levels_OTUs.csv")

# gt table
#Let's clean up the table a bit
#Some Stackoverflow magic
makeStars <- function(x){
  stars <- c("****", "***", "**", "*", "ns")
  vec <- c(0, 0.0001, 0.001, 0.01, 0.05, 1)
  i <- findInterval(x, vec)
  stars[i]
}

supptable_S8 <- gt(eload_multipatt_taxonomy |>
  mutate(across(`s.E-`:`s.E+`, na_if, 0), Treatment =
           case_when(`s.E-`  == 1 ~ "E-",
                                 `s.E+` == 1 ~ "E+"),
         p.value = makeStars(p.value)) |>
  select(!c(`s.E-`:`s.E+`)) |>
  relocate(OTU, Treatment, .after = species) |>
  rename_with(str_to_title, !OTU), 
  groupname_col = "Treatment")|>
  tab_options(row_group.as_column = TRUE) |>
  tab_stubhead(label = "Treatment level") |>
  tab_stub_indent(
    rows = tidyr::starts_with("Fungi"),
    indent = 2
  ) |>
  tab_spanner(
    label = md("Multilevel pattern analysis"),
    columns = c(
      Index:P.adj
    )
  ) |>
  cols_label(
    P.value = md("*p*"),
    P.adj = md("*p*<sub>adj<sub>")
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_row_groups()
    ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = list(cells_column_labels(), cells_stubhead())
    ) |>
    text_replace(
    locations = cells_body(columns = OTU),
    pattern = "_",
    replacement = " "
  ) |>
     text_replace(
    locations = cells_body(columns = Species),
    pattern = "_",
    replacement = " "
  ) |>
    tab_style(
      style =  cell_text(style = "italic"),
    locations = cells_body(columns = Species)
  ) |>
    fmt_number(
    columns = c(Stat:P.adj),
    decimals = 3
  ) |>
  tab_header(
    title = md("Taxonomy of significantly correlated OTUs with FEF inoculation levels")) |>
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = P.value)
  ) |>
  tab_footnote(
    footnote = md("Benjamini & Hochberg method adjustment for multiple comparisons"),
    locations = cells_column_labels(columns = P.adj)
  ) |>
  opt_align_table_header(align = "center") |>
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
supptable_S8 


#gtsave(supptable_S8, file = "Aim3_supptable_S8_14JAN2024.docx", path = "./tables")
```

## Table S9

```{r, supptable_S9}
#| echo: false
#| eval: false
#| tidy: true
#| warning: false
#| tbl-cap: "Sterilization protocol for tropical tree seeds"


# sect_properties <- prop_section(
#   page_size = page_size(
#     orient = "portrait",
#     width = 8.25, height = 11.7
#   ),
#   type = "continuous",
#   page_margins = page_mar()
# )

#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 2)

sterile_protocol <- hux(
  "Tree Species" = c("Apeiba membranacea", 
                            "Chrysophylum cainito", 
                            "Cordia alliodora",
                            "Dypterix sp.",
                            "Heisteria concinna",
                            "Lacmellea panamensis",
                            "Theobroma cacao"), 
  "Number of seed collected" = c("500",
                                 "100",
                                 "403",
                                 "~100",
                                 "250",
                                 "75",
                                 "44"),
  "Number of maternal sources" = c("3",
                                   "1",
                                   "1",
                                   "1",
                                   "~6",
                                   "3",
                                   "1"),
  "Sterilization protocol" = c("Soak in water 3-5 days; 0.5% NaClO for 4 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.5% NaClO for 4 minutes, 70% EtOH for 5 minutes",
                               "Soak in water 1 day; 0.5% NaClo for 3 minutes; 50% EtOH for 3 minutes",
                               "Soak in water 7 days; 0.5% NaClO for 5 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.5% NaClO for 4 minutes; 70% EtOH for 5 minutes",
                               "Soak in water 3-5 days; 0.25% NaClO for 3 minutes; 50% EtOH for 3 minutes",
                               "Rinsed seeds in running tap water; 0.5%  NaClO for 5 minutes")) 


sterile_protocol <- sterile_protocol|>
  set_all_padding(4) |> 
      set_outer_padding(0) |> 
      set_bold(row = 1, col = everywhere) |> 
      set_bottom_border(row = 1, col = everywhere) |> 
      set_width(1.1) |>
  theme_article() |>
  huxtable::as_flextable(column_to_header=TRUE) |>
  hline_bottom(part = "body", border = thick) |>
  hline_top(part = "body", border = thick) |>
  flextable::align(j = 1:3, align = "center", part = "all") |>
  flextable::italic(j = 1, i = 2:8, italic = TRUE, part = "body") |>
 # flextable::width(j = 1, width = 1.5, unit = "in") |>
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

sterile_protocol
#save_as_docx(sterile_protocol, path = "./tables/Aim3_supptable_S9_28JAN2024.docx")
```

## Figure S1a- S1b

```{r, suppfig_1}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Foliar endophytic fungi (FEF) colonization of seven tropical tree species in malt extract agar (MEA 2%). a) Comparison of mean percent colonization of leaves by FEF measured 7 days after placing leaf pieces on plates. Statistical significance was calculated with a Student's t-Test. Violin plots show the distribution of colonization values for all tree species within treatment groups (*E-* and *E+*). b) Comparison of mean percent colonization of leaves by FEF measured 7 days after culture. Violin plots show the distribution of percent colonization values for each species per treatment group. Pink filled violins represent low FEF group (*E-*) and yellow filled violins represent high FEF group (*E+*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]. "
Abun7a <- ggplot(data= data |>
                      group_by(Species, Sample_name, E_load, Leaf_ID) |>
                      summarise(Abun_7 = mean(Abun_7)),
                     aes(x = E_load, y = Abun_7)) +
  geom_violin(aes(fill = E_load)) +
  #geom_boxplot(width=0.1, color="grey30", alpha=0.2) +
  geom_crossbar(stat="summary", 
                fun = mean, 
                fun.max = mean,
                fun.min = mean,  
                fatten = 2, 
                width = 0.5) +
  geom_point(color="grey30", 
             alpha = 0.4,
             size = 2, 
             position = position_jitter(w=0.05)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_y_continuous(labels = scales::percent) +
theme_classic(base_size = 12)+
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #axis.line.x.bottom = element_blank(), 
        strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA)) +
  labs(x="", y="Endophyte colonization (%)", face = "bold")+
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(size = 14),
        plot.title = element_text(color="black", size = 14, face="bold"),
        axis.text.x=element_blank()) +
  stat_compare_means(comparisons = list(c("E-", "E+")),
                     method = "t.test",
                     paired = T,
                     label = "p.signif", 
                     bracket.size = 0.65) 
  #facet_wrap(~Species, labeller = as_labeller(newname))
#Abun7a  
 
Abun7b <- ggplot(data= data |>
                      group_by(Species, Sample_name, E_load, Leaf_ID) |>
                      summarise(Abun_7 = mean(Abun_7)),
                     aes(x = E_load, y = Abun_7)) +
  geom_violin(aes(fill = E_load)) +
  #geom_boxplot(width=0.1, color="grey30", alpha=0.2) +
  geom_crossbar(stat="summary", 
                fun = mean, 
                fun.max = mean,
                fun.min = mean,  
                fatten = 2, 
                width = 0.5) +
  geom_point(color="grey30", 
             alpha = 0.4,
             size = 2, 
             position = position_jitter(w=0.05)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_y_continuous(expand = expansion(mult = 0.1), 
                     breaks = c(0, 0.25, 0.50, 0.75, 1),
                     labels = scales::percent) +
  #scale_y_continuous(labels = scales::percent) +
theme_classic(base_size = 8)+
  theme(
        panel.grid.major = element_line(colour = "grey"),
        panel.grid.minor = element_line(colour = "grey"),
        strip.background = element_rect(fill = "white"),
        axis.line.x.bottom = element_blank(),
        strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA)) +
  labs(x="", y="Endophyte colonization (%)", face = "bold")+
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(size = 14),
        plot.title = element_text(color="black", size = 14, face="bold"),
        axis.text.x=element_blank(),
        axis.text.y = element_text(size = 12), 
  axis.title.y=element_text(size = 12)) +
  stat_compare_means(comparisons = list(c("E-", "E+")),
                     method = "t.test",
                     label = "p.signif",
                     paired = T,
                     label.y = 1.03, 
                     bracket.size = 0.65) +
  facet_wrap(~Species, labeller = as_labeller(newname))


#Abun7b  

# Figure S1a-S1b
suppfig_1 <- ggarrange(Abun7a, Abun7b, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))

suppfig_1


#ggsave(filename="./figures/Aim3_FigS1_07JAN2024.png", plot = suppfig_1, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S2a-S2b

```{r, suppfig_2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of anthocyanin content (ACI) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of ACI means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of ACI means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*).Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

# Comparisons
mycomparisons <- list(c("APEIME", "CHRYCA"), c("APEIME", "CORDAL"), c("APEIME", "DYPTE"), c("APEIME", "HEISCO"),c("APEIME", "LACPA"), c("APEIME","THEOCA"),
                      c("CHRYCA","CORDAL"), c("CHRYCA","DYPTE"),c("CHRYCA","HEISCO"), c("CHRYCA","LACPA"), c("CHRYCA", "THEOCA"),
                      c("CORDAL","DYPTE"), c("CORDAL","HEISCO"), c("CORDAL","LACPA"), c("CORDAL","THEOCA"), 
                      c("DYPTE","HEISCO"), c("DYPTE","LACPA"), c("DYPTE","THEOCA"), 
                      c("HEISCO","LACPA"), c("HEISCO","THEOCA"), c("LACPA","THEOCA"))

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dypterix sp.", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")


#Comparison of means of ACI between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig2_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Anthocyanins ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig2a_compare_means <- compare_means(Anthocyanins ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig2b_compare_means <- compare_means(Anthocyanins ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

# Anthocyanins by endophyte load an species
ACIa <- ggplot(data = master, aes(x = E_load, y = Anthocyanins, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
    labs(x="", y=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)"))) +
    stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)

#ACIa


ACIb <- ggplot(data = master, aes(x = Species, y = Anthocyanins, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "anova",
                     paired = T,)

#ACIb

# Figure S1a S1b
suppfig_2 <- ggarrange(ACIa, ACIb, 
                       nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_2
#ggsave(filename="./figures/Aim3_FigS2_04JAN2024.png", plot = suppfig_2, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S3a-S3b

```{r, suppfig_3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf thickness (LT) (\u03Bcg) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LT means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LT means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*).Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#Comparison of means of LT between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig3_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Thickness ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig3a_compare_means <- compare_means(Thickness ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig3b_compare_means <- compare_means(Thickness ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Leaf thickness by endophyte load and species

LTa <- ggplot(data = master, aes(x = E_load, y = Thickness, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf thickness (",mu,"m)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)

#LTa


LTb <- ggplot(data = master, aes(x = Species, y = Thickness, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf thickness (",mu,"m)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "anova",
                     paired = T,)
#LTb

# Figure S3a S3b
suppfig_3 <- ggarrange(LTa, LTb, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_3

#ggsave(filename="./figures/Aim3_FigS3_03JAN2024.png", plot = suppfig_3, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously saved under name: Aim3_LT_Species_07062022.png
```

## Figure S4a-S4b

```{r, suppfig_4}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf punch strength (LPS) (N mm^-1) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LPS means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LPS means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*).Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."


#Comparison of means of LPS between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig4_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(Toughness ~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all species. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig4a_compare_means <- compare_means(Toughness ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig4b_compare_means <- compare_means(Toughness ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Figure S3
# Leaf toughness (lbf) by  endophyte load and species with data (data) ####
LPSa <- ggplot(data = master, aes( x = E_load, y = Toughness, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf punch strength (N mm","^-1)"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8) 
#LPSa

# 
#
LPSb <- ggplot(data = master, aes( x = Species, y = Toughness, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Leaf punch strength (N ", mm^-1,")"))) +
  stat_compare_means(label = "p.signif",
                     method = "anova",
                     paired = T,) +
  ylim(0.10, 1) 
#LPSb

# Figure S4a S4b
suppfig_4 <- ggarrange(LPSa, LPSb, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_4
#ggsave(filename="./figures/Aim3_FigS4_03JAN2024.png", plot = suppfig_4, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously named Aim3_LPS_Species_07062022.png

```

## Figure S5a-S5b

```{r, suppfig_5}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of leaf mass per area (LMA) (mg mm^2) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LMA means between treatment groups across individuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LMA means between treatment types of each species. Statistical significance was calculated with an analysis of variance (ANOVA). Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*). Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), and *p* < 0.001 (\\***)]."

#Comparison of means of LMA between E+ and E- samples per tree species
#rstatix package used for pairwise t-test
suppfig5_pairwise_t_test <- master |>
  group_by(Species) |>
  pairwise_t_test(LMA~ E_load,
         p.adjust.method = "BH",
  paired = TRUE,
  #var.equal = F,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95, 
  detailed = TRUE) 

#ggpubr package used for t.tests and plotting t-test comparisons
#E+ vs E- for all specie. To compare means of pathogen damage (%) between E+ and E- samples per species un-comment `group.by = "Species"` and change method to  "anova" in compare_means.
suppfig5a_compare_means <- compare_means(LMA ~ E_load,
         data = master,
         #group.by = "Species",
         method = "t.test",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)
#Roughly the same outcome as pairwise_t_test.
suppfig5b_compare_means <- compare_means(LMA ~ E_load,
         data = master,
         group.by = "Species",
         method = "anova",
         p.adjust.method = "BH",
  paired = TRUE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)


# Figure S5
# Leaf mass per area (LMA) by  endophyte load and species
LMAa <- ggplot(data = master, aes(x = E_load, y = LMA, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("LMA (mg ",mm^-2, ")"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     paired = T,
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)
#LMAa

LMAb <- ggplot(data = master, aes( x = Species, y = LMA, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("LMA (mg ",mm^-2, ")"))) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(label = "p.signif", 
                     method = "anova",
                     paired = T)

#LMAb

# Figure S5a-S5b
suppfig_5 <- ggarrange(LMAa, LMAb, nrow = 1, 
                       ncol=2, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))
suppfig_5
#ggsave(filename="./figures/Aim3_FigS5_04JAN2024.png", plot = suppfig_5, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S6a-S6b

```{r, suppfig_6}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Distributions of values and means of herbivory (%) and pathogen damage caused by *Atta colombica* and *Calonectria* sp. , respectively, in treatment groups (*E-* and *E+*) per tree species. a) Comparison of herbivory (%) means between treatment groups across individuals of all species. b) Comparison of pathogen (%) means between treatment groups across individuals of all species. Pink filled violins represent low FEF group (*E-*) and yellow filed violins represent high FEF group (*E+*). Statistical significance was calculated with an analysis of variance (ANOVA). Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), and *p* < 0.001 (\\***)]."

#Fig. S6a
herb_violin_a <-  ggplot(data = master, aes( x = Species, y = Ant_percent_leafloss, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Herbivory (%)"))) +

  stat_compare_means(label = "p.signif", 
                     method = "anova",
                     paired = T)
#herb_violin_b

#Fig. S6b
patho_violin_b <-  ggplot(data = master, aes( x = Species, y = Pathogen_percent_damage, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 12) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 12)) +
  labs(x="", y= expression(paste("Pathogen damage (%)"))) +

  stat_compare_means(label = "p.signif", 
                     method = "anova",
                     paired = T) +
   guides(color = "none")

#patho_violin_b


# Figure S6a-S6b
suppfig_6 <- ggarrange(herb_violin_a, patho_violin_b, nrow = 2, 
                       ncol=1, 
                       label.x = -0.015, vjust = 1, 
                       common.legend = TRUE,
                       legend="bottom", 
                       labels = c("(a)", "(b)"))

suppfig_6
#ggsave(filename="./figures/Aim3_FigS6_21JAN2024.png", plot = suppfig_6, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S7

```{r, suppfig_7}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Simple linear regressions of logit transfomed herbivory (%) and and leaf functional traits. a) Herbivory *vs.* leaf thickness (LT) (\u03Bcg) (R^2^-adjusted= 0.0811, *p* < 0.0001). b) Herbivory *vs.* LPS (N mm<sup>-1</sup>) (R^2^-adjusted= -0.0018, *p* = 0.429)). c) Herbivory *vs.* ACI (R^2^-adjusted= 0.0071, *p* = 0.116). d) Pathogen *vs.* LMA (mg mm^2) (R^2^-adjusted= -0.0008, *p* = 0.36). e) Herbivory *vs.* Shannon diversity index (R^2^-adjusted= 0.007 , *p* = 0.12). Pink filled line and shapes represent low FEF group (*E-*) and yellow filled line and shapes represent high FEF group (*E+*). Black line represents the linear regression on all observations. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."
# Herbivory and Toughness
#Simple linear regression
#summary(lm(logit_herbivory ~ Toughness, data = masterant2))
 
herb_lps <- ggplot(data = masterant2, aes(y= logit_herbivory, x = Toughness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("Leaf punch strength (N mm","^-1)")), y = "logit[Herbivory (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#herb_lps


# Herbivory and Anthocyanins
#Simple linear regression
#summary(lm(logit_herbivory ~ Anthocyanins, data = masterant2))

herb_aci <- ggplot(data = masterant2, aes(y= logit_herbivory, x = Anthocyanins, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)")), y = "logit[Herbivory (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#herb_aci
#scale_shape_manual(values = c(1:7))

# Herbivory and leaf thickness
#Simple linear regression
#summary(lm(logit_herbivory ~ Thickness, data = masterant2))

herb_lt <- ggplot(data = masterant2, aes(y= logit_herbivory, x = Thickness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("Leaf thickness (",mu,"m)")), y = "logit[Herbivory (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend

#herb_lt

# Herbivory and LMA
#Simple linear regression
#summary(lm(logit_herbivory ~ LMA, data = masterant2))

herb_lma <- ggplot(data = masterant2, aes(y= logit_herbivory, x = LMA, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x= expression(paste("LMA (mg ",mm^-2, ")")), y = "logit[Herbivory (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7)) 
#herb_lma

# Herbivory and FEF Shannon Diversity
#Simple linear regression
#summary(lm(logit_herbivory ~ Shannon, data = masterant2))

#Simple linear regression by E_load

#E- summary 
#summary(lm(logit_herbivory ~ Shannon, data = masterant2[masterant2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_herbivory ~ Shannon, data = masterant2[masterant2$E_load == "E+",]))



herb_shannon <- ggplot(data = masterant2, aes(y= logit_herbivory, x = Shannon, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black") +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x= "Shannon's Diversity Index", y = "logit[Herbivory (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7)) 
 



 # Multiples plots together

suppfig_S7 <- ggarrange(herb_lt, herb_lps, herb_aci, herb_lma, herb_shannon, 
                          nrow = 2, 
                          ncol=3, 
                          common.legend = TRUE, 
                          labels = c("(a)", "(b)", "(c)", "(d)", "(e)"),
                          legend="bottom")

suppfig_S7

#ggsave(filename = "./figures/Aim3_FigS7_21JAN024.jpg", plot = suppfig_S7, dpi=600, units=c("mm"), width=250, height=200, bg = "white")

```

## Figure S8

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.height: 6
#| fig.width: 6
#| fig.cap: "Simple linear regressions of logit transformed pathogen damage (%) and and leaf functional traits. a) Pathogen damage *vs.* leaf thickness (LT) (\u03Bcg) (R^2^-adjusted= -0.0013, *p* = 0.482). b) Pathogen damage *vs.* LPS (N mm<sup>-1</sup>) (R^2^-adjusted= 0.0782, *p* < 0.0001)). c) Pathogen damage *vs.* ACI (R^2^-adjusted= 0.0338, *p* < 0.001). d) Pathogen *vs.* LMA (mg mm^2) (R^2^-adjusted= 0.0295, *p* < 0.001). e) Pathogen damage *vs.* Shannon diversity index (R^2^-adjusted= 0.0152 , *p* < 0.001). Pink filled line and shapes represent low FEF group (*E-*) and yellow filled line and shapes represent high FEF group (*E+*). Black line represents the linear regression on all observations. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."
# Pathogen
# Pathogen damage and Toughness
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Toughness, data = masterpat2)) 

patho_lps <- ggplot(data = masterpat2, aes(y= logit_pathogenicity, x = Toughness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("Leaf punch strength (N mm","^-1)")), y = "logit[Pathogen damage (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#patho_lps


# Pathogen damage and Anthocyanins
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Anthocyanins, data = masterpat2))

patho_aci <- ggplot(data = masterpat2, aes(y= logit_pathogenicity, x = Anthocyanins, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)")), y = "logit[Pathogen damage (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend
#patho_aci
#scale_shape_manual(values = c(1:7))

# Pathogen damage and leaf thickness
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Thickness, data = masterpat2))

patho_lt <- ggplot(data = masterpat2, aes(y= logit_pathogenicity, x = Thickness, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x=expression(paste("Leaf thickness (",mu,"m)")), y = "logit[Pathogen damage (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7))  +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none") #To turn off shape legend

#patho_lt

# Pathogen damage and LMA
#Simple linear regression
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2))

#E- summary
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2[masterpat2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_pathogenicity ~ LMA, data = masterpat2[masterpat2$E_load == "E+",]))

patho_lma <- ggplot(data = masterpat2, aes(y= logit_pathogenicity, x = LMA, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x= expression(paste("LMA (mg ",mm^-2, ")")), y = "logit[Pathogen damage (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7)) 
#patho_lma

# Pathogen damage and FEF Shannon Diversity
#Simple linear regression
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2))

#E- summary
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2[masterpat2$E_load == "E-",]))

#E+ summary
#summary(lm(logit_pathogenicity ~ Shannon, data = masterpat2[masterpat2$E_load == "E+",]))

# Extracting effect size of model to plot
patho_shannon <- ggplot(data = masterpat2, aes(y= logit_pathogenicity, x = Shannon, color = E_load)) +
  geom_jitter(aes(color = E_load, shape = Species), 
               size = 3, 
               alpha = 0.7) +
  geom_smooth(method=lm, se = F) +
  geom_smooth(method = lm, 
              se = T , 
              level = 0.95, 
              na.rm = F, 
              color = "black", 
              size = 0.75) +
  scale_shape_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix sp.", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = c(15:22)) +
  scale_color_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = met.brewer(name = "Cross", n = 2, type="discrete")) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 5,
                        aes(label = ..eq.label..), 
                        color= "black") +
  labs(x= "Shannon's Diversity Index", y = "logit[Pathogen damage (%)]") +
  theme_classic(base_size = 10) +
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "italic",
                                   size = 12),
        axis.text.x=element_text(size = 7),
        axis.text.y=element_text(size = 7)) 
 
patho_shannon


 # Multiples plots together

suppfig_S8 <- ggarrange(patho_lt, patho_lps, patho_aci, patho_lma, patho_shannon, 
                          nrow = 2, 
                          ncol=3, 
                          common.legend = TRUE, 
                          labels = c("(a)", "(b)", "(c)", "(d)", "(e)"),
                          legend="bottom")

suppfig_S8
#Saving
#ggsave(filename ="./figures/Aim3_FigS8_21JAN2024.jpg", plot = suppfig_S8, dpi= 600, units=c("mm"), width=250, height=200, bg = "white")
```

## Figure S9

::: {#fig-S9}
![Simple linear regression on even and tiered mock FEF communities.](mock_files/mock_regressions.png){width="6in"}
:::

## Supplementary Material - Methods

#### Seed collection and sterilization

Seeds were prepared for germination within 24 hours of fruit collection on BCI, January - April 2019. Fruits were peeled to extract seeds, cleaned, put in water to swell embryo, sterilized, and planted in sterile soil germination trays (75% soil; 25% sand). Soil was autoclaved at 121 °C in two, one hour cycles. Seeds were surface sterilized using 10% bleach for 3 minutes followed by 70% ethanol for 3 minutes.

#### Germination Tray and 24-pot tray sterilization

Plastic germination trays and 24-cell trays were sterilized in a 10% bleach bath for 20 minutes, sprayed with 70% ethanol, and paper towel dried right before adding soil/planting.

#### Planting in germination trays

The sterile soil is added to an sterilized plastic germination tray, combined with water well until it is wet and has a cookie dough-like consistency. Seeds were then added to moist soil. A sprinkle of dry soil is added to as a top layer to discourage pathogen spores from landing in the wet surface soil.

#### Seedling transfer into pots

Once seeds germinated, seedlings were transferred to pots by wetting the soil and extracting intact root system. Seedling were immediately placed in pot with sterile soil using a small shovel after uprooting from germination tray. Hands were sprayed with 70% ethanol when switching from handling one species to handling another. Plants were watered as needed at the soil level and 25mL of MiracleGro all-purpose plant food was added to every seedling once a month throughout entirety of experiment.
